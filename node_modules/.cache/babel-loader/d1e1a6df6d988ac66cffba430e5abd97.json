{"ast":null,"code":"var _jsxFileName = \"/Users/evan/progressMan/src/routes/Widgets/Charts/G2/components/Line.js\";\nimport React from 'react';\nimport G2 from 'components/Charts/G2';\nimport DataSet from '@antv/data-set';\nvar Chart = G2.Chart,\n    Axis = G2.Axis,\n    Geom = G2.Geom,\n    Tooltip = G2.Tooltip,\n    Legend = G2.Legend;\nvar data = [{\n  month: 'Jan',\n  Tokyo: 7.0,\n  London: 3.9\n}, {\n  month: 'Feb',\n  Tokyo: 6.9,\n  London: 4.2\n}, {\n  month: 'Mar',\n  Tokyo: 9.5,\n  London: 5.7\n}, {\n  month: 'Apr',\n  Tokyo: 14.5,\n  London: 8.5\n}, {\n  month: 'May',\n  Tokyo: 18.4,\n  London: 11.9\n}, {\n  month: 'Jun',\n  Tokyo: 21.5,\n  London: 15.2\n}, {\n  month: 'Jul',\n  Tokyo: 25.2,\n  London: 17.0\n}, {\n  month: 'Aug',\n  Tokyo: 26.5,\n  London: 16.6\n}, {\n  month: 'Sep',\n  Tokyo: 23.3,\n  London: 14.2\n}, {\n  month: 'Oct',\n  Tokyo: 18.3,\n  London: 10.3\n}, {\n  month: 'Nov',\n  Tokyo: 13.9,\n  London: 6.6\n}, {\n  month: 'Dec',\n  Tokyo: 9.6,\n  London: 4.8\n}];\nvar ds = new DataSet();\nvar dv = ds.createView().source(data);\ndv.transform({\n  type: 'fold',\n  fields: ['Tokyo', 'London'],\n  // 展开字段集\n  key: 'city',\n  // key字段\n  value: 'temperature' // value字段\n\n});\nvar cols = {\n  month: {\n    range: [0, 1]\n  }\n};\nexport default (function (props) {\n  return React.createElement(Chart, {\n    data: dv,\n    scale: cols,\n    forceFit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Axis, {\n    name: \"month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Axis, {\n    name: \"temperature\",\n    label: {\n      formatter: function formatter(val) {\n        return \"\".concat(val, \"\\xB0C\");\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    crosshairs: {\n      type: 'y'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Geom, {\n    type: \"line\",\n    position: \"month*temperature\",\n    size: 2,\n    color: 'city',\n    shape: 'smooth',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Geom, {\n    type: \"point\",\n    position: \"month*temperature\",\n    size: 4,\n    shape: 'circle',\n    color: 'city',\n    style: {\n      stroke: '#fff',\n      lineWidth: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/routes/Widgets/Charts/G2/components/Line.js"],"names":["React","G2","DataSet","Chart","Axis","Geom","Tooltip","Legend","data","month","Tokyo","London","ds","dv","createView","source","transform","type","fields","key","value","cols","range","props","formatter","val","stroke","lineWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport G2 from 'components/Charts/G2';\nimport DataSet from '@antv/data-set';\nconst { Chart, Axis, Geom, Tooltip, Legend } = G2;\n\nconst data = [\n  { month: 'Jan', Tokyo: 7.0, London: 3.9 },\n  { month: 'Feb', Tokyo: 6.9, London: 4.2 },\n  { month: 'Mar', Tokyo: 9.5, London: 5.7 },\n  { month: 'Apr', Tokyo: 14.5, London: 8.5 },\n  { month: 'May', Tokyo: 18.4, London: 11.9 },\n  { month: 'Jun', Tokyo: 21.5, London: 15.2 },\n  { month: 'Jul', Tokyo: 25.2, London: 17.0 },\n  { month: 'Aug', Tokyo: 26.5, London: 16.6 },\n  { month: 'Sep', Tokyo: 23.3, London: 14.2 },\n  { month: 'Oct', Tokyo: 18.3, London: 10.3 },\n  { month: 'Nov', Tokyo: 13.9, London: 6.6 },\n  { month: 'Dec', Tokyo: 9.6, London: 4.8 }\n];\nconst ds = new DataSet();\nconst dv = ds.createView().source(data);\ndv.transform({\n  type: 'fold',\n  fields: ['Tokyo', 'London'], // 展开字段集\n  key: 'city', // key字段\n  value: 'temperature' // value字段\n});\n\nconst cols = {\n  month: {\n    range: [0, 1]\n  }\n};\n\nexport default props => (\n  <Chart data={dv} scale={cols} forceFit>\n    <Legend />\n    <Axis name=\"month\" />\n    <Axis name=\"temperature\" label={{ formatter: val => `${val}°C` }} />\n    <Tooltip crosshairs={{ type: 'y' }} />\n    <Geom\n      type=\"line\"\n      position=\"month*temperature\"\n      size={2}\n      color={'city'}\n      shape={'smooth'}\n    />\n    <Geom\n      type=\"point\"\n      position=\"month*temperature\"\n      size={4}\n      shape={'circle'}\n      color={'city'}\n      style={{ stroke: '#fff', lineWidth: 1 }}\n    />\n  </Chart>\n);\n"]},"metadata":{},"sourceType":"module"}