{"ast":null,"code":"import _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/evan/progressMan/src/components/Charts/ECharts/EC.js\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport echarts from 'echarts/lib/echarts';\nimport resizeMe from '@/decorator/resizeMe';\nimport isEqual from 'react-fast-compare';\n/**\n * 基于ECharts 4的简单封装 fork自https://github.com/hustcc/echarts-for-react/blob/master/src/core.jsx\n */\n\nvar ECharts = (_dec = resizeMe({\n  refreshRate: 50\n}), _dec(_class = (_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ECharts, _Component);\n\n  function ECharts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ECharts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ECharts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getEchartsInstance = function () {\n      return echarts.getInstanceByDom(_this.echartsElement) || echarts.init(_this.echartsElement, _this.props.theme, _this.props.opts);\n    };\n\n    _this.dispose = function () {\n      if (_this.echartsElement) {\n        // dispose echarts instance\n        echarts.dispose(_this.echartsElement);\n      }\n    };\n\n    _this.rerender = function () {\n      var _this$props = _this.props,\n          onEvents = _this$props.onEvents,\n          onChartReady = _this$props.onChartReady;\n      _this.echartObj = _this.renderEchartDom();\n\n      _this.bindEvents(_this.echartObj, onEvents || {}); // on chart ready\n\n\n      if (typeof onChartReady === 'function') _this.props.onChartReady(_this.echartObj);\n    };\n\n    _this.bindEvents = function (instance, events) {\n      var _bindEvent = function _bindEvent(eventName, func) {\n        // ignore the event config which not satisfy\n        if (typeof eventName === 'string' && typeof func === 'function') {\n          // binding event\n          // instance.off(eventName); // 已经 dispose 在重建，所以无需 off 操作\n          instance.on(eventName, function (param) {\n            func(param, instance);\n          });\n        }\n      }; // loop and bind\n\n\n      for (var eventName in events) {\n        if (Object.prototype.hasOwnProperty.call(events, eventName)) {\n          _bindEvent(eventName, events[eventName]);\n        }\n      }\n    };\n\n    _this.renderEchartDom = function () {\n      // init the echart object\n      var echartObj = _this.getEchartsInstance(); // set the echart option\n\n\n      echartObj.setOption(_this.props.option, _this.props.notMerge || false, _this.props.lazyUpdate || false); // set loading mask\n\n      if (_this.props.showLoading) echartObj.showLoading(_this.props.loadingOption || null);else echartObj.hideLoading();\n      return echartObj;\n    };\n\n    return _this;\n  }\n\n  _createClass(ECharts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.rerender();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      // 以下属性修改的时候，需要 dispose 之后再新建\n      // 1. 切换 theme 的时候\n      // 2. 修改 opts 的时候\n      // 3. 修改 onEvents 的时候，这样可以取消所以之前绑定的事件 issue #151\n      if (prevProps.theme !== this.props.theme || !isEqual(prevProps.opts, this.props.opts) || !isEqual(prevProps.onEvents, this.props.onEvents)) {\n        this.dispose();\n        this.rerender(); // 重建\n\n        return;\n      } // 大小改变时, 样式修改的时候，可能会导致大小变化，所以触发一下 resize\n\n\n      if (!isEqual(prevProps.size, this.props.size) || !isEqual(prevProps.style, this.props.style) || !isEqual(prevProps.className, this.props.className)) {\n        try {\n          this.echartObj.resize();\n        } catch (e) {\n          console.warn(e);\n        }\n      } // 当这些属性保持不变的时候，不 setOption\n\n\n      var pickKeys = ['option', 'notMerge', 'lazyUpdate', 'showLoading', 'loadingOption'];\n\n      if (!pickKeys.some(function (item) {\n        return !isEqual(prevProps[item], _this2.props[item]);\n      })) {\n        return;\n      } // 判断是否需要 setOption，由开发者自己来确定。默认为 true\n\n\n      if (!this.props.shouldSetOption(prevProps, this.props)) {\n        return;\n      }\n\n      this.echartObj = this.renderEchartDom();\n    } // remove\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.dispose();\n    } // return the echart object\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          size = _this$props2.size,\n          style = _this$props2.style,\n          id = _this$props2.id,\n          className = _this$props2.className;\n      var width = size.width,\n          height = size.height;\n\n      var newStyle = _objectSpread({\n        height: height,\n        width: width\n      }, style);\n\n      return React.createElement(\"div\", {\n        ref: function ref(e) {\n          _this3.echartsElement = e;\n        },\n        style: newStyle,\n        id: id,\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ECharts;\n}(Component), _temp)) || _class);\nECharts.propTypes = {\n  option: PropTypes.object.isRequired,\n  // eslint-disable-line react/forbid-prop-types\n  echarts: PropTypes.object,\n  // eslint-disable-line react/forbid-prop-types\n  notMerge: PropTypes.bool,\n  lazyUpdate: PropTypes.bool,\n  style: PropTypes.object,\n  // eslint-disable-line react/forbid-prop-types\n  className: PropTypes.string,\n  theme: PropTypes.string,\n  onChartReady: PropTypes.func,\n  showLoading: PropTypes.bool,\n  loadingOption: PropTypes.object,\n  // eslint-disable-line react/forbid-prop-types\n  onEvents: PropTypes.object,\n  // eslint-disable-line react/forbid-prop-types\n  opts: PropTypes.shape({\n    devicePixelRatio: PropTypes.number,\n    renderer: PropTypes.oneOf(['canvas', 'svg']),\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf([null, undefined, 'auto'])]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf([null, undefined, 'auto'])])\n  }),\n  shouldSetOption: PropTypes.func\n};\nECharts.defaultProps = {\n  echarts: {},\n  notMerge: false,\n  lazyUpdate: false,\n  style: {},\n  className: '',\n  theme: null,\n  onChartReady: function onChartReady() {},\n  showLoading: false,\n  loadingOption: null,\n  onEvents: {},\n  opts: {},\n  shouldSetOption: function shouldSetOption() {\n    return true;\n  }\n};\nexport { echarts };\nexport default ECharts;","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Charts/ECharts/EC.js"],"names":["React","Component","PropTypes","echarts","resizeMe","isEqual","ECharts","refreshRate","getEchartsInstance","getInstanceByDom","echartsElement","init","props","theme","opts","dispose","rerender","onEvents","onChartReady","echartObj","renderEchartDom","bindEvents","instance","events","_bindEvent","eventName","func","on","param","Object","prototype","hasOwnProperty","call","setOption","option","notMerge","lazyUpdate","showLoading","loadingOption","hideLoading","prevProps","size","style","className","resize","e","console","warn","pickKeys","some","item","shouldSetOption","id","width","height","newStyle","propTypes","object","isRequired","bool","string","shape","devicePixelRatio","number","renderer","oneOf","oneOfType","undefined","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport echarts from 'echarts/lib/echarts';\nimport resizeMe from '@/decorator/resizeMe';\nimport isEqual from 'react-fast-compare';\n\n/**\n * 基于ECharts 4的简单封装 fork自https://github.com/hustcc/echarts-for-react/blob/master/src/core.jsx\n */\n@resizeMe({ refreshRate: 50 })\nclass ECharts extends Component {\n  componentDidMount() {\n    this.rerender();\n  }\n\n  componentDidUpdate(prevProps) {\n    // 以下属性修改的时候，需要 dispose 之后再新建\n    // 1. 切换 theme 的时候\n    // 2. 修改 opts 的时候\n    // 3. 修改 onEvents 的时候，这样可以取消所以之前绑定的事件 issue #151\n    if (\n      prevProps.theme !== this.props.theme ||\n      !isEqual(prevProps.opts, this.props.opts) ||\n      !isEqual(prevProps.onEvents, this.props.onEvents)\n    ) {\n      this.dispose();\n\n      this.rerender(); // 重建\n      return;\n    }\n\n    // 大小改变时, 样式修改的时候，可能会导致大小变化，所以触发一下 resize\n    if (\n      !isEqual(prevProps.size, this.props.size) ||\n      !isEqual(prevProps.style, this.props.style) ||\n      !isEqual(prevProps.className, this.props.className)\n    ) {\n      try {\n        this.echartObj.resize();\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n\n    // 当这些属性保持不变的时候，不 setOption\n    const pickKeys = [\n      'option',\n      'notMerge',\n      'lazyUpdate',\n      'showLoading',\n      'loadingOption'\n    ];\n    if (!pickKeys.some(item => !isEqual(prevProps[item], this.props[item]))) {\n      return;\n    }\n\n    // 判断是否需要 setOption，由开发者自己来确定。默认为 true\n    if (!this.props.shouldSetOption(prevProps, this.props)) {\n      return;\n    }\n\n    this.echartObj = this.renderEchartDom();\n  }\n\n  // remove\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  // return the echart object\n  getEchartsInstance = () =>\n    echarts.getInstanceByDom(this.echartsElement) ||\n    echarts.init(this.echartsElement, this.props.theme, this.props.opts);\n\n  // dispose echarts\n  dispose = () => {\n    if (this.echartsElement) {\n      // dispose echarts instance\n      echarts.dispose(this.echartsElement);\n    }\n  };\n\n  rerender = () => {\n    const { onEvents, onChartReady } = this.props;\n\n    this.echartObj = this.renderEchartDom();\n    this.bindEvents(this.echartObj, onEvents || {});\n\n    // on chart ready\n    if (typeof onChartReady === 'function')\n      this.props.onChartReady(this.echartObj);\n  };\n\n  // bind the events\n  bindEvents = (instance, events) => {\n    const _bindEvent = (eventName, func) => {\n      // ignore the event config which not satisfy\n      if (typeof eventName === 'string' && typeof func === 'function') {\n        // binding event\n        // instance.off(eventName); // 已经 dispose 在重建，所以无需 off 操作\n        instance.on(eventName, param => {\n          func(param, instance);\n        });\n      }\n    };\n\n    // loop and bind\n    for (const eventName in events) {\n      if (Object.prototype.hasOwnProperty.call(events, eventName)) {\n        _bindEvent(eventName, events[eventName]);\n      }\n    }\n  };\n\n  // render the dom\n  renderEchartDom = () => {\n    // init the echart object\n    const echartObj = this.getEchartsInstance();\n    // set the echart option\n    echartObj.setOption(\n      this.props.option,\n      this.props.notMerge || false,\n      this.props.lazyUpdate || false\n    );\n    // set loading mask\n    if (this.props.showLoading)\n      echartObj.showLoading(this.props.loadingOption || null);\n    else echartObj.hideLoading();\n\n    return echartObj;\n  };\n\n  render() {\n    const { size, style, id, className } = this.props;\n    const { width, height } = size;\n\n    const newStyle = {\n      height,\n      width,\n      ...style\n    };\n\n    return (\n      <div\n        ref={e => {\n          this.echartsElement = e;\n        }}\n        style={newStyle}\n        id={id}\n        className={className}\n      />\n    );\n  }\n}\n\nECharts.propTypes = {\n  option: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  echarts: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  notMerge: PropTypes.bool,\n  lazyUpdate: PropTypes.bool,\n  style: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  className: PropTypes.string,\n  theme: PropTypes.string,\n  onChartReady: PropTypes.func,\n  showLoading: PropTypes.bool,\n  loadingOption: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  onEvents: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  opts: PropTypes.shape({\n    devicePixelRatio: PropTypes.number,\n    renderer: PropTypes.oneOf(['canvas', 'svg']),\n    width: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf([null, undefined, 'auto'])\n    ]),\n    height: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.oneOf([null, undefined, 'auto'])\n    ]),\n  }),\n  shouldSetOption: PropTypes.func,\n};\n\nECharts.defaultProps = {\n  echarts: {},\n  notMerge: false,\n  lazyUpdate: false,\n  style: {},\n  className: '',\n  theme: null,\n  onChartReady: () => {},\n  showLoading: false,\n  loadingOption: null,\n  onEvents: {},\n  opts: {},\n  shouldSetOption: () => true,\n};\n\nexport { echarts };\nexport default ECharts;\n"]},"metadata":{},"sourceType":"module"}