{"ast":null,"code":"/* eslint-disable */\n\n/*\n    patternLock.js v 1.1.1\n    Author: Sudhanshu Yadav, Nimiq Foundation\n    Copyright (c) 2015,2016 Sudhanshu Yadav - github.com/nimiq/patternLock , released under the MIT license.\n    Copyright (c) 2018 Nimiq Foundation - nimiq.com , released under the MIT license.\n*/\nexport default (function (window, undefined) {\n  var document = window.document;\n\n  var nullFunc = function nullFunc() {},\n      objectHolder = {}; //internal functions\n\n\n  function readyDom(iObj) {\n    var holder = iObj.holder,\n        option = iObj.option,\n        matrix = option.matrix,\n        margin = option.margin,\n        radius = option.radius,\n        html = ['<ul class=\"patt-wrap\" style=\"padding:' + margin + 'px\">'];\n\n    for (var i = 0, ln = matrix[0] * matrix[1]; i < ln; i++) {\n      html.push('<li class=\"patt-circ\" style=\"margin:' + margin + 'px; width : ' + radius * 2 + 'px; height : ' + radius * 2 + 'px; -webkit-border-radius: ' + radius + 'px; -moz-border-radius: ' + radius + 'px; border-radius: ' + radius + 'px; \"><div class=\"patt-dots\"></div></li>');\n    }\n\n    html.push('</ul>');\n    holder.innerHTML = html.join('');\n    holder.style.width = matrix[1] * (radius * 2 + margin * 2) + margin * 2 + 'px';\n    holder.style.height = matrix[0] * (radius * 2 + margin * 2) + margin * 2 + 'px'; //select pattern circle\n\n    iObj.pattCircle = iObj.holder.querySelectorAll('.patt-circ');\n  } //return height and angle for lines\n\n\n  function getLengthAngle(x1, x2, y1, y2) {\n    var xDiff = x2 - x1,\n        yDiff = y2 - y1;\n    return {\n      length: Math.ceil(Math.sqrt(xDiff * xDiff + yDiff * yDiff)),\n      angle: Math.round(Math.atan2(yDiff, xDiff) * 180 / Math.PI)\n    };\n  }\n\n  var startHandler = function startHandler(e, obj) {\n    e.preventDefault();\n    var iObj = objectHolder[obj.token];\n    if (iObj.disabled) return; //check if pattern is visible or not\n\n    if (!iObj.option.patternVisible) {\n      iObj.holder.classList.add('patt-hidden');\n    }\n\n    var touchMove = e.type == \"touchstart\" ? \"touchmove\" : \"mousemove\",\n        touchEnd = e.type == \"touchstart\" ? \"touchend\" : \"mouseup\"; //assign events\n\n    window.__patternLockMoveHandler = function (e) {\n      moveHandler.call(this, e, obj);\n    };\n\n    this.addEventListener(touchMove, window.__patternLockMoveHandler);\n    document.addEventListener(touchEnd, function () {\n      endHandler.call(this, e, obj);\n    }, {\n      once: true\n    }); //set pattern offset\n\n    var wrap = iObj.holder.querySelector('.patt-wrap'),\n        offset = wrap.getBoundingClientRect();\n    iObj.wrapper = wrap;\n    iObj.wrapTop = offset.top;\n    iObj.wrapLeft = offset.left; //reset pattern\n\n    obj.reset();\n  },\n      moveHandler = function moveHandler(e, obj) {\n    e.preventDefault();\n    var x = e.clientX || e.touches[0].clientX,\n        y = e.clientY || e.touches[0].clientY,\n        iObj = objectHolder[obj.token],\n        option = iObj.option,\n        li = iObj.pattCircle,\n        patternAry = iObj.patternAry,\n        posObj = iObj.getIdxFromPoint(x, y),\n        idx = posObj.idx,\n        pattId = iObj.mapperFunc(idx) || idx;\n\n    if (patternAry.length > 0) {\n      var laMove = getLengthAngle(iObj.lineX1, posObj.x, iObj.lineY1, posObj.y);\n      iObj.line.style.width = laMove.length + 10 + 'px';\n      iObj.line.style.transform = 'rotate(' + laMove.angle + 'deg)';\n    }\n\n    if (idx && (option.allowRepeat && patternAry[patternAry.length - 1] !== pattId || patternAry.indexOf(pattId) === -1)) {\n      var elm = li[idx - 1]; //mark if any points are in middle of previous point and current point, if it does check them\n\n      if (iObj.lastPosObj) {\n        var lastPosObj = iObj.lastPosObj,\n            ip = lastPosObj.i,\n            jp = lastPosObj.j,\n            xDelta = posObj.i - lastPosObj.i > 0 ? 1 : -1,\n            yDelta = posObj.j - lastPosObj.j > 0 ? 1 : -1,\n            iDiff = Math.abs(posObj.i - ip),\n            jDiff = Math.abs(posObj.j - jp);\n\n        while (iDiff === 0 && jDiff > 1 || jDiff === 0 && iDiff > 1 || jDiff == iDiff && jDiff > 1) {\n          ip = iDiff ? ip + xDelta : ip;\n          jp = jDiff ? jp + yDelta : jp;\n          iDiff = Math.abs(posObj.i - ip);\n          jDiff = Math.abs(posObj.j - jp);\n          var nextIdx = (jp - 1) * option.matrix[1] + ip,\n              nextPattId = iObj.mapperFunc(nextIdx) || nextIdx;\n\n          if (option.allowRepeat || patternAry.indexOf(nextPattId) == -1) {\n            //add direction to previous point and line\n            iObj.addDirectionClass({\n              i: ip,\n              j: jp\n            }); //mark a point added\n\n            iObj.markPoint(li[nextPattId - 1], nextPattId); //add line between the points\n\n            iObj.addLine({\n              i: ip,\n              j: jp\n            });\n          }\n        }\n      } //add direction to last point and line\n\n\n      if (iObj.lastPosObj) iObj.addDirectionClass(posObj); //mark the initial point added\n\n      iObj.markPoint(elm, pattId); //add initial line\n\n      iObj.addLine(posObj);\n      iObj.lastPosObj = posObj;\n    }\n  },\n      endHandler = function endHandler(e, obj) {\n    e.preventDefault();\n    var iObj = objectHolder[obj.token],\n        option = iObj.option,\n        pattern = iObj.patternAry.join(option.delimiter); //remove hidden pattern class and remove event\n\n    iObj.holder.removeEventListener(\"touchmove\", window.__patternLockMoveHandler);\n    iObj.holder.removeEventListener(\"mousemove\", window.__patternLockMoveHandler);\n    iObj.holder.classList.remove('patt-hidden');\n    if (!pattern) return;\n    option.onDraw(pattern); //to remove last line\n\n    if (iObj.line.parentNode) iObj.line.parentNode.removeChild(iObj.line);\n\n    if (iObj.rightPattern) {\n      if (pattern == iObj.rightPattern) {\n        iObj.onSuccess();\n      } else {\n        iObj.onError();\n        obj.error();\n      }\n    }\n  };\n\n  function InternalMethods() {}\n\n  InternalMethods.prototype = {\n    constructor: InternalMethods,\n    getIdxFromPoint: function getIdxFromPoint(x, y) {\n      var option = this.option,\n          matrix = option.matrix,\n          xi = x - this.wrapLeft,\n          yi = y - this.wrapTop,\n          idx = null,\n          margin = option.margin,\n          plotLn = option.radius * 2 + margin * 2,\n          qsntX = Math.ceil(xi / plotLn),\n          qsntY = Math.ceil(yi / plotLn),\n          remX = xi % plotLn,\n          remY = yi % plotLn;\n\n      if (qsntX <= matrix[1] && qsntY <= matrix[0] && remX > margin * 2 && remY > margin * 2) {\n        idx = (qsntY - 1) * matrix[1] + qsntX;\n      }\n\n      return {\n        idx: idx,\n        i: qsntX,\n        j: qsntY,\n        x: xi,\n        y: yi\n      };\n    },\n    markPoint: function markPoint(elm, pattId) {\n      //add the current element on pattern\n      elm.classList.add('hovered'); //push pattern on array\n\n      this.patternAry.push(pattId);\n      this.lastElm = elm;\n    },\n    //method to add lines between two element\n    addLine: function addLine(posObj) {\n      var _this = this,\n          patternAry = _this.patternAry,\n          option = _this.option; //add start point for line\n\n\n      var lineOnMove = option.lineOnMove,\n          margin = option.margin,\n          radius = option.radius,\n          newX = (posObj.i - 1) * (2 * margin + 2 * radius) + 2 * margin + radius,\n          newY = (posObj.j - 1) * (2 * margin + 2 * radius) + 2 * margin + radius;\n\n      if (patternAry.length > 1) {\n        //to fix line\n        var lA = getLengthAngle(_this.lineX1, newX, _this.lineY1, newY);\n        _this.line.style.width = lA.length + 10 + 'px';\n        _this.line.style.transform = 'rotate(' + lA.angle + 'deg)';\n        if (!lineOnMove) _this.line.style.display = 'block';\n      } //to create new line\n\n\n      var line = document.createElement('div');\n      line.classList.add('patt-lines');\n      line.style.top = newY - 5 + 'px';\n      line.style.left = newX - 5 + 'px';\n      _this.line = line;\n      _this.lineX1 = newX;\n      _this.lineY1 = newY; //add on dom\n\n      _this.wrapper.appendChild(line);\n\n      if (!lineOnMove) _this.line.style.display = 'none';\n    },\n    // add direction on point and line\n    addDirectionClass: function addDirectionClass(curPos) {\n      var point = this.lastElm,\n          line = this.line,\n          lastPos = this.lastPosObj;\n      var direction = [];\n      curPos.j - lastPos.j > 0 ? direction.push('s') : curPos.j - lastPos.j < 0 ? direction.push('n') : 0;\n      curPos.i - lastPos.i > 0 ? direction.push('e') : curPos.i - lastPos.i < 0 ? direction.push('w') : 0;\n      direction = direction.join('-');\n\n      if (direction) {\n        point.classList.add(direction, \"dir\");\n        line.classList.add(direction, \"dir\");\n      }\n    }\n  };\n\n  function PatternLock(selector, option) {\n    var self = this,\n        token = self.token = Math.random(),\n        iObj = objectHolder[token] = new InternalMethods(),\n        holder = iObj.holder = selector instanceof Node ? selector : document.querySelector(selector); //if holder is not present return\n\n    if (!holder) {\n      console.error('PatternLock: selector ' + selector + ' not found!');\n      return;\n    }\n\n    iObj.object = self; //optimizing options\n\n    option = option || {};\n    var defaultsFixes = {\n      onDraw: nullFunc\n    };\n    var matrix = option.matrix;\n    if (matrix && matrix[0] * matrix[1] > 9) defaultsFixes.delimiter = \",\";\n    option = iObj.option = Object.assign({}, PatternLock.defaults, defaultsFixes, option);\n    readyDom(iObj); //add class on holder\n\n    holder.classList.add('patt-holder'); //change offset property of holder if it does not have any property\n\n    if (holder.style.position == \"static\") holder.style.position = 'relative'; //assign event\n\n    holder.addEventListener(\"touchstart\", function (e) {\n      startHandler.call(this, e, self);\n    });\n    holder.addEventListener(\"mousedown\", function (e) {\n      startHandler.call(this, e, self);\n    }); //adding a mapper function\n\n    var mapper = option.mapper;\n\n    if (typeof mapper == \"object\") {\n      iObj.mapperFunc = function (idx) {\n        return mapper[idx];\n      };\n    } else if (typeof mapper == \"function\") {\n      iObj.mapperFunc = mapper;\n    } else {\n      iObj.mapperFunc = nullFunc;\n    } //to delete from option object\n\n\n    iObj.option.mapper = null;\n  }\n\n  PatternLock.prototype = {\n    constructor: PatternLock,\n    //method to set options after initializtion\n    option: function option(key, val) {\n      var iObj = objectHolder[this.token],\n          option = iObj.option; //for set methods\n\n      if (val === undefined) {\n        return option[key];\n      } //for setter\n      else {\n          option[key] = val;\n\n          if (key == \"margin\" || key == \"matrix\" || key == \"radius\") {\n            readyDom(iObj);\n          }\n        }\n    },\n    //get drawn pattern as string\n    getPattern: function getPattern() {\n      var iObj = objectHolder[this.token];\n      return (iObj.patternAry || []).join(iObj.option.delimiter);\n    },\n    //method to draw a pattern dynamically\n    setPattern: function setPattern(pattern) {\n      var iObj = objectHolder[this.token],\n          option = iObj.option,\n          matrix = option.matrix,\n          margin = option.margin,\n          radius = option.radius; //allow to set password manually only when enable set pattern option is true\n\n      if (!option.enableSetPattern) return; //check if pattern is string break it with the delimiter\n\n      if (typeof pattern === \"string\") {\n        pattern = pattern.split(option.delimiter);\n      }\n\n      this.reset();\n      iObj.wrapLeft = 0;\n      iObj.wrapTop = 0;\n\n      for (var i = 0; i < pattern.length; i++) {\n        var idx = pattern[i] - 1,\n            x = idx % matrix[1],\n            y = Math.floor(idx / matrix[1]),\n            clientX = x * (2 * margin + 2 * radius) + 2 * margin + radius,\n            clientY = y * (2 * margin + 2 * radius) + 2 * margin + radius;\n        moveHandler.call(null, {\n          clientX: clientX,\n          clientY: clientY,\n          preventDefault: nullFunc\n        }, this);\n      }\n    },\n    //to temprory enable disable plugin\n    enable: function enable() {\n      var iObj = objectHolder[this.token];\n      iObj.disabled = false;\n    },\n    disable: function disable() {\n      var iObj = objectHolder[this.token];\n      iObj.disabled = true;\n    },\n    //reset pattern lock\n    reset: function reset() {\n      var iObj = objectHolder[this.token]; //to remove lines\n\n      iObj.pattCircle.forEach(function (el) {\n        return el.classList.remove('hovered', 'dir', 's', 'n', 'w', 'e', 's-w', 's-e', 'n-w', 'n-e');\n      });\n      iObj.holder.querySelectorAll('.patt-lines').forEach(function (el) {\n        return iObj.wrapper.removeChild(el);\n      }); //add/reset a array which capture pattern\n\n      iObj.patternAry = []; //remove last Obj\n\n      iObj.lastPosObj = null; //remove error class if added\n\n      iObj.holder.classList.remove('patt-error');\n    },\n    //to display error if pattern is not drawn correct\n    error: function error() {\n      objectHolder[this.token].holder.classList.add('patt-error');\n    },\n    //to check the drawn pattern against given pattern\n    checkForPattern: function checkForPattern(pattern, success, error) {\n      var iObj = objectHolder[this.token];\n      iObj.rightPattern = pattern;\n      iObj.onSuccess = success || nullFunc;\n      iObj.onError = error || nullFunc;\n    }\n  };\n  PatternLock.defaults = {\n    matrix: [3, 3],\n    margin: 20,\n    radius: 25,\n    patternVisible: true,\n    lineOnMove: true,\n    delimiter: \"\",\n    // a delimiter between the pattern\n    enableSetPattern: false,\n    allowRepeat: false\n  };\n  return PatternLock;\n})(window);","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/PatternLock/PatternLock.js"],"names":["window","undefined","document","nullFunc","objectHolder","readyDom","iObj","holder","option","matrix","margin","radius","html","i","ln","push","innerHTML","join","style","width","height","pattCircle","querySelectorAll","getLengthAngle","x1","x2","y1","y2","xDiff","yDiff","length","Math","ceil","sqrt","angle","round","atan2","PI","startHandler","e","obj","preventDefault","token","disabled","patternVisible","classList","add","touchMove","type","touchEnd","__patternLockMoveHandler","moveHandler","call","addEventListener","endHandler","once","wrap","querySelector","offset","getBoundingClientRect","wrapper","wrapTop","top","wrapLeft","left","reset","x","clientX","touches","y","clientY","li","patternAry","posObj","getIdxFromPoint","idx","pattId","mapperFunc","laMove","lineX1","lineY1","line","transform","allowRepeat","indexOf","elm","lastPosObj","ip","jp","j","xDelta","yDelta","iDiff","abs","jDiff","nextIdx","nextPattId","addDirectionClass","markPoint","addLine","pattern","delimiter","removeEventListener","remove","onDraw","parentNode","removeChild","rightPattern","onSuccess","onError","error","InternalMethods","prototype","constructor","xi","yi","plotLn","qsntX","qsntY","remX","remY","lastElm","_this","lineOnMove","newX","newY","lA","display","createElement","appendChild","curPos","point","lastPos","direction","PatternLock","selector","self","random","Node","console","object","defaultsFixes","Object","assign","defaults","position","mapper","key","val","getPattern","setPattern","enableSetPattern","split","floor","enable","disable","forEach","el","checkForPattern","success"],"mappings":"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","sourcesContent":["/* eslint-disable */\n/*\n    patternLock.js v 1.1.1\n    Author: Sudhanshu Yadav, Nimiq Foundation\n    Copyright (c) 2015,2016 Sudhanshu Yadav - github.com/nimiq/patternLock , released under the MIT license.\n    Copyright (c) 2018 Nimiq Foundation - nimiq.com , released under the MIT license.\n*/\nexport default (function(window, undefined) {\n  var document = window.document;\n\n  var nullFunc = function() {},\n      objectHolder = {};\n\n  //internal functions\n  function readyDom(iObj) {\n      var holder = iObj.holder,\n          option = iObj.option,\n          matrix = option.matrix,\n          margin = option.margin,\n          radius = option.radius,\n          html = ['<ul class=\"patt-wrap\" style=\"padding:' + margin + 'px\">'];\n      for (var i = 0, ln = matrix[0] * matrix[1]; i < ln; i++) {\n          html.push('<li class=\"patt-circ\" style=\"margin:' + margin + 'px; width : ' + (radius * 2) + 'px; height : ' + (radius * 2) + 'px; -webkit-border-radius: ' + radius + 'px; -moz-border-radius: ' + radius + 'px; border-radius: ' + radius + 'px; \"><div class=\"patt-dots\"></div></li>');\n      }\n      html.push('</ul>');\n      holder.innerHTML = html.join('');\n      holder.style.width = (matrix[1] * (radius * 2 + margin * 2) + margin * 2) + 'px';\n      holder.style.height = (matrix[0] * (radius * 2 + margin * 2) + margin * 2) + 'px';\n\n      //select pattern circle\n      iObj.pattCircle = iObj.holder.querySelectorAll('.patt-circ');\n\n  }\n\n  //return height and angle for lines\n  function getLengthAngle(x1, x2, y1, y2) {\n      var xDiff = x2 - x1,\n          yDiff = y2 - y1;\n\n      return {\n          length: Math.ceil(Math.sqrt(xDiff * xDiff + yDiff * yDiff)),\n          angle: Math.round((Math.atan2(yDiff, xDiff) * 180) / Math.PI)\n      };\n  }\n\n\n  var startHandler = function(e, obj) {\n          e.preventDefault();\n          var iObj = objectHolder[obj.token];\n\n          if (iObj.disabled) return;\n\n          //check if pattern is visible or not\n          if (!iObj.option.patternVisible) {\n              iObj.holder.classList.add('patt-hidden');\n          }\n\n          var touchMove = e.type == \"touchstart\" ? \"touchmove\" : \"mousemove\",\n              touchEnd = e.type == \"touchstart\" ? \"touchend\" : \"mouseup\";\n\n          //assign events\n          window.__patternLockMoveHandler = function(e) {\n              moveHandler.call(this, e, obj);\n          };\n\n          this.addEventListener(touchMove, window.__patternLockMoveHandler);\n          document.addEventListener(touchEnd, function() {\n              endHandler.call(this, e, obj);\n          }, {once: true});\n          //set pattern offset\n          var wrap = iObj.holder.querySelector('.patt-wrap'),\n              offset = wrap.getBoundingClientRect();\n          iObj.wrapper = wrap;\n          iObj.wrapTop = offset.top;\n          iObj.wrapLeft = offset.left;\n\n          //reset pattern\n          obj.reset();\n      },\n      moveHandler = function(e, obj) {\n          e.preventDefault();\n          var x = e.clientX || e.touches[0].clientX,\n              y = e.clientY || e.touches[0].clientY,\n              iObj = objectHolder[obj.token],\n              option = iObj.option,\n              li = iObj.pattCircle,\n              patternAry = iObj.patternAry,\n              posObj = iObj.getIdxFromPoint(x, y),\n              idx = posObj.idx,\n              pattId = iObj.mapperFunc(idx) || idx;\n\n\n          if (patternAry.length > 0) {\n              var laMove = getLengthAngle(iObj.lineX1, posObj.x, iObj.lineY1, posObj.y);\n              iObj.line.style.width = (laMove.length + 10) + 'px';\n              iObj.line.style.transform = 'rotate(' + laMove.angle + 'deg)';\n          }\n\n\n          if (idx && ((option.allowRepeat && patternAry[patternAry.length - 1] !== pattId) || patternAry.indexOf(pattId) === -1)) {\n              var elm = li[idx - 1];\n\n              //mark if any points are in middle of previous point and current point, if it does check them\n              if (iObj.lastPosObj) {\n                  var lastPosObj = iObj.lastPosObj,\n                      ip = lastPosObj.i,\n                      jp = lastPosObj.j,\n                      xDelta = posObj.i - lastPosObj.i > 0 ? 1 : -1,\n                      yDelta = posObj.j - lastPosObj.j > 0 ? 1 : -1,\n                      iDiff = Math.abs(posObj.i - ip),\n                      jDiff = Math.abs(posObj.j - jp);\n\n                  while (((iDiff === 0 && jDiff > 1) || (jDiff === 0 && iDiff > 1) || (jDiff == iDiff && jDiff > 1))) {\n                      ip = iDiff ? ip + xDelta : ip;\n                      jp = jDiff ? jp + yDelta : jp;\n                      iDiff = Math.abs(posObj.i - ip);\n                      jDiff = Math.abs(posObj.j - jp);\n\n                      var nextIdx = (jp - 1) * option.matrix[1] + ip,\n                          nextPattId = iObj.mapperFunc(nextIdx) || nextIdx;\n\n                      if (option.allowRepeat || patternAry.indexOf(nextPattId) == -1) {\n\n                          //add direction to previous point and line\n                          iObj.addDirectionClass({i: ip, j: jp});\n\n                          //mark a point added\n                          iObj.markPoint(li[nextPattId - 1], nextPattId);\n\n                          //add line between the points\n                          iObj.addLine({i: ip,j: jp});\n                      }\n                  }\n              }\n\n              //add direction to last point and line\n              if (iObj.lastPosObj) iObj.addDirectionClass(posObj);\n\n              //mark the initial point added\n              iObj.markPoint(elm, pattId);\n\n              //add initial line\n              iObj.addLine(posObj);\n\n              iObj.lastPosObj = posObj;\n          }\n      },\n      endHandler = function(e, obj) {\n          e.preventDefault();\n          var iObj = objectHolder[obj.token],\n              option = iObj.option,\n              pattern = iObj.patternAry.join(option.delimiter);\n\n          //remove hidden pattern class and remove event\n          iObj.holder.removeEventListener(\"touchmove\", window.__patternLockMoveHandler);\n          iObj.holder.removeEventListener(\"mousemove\", window.__patternLockMoveHandler);\n          iObj.holder.classList.remove('patt-hidden');\n\n          if (!pattern) return;\n\n          option.onDraw(pattern);\n\n          //to remove last line\n          if (iObj.line.parentNode) iObj.line.parentNode.removeChild(iObj.line);\n\n\n\n          if (iObj.rightPattern) {\n              if (pattern == iObj.rightPattern) {\n                  iObj.onSuccess();\n              } else {\n                  iObj.onError();\n                  obj.error();\n              }\n          }\n      };\n\n  function InternalMethods() {}\n\n  InternalMethods.prototype = {\n      constructor: InternalMethods,\n      getIdxFromPoint: function(x, y) {\n          var option = this.option,\n              matrix = option.matrix,\n              xi = x - this.wrapLeft,\n              yi = y - this.wrapTop,\n              idx = null,\n              margin = option.margin,\n              plotLn = option.radius * 2 + margin * 2,\n              qsntX = Math.ceil(xi / plotLn),\n              qsntY = Math.ceil(yi / plotLn),\n              remX = xi % plotLn,\n              remY = yi % plotLn;\n\n          if (qsntX <= matrix[1] && qsntY <= matrix[0] && remX > margin * 2 && remY > margin * 2) {\n              idx = (qsntY - 1) * matrix[1] + qsntX;\n          }\n          return {\n              idx: idx,\n              i: qsntX,\n              j: qsntY,\n              x: xi,\n              y: yi\n          };\n      },\n      markPoint: function(elm, pattId) {\n          //add the current element on pattern\n          elm.classList.add('hovered');\n\n          //push pattern on array\n          this.patternAry.push(pattId);\n\n          this.lastElm = elm;\n      },\n      //method to add lines between two element\n      addLine: function(posObj) {\n          var _this = this,\n              patternAry = _this.patternAry,\n              option = _this.option;\n\n          //add start point for line\n          var lineOnMove = option.lineOnMove,\n              margin = option.margin,\n              radius = option.radius,\n              newX = (posObj.i - 1) * (2 * margin + 2 * radius) + 2 * margin + radius,\n              newY = (posObj.j - 1) * (2 * margin + 2 * radius) + 2 * margin + radius;\n\n          if (patternAry.length > 1) {\n              //to fix line\n              var lA = getLengthAngle(_this.lineX1, newX, _this.lineY1, newY);\n              _this.line.style.width = (lA.length + 10) + 'px';\n              _this.line.style.transform = 'rotate(' + lA.angle + 'deg)';\n\n              if (!lineOnMove) _this.line.style.display = 'block';\n          }\n\n\n          //to create new line\n          var line = document.createElement('div');\n          line.classList.add('patt-lines');\n          line.style.top = (newY - 5) + 'px';\n          line.style.left = (newX - 5) + 'px';\n          _this.line = line;\n          _this.lineX1 = newX;\n          _this.lineY1 = newY;\n\n          //add on dom\n          _this.wrapper.appendChild(line);\n          if (!lineOnMove) _this.line.style.display = 'none';\n      },\n      // add direction on point and line\n      addDirectionClass: function(curPos) {\n          var point = this.lastElm,\n              line = this.line,\n              lastPos = this.lastPosObj;\n\n          var direction = [];\n          curPos.j - lastPos.j > 0 ? direction.push('s') : curPos.j - lastPos.j < 0 ? direction.push('n') : 0;\n          curPos.i - lastPos.i > 0 ? direction.push('e') : curPos.i - lastPos.i < 0 ? direction.push('w') : 0;\n          direction = direction.join('-');\n\n          if (direction) {\n              point.classList.add(direction, \"dir\");\n              line.classList.add(direction, \"dir\");\n          }\n      }\n\n  };\n\n  function PatternLock(selector, option) {\n      var self = this,\n          token = self.token = Math.random(),\n          iObj = objectHolder[token] = new InternalMethods(),\n          holder = iObj.holder = selector instanceof Node ? selector : document.querySelector(selector);\n\n      //if holder is not present return\n      if (!holder) {\n          console.error('PatternLock: selector ' + selector + ' not found!');\n          return;\n      }\n\n      iObj.object = self;\n\n      //optimizing options\n      option = option || {};\n      var defaultsFixes = {\n          onDraw: nullFunc\n      };\n      var matrix = option.matrix;\n      if (matrix && matrix[0] * matrix[1] > 9) defaultsFixes.delimiter = \",\";\n\n      option = iObj.option = Object.assign({}, PatternLock.defaults, defaultsFixes, option);\n      readyDom(iObj);\n\n      //add class on holder\n      holder.classList.add('patt-holder');\n\n      //change offset property of holder if it does not have any property\n      if (holder.style.position == \"static\") holder.style.position = 'relative';\n\n      //assign event\n      holder.addEventListener(\"touchstart\", function(e) {\n          startHandler.call(this, e, self);\n      });\n      holder.addEventListener(\"mousedown\", function(e) {\n          startHandler.call(this, e, self);\n      });\n\n      //adding a mapper function\n      var mapper = option.mapper;\n      if (typeof mapper == \"object\") {\n          iObj.mapperFunc = function(idx) {\n              return mapper[idx];\n          };\n      } else if (typeof mapper == \"function\") {\n          iObj.mapperFunc = mapper;\n      } else {\n          iObj.mapperFunc = nullFunc;\n      }\n\n      //to delete from option object\n      iObj.option.mapper = null;\n  }\n\n  PatternLock.prototype = {\n      constructor: PatternLock,\n      //method to set options after initializtion\n      option: function(key, val) {\n          var iObj = objectHolder[this.token],\n              option = iObj.option;\n          //for set methods\n          if (val === undefined) {\n              return option[key];\n          }\n          //for setter\n          else {\n              option[key] = val;\n              if (key == \"margin\" || key == \"matrix\" || key == \"radius\") {\n                  readyDom(iObj);\n              }\n          }\n      },\n      //get drawn pattern as string\n      getPattern: function() {\n          var iObj = objectHolder[this.token];\n          return (iObj.patternAry || []).join(iObj.option.delimiter);\n      },\n      //method to draw a pattern dynamically\n      setPattern: function(pattern) {\n          var iObj = objectHolder[this.token],\n              option = iObj.option,\n              matrix = option.matrix,\n              margin = option.margin,\n              radius = option.radius;\n\n          //allow to set password manually only when enable set pattern option is true\n          if (!option.enableSetPattern) return;\n\n          //check if pattern is string break it with the delimiter\n          if (typeof pattern === \"string\") {\n              pattern = pattern.split(option.delimiter);\n          }\n\n          this.reset();\n          iObj.wrapLeft = 0;\n          iObj.wrapTop = 0;\n\n          for (var i = 0; i < pattern.length; i++) {\n              var idx = pattern[i] - 1,\n                  x = idx % matrix[1],\n                  y = Math.floor(idx / matrix[1]),\n                  clientX = x * (2 * margin + 2 * radius) + 2 * margin + radius,\n                  clientY = y * (2 * margin + 2 * radius) + 2 * margin + radius;\n\n              moveHandler.call(null, {\n                  clientX: clientX,\n                  clientY: clientY,\n                  preventDefault: nullFunc\n              }, this);\n\n          }\n      },\n      //to temprory enable disable plugin\n      enable: function() {\n          var iObj = objectHolder[this.token];\n          iObj.disabled = false;\n      },\n      disable: function() {\n          var iObj = objectHolder[this.token];\n          iObj.disabled = true;\n      },\n      //reset pattern lock\n      reset: function() {\n          var iObj = objectHolder[this.token];\n          //to remove lines\n          iObj.pattCircle.forEach(el => el.classList.remove('hovered', 'dir', 's', 'n', 'w', 'e', 's-w', 's-e', 'n-w', 'n-e'));\n          iObj.holder.querySelectorAll('.patt-lines').forEach(el => iObj.wrapper.removeChild(el));\n\n          //add/reset a array which capture pattern\n          iObj.patternAry = [];\n\n          //remove last Obj\n          iObj.lastPosObj = null;\n\n          //remove error class if added\n          iObj.holder.classList.remove('patt-error');\n\n      },\n      //to display error if pattern is not drawn correct\n      error: function() {\n          objectHolder[this.token].holder.classList.add('patt-error');\n      },\n      //to check the drawn pattern against given pattern\n      checkForPattern: function(pattern, success, error) {\n          var iObj = objectHolder[this.token];\n          iObj.rightPattern = pattern;\n          iObj.onSuccess = success || nullFunc;\n          iObj.onError = error || nullFunc;\n      }\n  };\n\n  PatternLock.defaults = {\n      matrix: [3, 3],\n      margin: 20,\n      radius: 25,\n      patternVisible: true,\n      lineOnMove: true,\n      delimiter: \"\", // a delimiter between the pattern\n      enableSetPattern: false,\n      allowRepeat: false\n  };\n\n  return PatternLock;\n\n})(window);"]},"metadata":{},"sourceType":"module"}