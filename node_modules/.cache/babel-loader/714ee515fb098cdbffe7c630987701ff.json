{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixNamespace;\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime/core-js/object/keys\"));\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _utils = require(\"./utils\");\n\nvar _constants = require(\"./constants\");\n\nfunction prefix(obj, namespace, type) {\n  return (0, _keys.default)(obj).reduce(function (memo, key) {\n    (0, _warning.default)(key.indexOf(\"\".concat(namespace).concat(_constants.NAMESPACE_SEP)) !== 0, \"[prefixNamespace]: \".concat(type, \" \").concat(key, \" should not be prefixed with namespace \").concat(namespace));\n    var newKey = \"\".concat(namespace).concat(_constants.NAMESPACE_SEP).concat(key);\n    memo[newKey] = obj[key];\n    return memo;\n  }, {});\n}\n\nfunction prefixNamespace(model) {\n  var namespace = model.namespace,\n      reducers = model.reducers,\n      effects = model.effects;\n\n  if (reducers) {\n    if ((0, _utils.isArray)(reducers)) {\n      model.reducers[0] = prefix(reducers[0], namespace, 'reducer');\n    } else {\n      model.reducers = prefix(reducers, namespace, 'reducer');\n    }\n  }\n\n  if (effects) {\n    model.effects = prefix(effects, namespace, 'effect');\n  }\n\n  return model;\n}","map":null,"metadata":{},"sourceType":"script"}