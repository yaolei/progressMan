{"ast":null,"code":"import _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/lib/auto-complete/style\";\nimport _AutoComplete from \"antd/lib/auto-complete\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Form/model/autocomplete.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport $$ from 'cmn-utils';\nimport omit from 'object.omit';\nimport isEqual from 'react-fast-compare';\nvar Option = _AutoComplete.Option;\n\nvar AutoCompleteControlled =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AutoCompleteControlled, _Component);\n\n  function AutoCompleteControlled(props) {\n    var _this;\n\n    _classCallCheck(this, AutoCompleteControlled);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoCompleteControlled).call(this, props));\n\n    _this.onSearch = function (value) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          loadData = _this$props.loadData;\n\n      if (onChange) {\n        onChange(value, {});\n      }\n\n      if (!value.trim()) {\n        _this.setState({\n          dataSource: [],\n          value: value\n        });\n\n        return;\n      } else {\n        _this.setState({\n          value: value\n        });\n      }\n\n      if (loadData) {\n        _this.handleSearch(value);\n      }\n    };\n\n    _this._handleSearch = function (value) {\n      var loadData = _this.props.loadData;\n\n      _this.setState({\n        loading: true\n      });\n\n      var promise = loadData(value);\n\n      if (promise && promise.then) {\n        promise.then(function (listItem) {\n          _this.setState({\n            dataSource: listItem,\n            loading: false\n          });\n        }).catch(function (e) {\n          return _this.setState({\n            dataSource: [],\n            loading: false\n          });\n        });\n      }\n    };\n\n    _this.renderOptions = function (dataSource) {\n      var _this$props2 = _this.props,\n          render = _this$props2.render,\n          renderItem = _this$props2.renderItem;\n      if (render) return render(dataSource) || [];else if (renderItem) {\n        return dataSource.map(_this.renderOptionItem);\n      } else {\n        return dataSource;\n      }\n    };\n\n    _this.renderOptionItem = function (item, index) {\n      var _this$props3 = _this.props,\n          keyField = _this$props3.keyField,\n          renderItem = _this$props3.renderItem;\n      return React.createElement(Option, Object.assign({\n        key: item[keyField] || index\n      }, item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), renderItem(item));\n    };\n\n    _this.onSelect = function (value, option) {\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        var _this$props4 = _this.props,\n            valueField = _this$props4.valueField,\n            optionLabelProp = _this$props4.optionLabelProp;\n        var itemProps = option.props;\n        var valueKey = valueField || optionLabelProp;\n        var rvalue = itemProps[valueKey] || value;\n        onChange(rvalue, option);\n      }\n    };\n\n    var _value = props.value,\n        _loadData = props.loadData;\n    _this.state = {\n      value: _value,\n      dataSource: [],\n      loading: false\n    };\n    _this.handleSearch = _loadData ? $$.debounce(_this._handleSearch, 500) : null;\n    return _this;\n  }\n\n  _createClass(AutoCompleteControlled, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var dataSource = nextProps.dataSource,\n          value = nextProps.value,\n          loadData = nextProps.loadData;\n\n      if (!isEqual(this.props.dataSource, dataSource) || !isEqual(this.props.value, value)) {\n        var newState = {\n          value: value\n        };\n\n        if (!loadData && dataSource) {\n          newState.dataSource = value ? dataSource : [];\n        }\n\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          dataSource = _this$state.dataSource,\n          loading = _this$state.loading;\n      var valueField = this.props.valueField;\n      var autoComponentProps = omit(this.props, ['value', 'dataSource', 'onChange']);\n      return React.createElement(_AutoComplete, Object.assign({\n        value: value,\n        dataSource: this.renderOptions(dataSource),\n        onSelect: this.onSelect,\n        onSearch: this.onSearch,\n        optionLabelProp: valueField\n      }, autoComponentProps, {\n        allowClear: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(_Input, {\n        suffix: loading ? React.createElement(_Icon, {\n          className: \"auto-complete-loading\",\n          type: \"loading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }) : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AutoCompleteControlled;\n}(Component);\n\nAutoCompleteControlled.propTypes = {\n  value: PropTypes.any,\n  dataSource: PropTypes.array,\n  onChange: PropTypes.func,\n  keyField: PropTypes.string,\n  valueField: PropTypes.string,\n  render: PropTypes.func,\n  renderItem: PropTypes.func\n};\nexport default (function (_ref) {\n  var form = _ref.form,\n      name = _ref.name,\n      _ref$formFieldOptions = _ref.formFieldOptions,\n      formFieldOptions = _ref$formFieldOptions === void 0 ? {} : _ref$formFieldOptions,\n      record = _ref.record,\n      initialValue = _ref.initialValue,\n      rules = _ref.rules,\n      onChange = _ref.onChange,\n      dataSource = _ref.dataSource,\n      normalize = _ref.normalize,\n      getPopupContainer = _ref.getPopupContainer,\n      placeholder = _ref.placeholder,\n      otherProps = _objectWithoutProperties(_ref, [\"form\", \"name\", \"formFieldOptions\", \"record\", \"initialValue\", \"rules\", \"onChange\", \"dataSource\", \"normalize\", \"getPopupContainer\", \"placeholder\"]);\n\n  var getFieldDecorator = form.getFieldDecorator;\n  var initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  } // 如果存在初始值\n\n\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  } // 如果有rules\n\n\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  } // 如果需要onChange\n\n\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = function (value, option) {\n      return onChange(form, value, option);\n    }; // form, value, option 选中的项\n\n  }\n\n  var props = _objectSpread({\n    placeholder: placeholder || \"\\u8BF7\\u8F93\\u5165\".concat(otherProps.title)\n  }, otherProps);\n\n  if (getPopupContainer) {\n    props.getPopupContainer = getPopupContainer;\n  }\n\n  return getFieldDecorator(name, formFieldOptions)(React.createElement(AutoCompleteControlled, Object.assign({\n    dataSource: dataSource\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Form/model/autocomplete.js"],"names":["React","Component","PropTypes","$$","omit","isEqual","Option","AutoCompleteControlled","props","onSearch","value","onChange","loadData","trim","setState","dataSource","handleSearch","_handleSearch","loading","promise","then","listItem","catch","e","renderOptions","render","renderItem","map","renderOptionItem","item","index","keyField","onSelect","option","valueField","optionLabelProp","itemProps","valueKey","rvalue","state","debounce","nextProps","newState","autoComponentProps","propTypes","any","array","func","string","form","name","formFieldOptions","record","initialValue","rules","normalize","getPopupContainer","placeholder","otherProps","getFieldDecorator","initval","isFunction","length","title"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,EAAP,MAAe,WAAf;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,IAAMC,MAAM,GAAG,cAAaA,MAA5B;;IAEMC,sB;;;;;AAWJ,kCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gGAAMA,KAAN;;AADiB,UA2BnBC,QA3BmB,GA2BR,UAAAC,KAAK,EAAI;AAAA,wBACa,MAAKF,KADlB;AAAA,UACVG,QADU,eACVA,QADU;AAAA,UACAC,QADA,eACAA,QADA;;AAElB,UAAID,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACD,KAAD,EAAQ,EAAR,CAAR;AACD;;AACD,UAAI,CAACA,KAAK,CAACG,IAAN,EAAL,EAAmB;AACjB,cAAKC,QAAL,CAAc;AACZC,UAAAA,UAAU,EAAE,EADA;AAEZL,UAAAA,KAAK,EAALA;AAFY,SAAd;;AAIA;AACD,OAND,MAMO;AACL,cAAKI,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAALA;AADY,SAAd;AAGD;;AAED,UAAIE,QAAJ,EAAc;AACZ,cAAKI,YAAL,CAAkBN,KAAlB;AACD;AACF,KA/CkB;;AAAA,UAiDnBO,aAjDmB,GAiDH,UAAAP,KAAK,EAAI;AAAA,UACfE,QADe,GACF,MAAKJ,KADH,CACfI,QADe;;AAGvB,YAAKE,QAAL,CAAc;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAMC,OAAO,GAAGP,QAAQ,CAACF,KAAD,CAAxB;;AACA,UAAIS,OAAO,IAAIA,OAAO,CAACC,IAAvB,EAA6B;AAC3BD,QAAAA,OAAO,CACJC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,gBAAKP,QAAL,CAAc;AACZC,YAAAA,UAAU,EAAEM,QADA;AAEZH,YAAAA,OAAO,EAAE;AAFG,WAAd;AAID,SANH,EAOGI,KAPH,CAOS,UAAAC,CAAC;AAAA,iBACN,MAAKT,QAAL,CAAc;AACZC,YAAAA,UAAU,EAAE,EADA;AAEZG,YAAAA,OAAO,EAAE;AAFG,WAAd,CADM;AAAA,SAPV;AAaD;AACF,KArEkB;;AAAA,UAuEnBM,aAvEmB,GAuEH,UAAAT,UAAU,EAAI;AAAA,yBACG,MAAKP,KADR;AAAA,UACpBiB,MADoB,gBACpBA,MADoB;AAAA,UACZC,UADY,gBACZA,UADY;AAE5B,UAAID,MAAJ,EAAY,OAAOA,MAAM,CAACV,UAAD,CAAN,IAAsB,EAA7B,CAAZ,KACK,IAAIW,UAAJ,EAAgB;AACnB,eAAOX,UAAU,CAACY,GAAX,CAAe,MAAKC,gBAApB,CAAP;AACD,OAFI,MAEE;AACL,eAAOb,UAAP;AACD;AACF,KA/EkB;;AAAA,UAiFnBa,gBAjFmB,GAiFA,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAAA,yBACD,MAAKtB,KADJ;AAAA,UAC1BuB,QAD0B,gBAC1BA,QAD0B;AAAA,UAChBL,UADgB,gBAChBA,UADgB;AAElC,aACE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEG,IAAI,CAACE,QAAD,CAAJ,IAAkBD;AAA/B,SAA0CD,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGH,UAAU,CAACG,IAAD,CADb,CADF;AAKD,KAxFkB;;AAAA,UA0FnBG,QA1FmB,GA0FR,UAACtB,KAAD,EAAQuB,MAAR,EAAmB;AAC5B,UAAMtB,QAAQ,GAAG,MAAKH,KAAL,CAAWG,QAA5B;;AACA,UAAIA,QAAJ,EAAc;AAAA,2BAC4B,MAAKH,KADjC;AAAA,YACJ0B,UADI,gBACJA,UADI;AAAA,YACQC,eADR,gBACQA,eADR;AAEZ,YAAMC,SAAS,GAAGH,MAAM,CAACzB,KAAzB;AACA,YAAM6B,QAAQ,GAAGH,UAAU,IAAIC,eAA/B;AACA,YAAMG,MAAM,GAAGF,SAAS,CAACC,QAAD,CAAT,IAAuB3B,KAAtC;AACAC,QAAAA,QAAQ,CAAC2B,MAAD,EAASL,MAAT,CAAR;AACD;AACF,KAnGkB;;AAAA,QAETvB,MAFS,GAEWF,KAFX,CAETE,KAFS;AAAA,QAEFE,SAFE,GAEWJ,KAFX,CAEFI,QAFE;AAGjB,UAAK2B,KAAL,GAAa;AACX7B,MAAAA,KAAK,EAAEA,MADI;AAEXK,MAAAA,UAAU,EAAE,EAFD;AAGXG,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMA,UAAKF,YAAL,GAAoBJ,SAAQ,GAAGT,EAAE,CAACqC,QAAH,CAAY,MAAKvB,aAAjB,EAAgC,GAAhC,CAAH,GAA0C,IAAtE;AATiB;AAUlB;;;;8CAEyBwB,S,EAAW;AAAA,UAC3B1B,UAD2B,GACK0B,SADL,CAC3B1B,UAD2B;AAAA,UACfL,KADe,GACK+B,SADL,CACf/B,KADe;AAAA,UACRE,QADQ,GACK6B,SADL,CACR7B,QADQ;;AAEnC,UACE,CAACP,OAAO,CAAC,KAAKG,KAAL,CAAWO,UAAZ,EAAwBA,UAAxB,CAAR,IACA,CAACV,OAAO,CAAC,KAAKG,KAAL,CAAWE,KAAZ,EAAmBA,KAAnB,CAFV,EAGE;AACA,YAAMgC,QAAQ,GAAG;AAAEhC,UAAAA,KAAK,EAALA;AAAF,SAAjB;;AACA,YAAI,CAACE,QAAD,IAAaG,UAAjB,EAA6B;AAC3B2B,UAAAA,QAAQ,CAAC3B,UAAT,GAAsBL,KAAK,GAAGK,UAAH,GAAgB,EAA3C;AACD;;AAED,aAAKD,QAAL,CAAc4B,QAAd;AACD;AACF;;;6BA4EQ;AAAA,wBACgC,KAAKH,KADrC;AAAA,UACC7B,KADD,eACCA,KADD;AAAA,UACQK,UADR,eACQA,UADR;AAAA,UACoBG,OADpB,eACoBA,OADpB;AAAA,UAECgB,UAFD,GAEgB,KAAK1B,KAFrB,CAEC0B,UAFD;AAGP,UAAMS,kBAAkB,GAAGvC,IAAI,CAAC,KAAKI,KAAN,EAAa,CAC1C,OAD0C,EAE1C,YAF0C,EAG1C,UAH0C,CAAb,CAA/B;AAKA,aACE;AACE,QAAA,KAAK,EAAEE,KADT;AAEE,QAAA,UAAU,EAAE,KAAKc,aAAL,CAAmBT,UAAnB,CAFd;AAGE,QAAA,QAAQ,EAAE,KAAKiB,QAHjB;AAIE,QAAA,QAAQ,EAAE,KAAKvB,QAJjB;AAKE,QAAA,eAAe,EAAEyB;AALnB,SAMMS,kBANN;AAOE,QAAA,UAAU,EAAE,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASE;AACE,QAAA,MAAM,EACJzB,OAAO,GACL;AAAM,UAAA,SAAS,EAAC,uBAAhB;AAAwC,UAAA,IAAI,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAEH,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAmBD;;;;EA3IkCjB,S;;AAA/BM,sB,CACGqC,S,GAAY;AACjBlC,EAAAA,KAAK,EAAER,SAAS,CAAC2C,GADA;AAEjB9B,EAAAA,UAAU,EAAEb,SAAS,CAAC4C,KAFL;AAGjBnC,EAAAA,QAAQ,EAAET,SAAS,CAAC6C,IAHH;AAIjBhB,EAAAA,QAAQ,EAAE7B,SAAS,CAAC8C,MAJH;AAKjBd,EAAAA,UAAU,EAAEhC,SAAS,CAAC8C,MALL;AAMjBvB,EAAAA,MAAM,EAAEvB,SAAS,CAAC6C,IAND;AAOjBrB,EAAAA,UAAU,EAAExB,SAAS,CAAC6C;AAPL,C;AA6IrB,gBAAe,gBAaT;AAAA,MAZJE,IAYI,QAZJA,IAYI;AAAA,MAXJC,IAWI,QAXJA,IAWI;AAAA,mCAVJC,gBAUI;AAAA,MAVJA,gBAUI,sCAVe,EAUf;AAAA,MATJC,MASI,QATJA,MASI;AAAA,MARJC,YAQI,QARJA,YAQI;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJ3C,QAMI,QANJA,QAMI;AAAA,MALJI,UAKI,QALJA,UAKI;AAAA,MAJJwC,SAII,QAJJA,SAII;AAAA,MAHJC,iBAGI,QAHJA,iBAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADDC,UACC;;AAAA,MACIC,iBADJ,GAC0BV,IAD1B,CACIU,iBADJ;AAGJ,MAAIC,OAAO,GAAGP,YAAd;;AAEA,MAAID,MAAJ,EAAY;AACVQ,IAAAA,OAAO,GAAGR,MAAM,CAACF,IAAD,CAAhB;AACD,GAPG,CASJ;;;AACA,MAAIU,OAAO,KAAK,IAAZ,IAAoB,OAAOA,OAAP,KAAmB,WAA3C,EAAwD;AACtD,QAAIzD,EAAE,CAAC0D,UAAH,CAAcN,SAAd,CAAJ,EAA8B;AAC5BJ,MAAAA,gBAAgB,CAACE,YAAjB,GAAgCE,SAAS,CAACK,OAAD,CAAzC;AACD,KAFD,MAEO;AACLT,MAAAA,gBAAgB,CAACE,YAAjB,GAAgCO,OAAhC;AACD;AACF,GAhBG,CAkBJ;;;AACA,MAAIN,KAAK,IAAIA,KAAK,CAACQ,MAAnB,EAA2B;AACzBX,IAAAA,gBAAgB,CAACG,KAAjB,GAAyBA,KAAzB;AACD,GArBG,CAuBJ;;;AACA,MAAI,OAAO3C,QAAP,KAAoB,UAAxB,EAAoC;AAClCwC,IAAAA,gBAAgB,CAACxC,QAAjB,GAA4B,UAACD,KAAD,EAAQuB,MAAR;AAAA,aAC1BtB,QAAQ,CAACsC,IAAD,EAAOvC,KAAP,EAAcuB,MAAd,CADkB;AAAA,KAA5B,CADkC,CAED;;AAClC;;AAED,MAAMzB,KAAK;AACTiD,IAAAA,WAAW,EAAEA,WAAW,gCAAUC,UAAU,CAACK,KAArB;AADf,KAENL,UAFM,CAAX;;AAKA,MAAIF,iBAAJ,EAAuB;AACrBhD,IAAAA,KAAK,CAACgD,iBAAN,GAA0BA,iBAA1B;AACD;;AAED,SAAOG,iBAAiB,CAACT,IAAD,EAAOC,gBAAP,CAAjB,CACL,oBAAC,sBAAD;AAAwB,IAAA,UAAU,EAAEpC;AAApC,KAAoDP,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,CAAP;AAGD,CAtDD","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AutoComplete, Input, Icon } from 'antd';\nimport $$ from 'cmn-utils';\nimport omit from 'object.omit';\nimport isEqual from 'react-fast-compare';\nconst Option = AutoComplete.Option;\n\nclass AutoCompleteControlled extends Component {\n  static propTypes = {\n    value: PropTypes.any,\n    dataSource: PropTypes.array,\n    onChange: PropTypes.func,\n    keyField: PropTypes.string,\n    valueField: PropTypes.string,\n    render: PropTypes.func,\n    renderItem: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    const { value, loadData } = props;\n    this.state = {\n      value: value,\n      dataSource: [],\n      loading: false\n    };\n\n    this.handleSearch = loadData ? $$.debounce(this._handleSearch, 500) : null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { dataSource, value, loadData } = nextProps;\n    if (\n      !isEqual(this.props.dataSource, dataSource) ||\n      !isEqual(this.props.value, value)\n    ) {\n      const newState = { value };\n      if (!loadData && dataSource) {\n        newState.dataSource = value ? dataSource : [];\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  onSearch = value => {\n    const { onChange, loadData } = this.props;\n    if (onChange) {\n      onChange(value, {});\n    }\n    if (!value.trim()) {\n      this.setState({\n        dataSource: [],\n        value\n      });\n      return;\n    } else {\n      this.setState({\n        value\n      })\n    }\n    \n    if (loadData) {\n      this.handleSearch(value);\n    }\n  };\n\n  _handleSearch = value => {\n    const { loadData } = this.props;\n\n    this.setState({ loading: true });\n    const promise = loadData(value);\n    if (promise && promise.then) {\n      promise\n        .then(listItem => {\n          this.setState({\n            dataSource: listItem,\n            loading: false\n          });\n        })\n        .catch(e =>\n          this.setState({\n            dataSource: [],\n            loading: false\n          })\n        );\n    }\n  };\n\n  renderOptions = dataSource => {\n    const { render, renderItem } = this.props;\n    if (render) return render(dataSource) || [];\n    else if (renderItem) {\n      return dataSource.map(this.renderOptionItem);\n    } else {\n      return dataSource;\n    }\n  };\n\n  renderOptionItem = (item, index) => {\n    const { keyField, renderItem } = this.props;\n    return (\n      <Option key={item[keyField] || index} {...item}>\n        {renderItem(item)}\n      </Option>\n    );\n  };\n\n  onSelect = (value, option) => {\n    const onChange = this.props.onChange;\n    if (onChange) {\n      const { valueField, optionLabelProp } = this.props;\n      const itemProps = option.props;\n      const valueKey = valueField || optionLabelProp;\n      const rvalue = itemProps[valueKey] || value;\n      onChange(rvalue, option);\n    }\n  };\n\n  render() {\n    const { value, dataSource, loading } = this.state;\n    const { valueField } = this.props;\n    const autoComponentProps = omit(this.props, [\n      'value',\n      'dataSource',\n      'onChange'\n    ]);\n    return (\n      <AutoComplete\n        value={value}\n        dataSource={this.renderOptions(dataSource)}\n        onSelect={this.onSelect}\n        onSearch={this.onSearch}\n        optionLabelProp={valueField}\n        {...autoComponentProps}\n        allowClear={false}\n      >\n        <Input\n          suffix={\n            loading ? (\n              <Icon className=\"auto-complete-loading\" type=\"loading\" />\n            ) : null\n          }\n        />\n      </AutoComplete>\n    );\n  }\n}\n\nexport default ({\n  form,\n  name,\n  formFieldOptions = {},\n  record,\n  initialValue,\n  rules,\n  onChange,\n  dataSource,\n  normalize,\n  getPopupContainer,\n  placeholder,\n  ...otherProps\n}) => {\n  const { getFieldDecorator } = form;\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // 如果存在初始值\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  // 如果有rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // 如果需要onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = (value, option) =>\n      onChange(form, value, option); // form, value, option 选中的项\n  }\n\n  const props = {\n    placeholder: placeholder || `请输入${otherProps.title}`,\n    ...otherProps\n  };\n\n  if (getPopupContainer) {\n    props.getPopupContainer = getPopupContainer;\n  }\n\n  return getFieldDecorator(name, formFieldOptions)(\n    <AutoCompleteControlled dataSource={dataSource} {...props} />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}