{"ast":null,"code":"import _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/PatternLock/index.js\";\nimport React, { PureComponent } from 'react';\nimport PatternLock from './PatternLock';\nimport './style/index.less';\n\nvar Lock =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Lock, _PureComponent);\n\n  function Lock() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Lock);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Lock)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onCheckPattern = function () {\n      var _this$props = _this.props,\n          lock = _this$props.lock,\n          onChange = _this$props.onChange;\n\n      _this.lock.checkForPattern(lock, function () {\n        onChange(true);\n        console.log('You unlocked your app');\n      }, function () {\n        onChange(false);\n        console.log('Pattern is not correct');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Lock, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.lock = new PatternLock(this.refs.patternLock, {\n        enableSetPattern: true\n      });\n      this.onCheckPattern();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.lock !== this.props.lock) {\n        this.lock.setPattern(this.props.lock);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        ref: \"patternLock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Lock;\n}(PureComponent);\n\nexport default Lock;","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/PatternLock/index.js"],"names":["React","PureComponent","PatternLock","Lock","onCheckPattern","props","lock","onChange","checkForPattern","console","log","refs","patternLock","enableSetPattern","prevProps","prevState","setPattern"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,oBAAP;;IAEMC,I;;;;;;;;;;;;;;;;;;UAeJC,c,GAAiB,YAAM;AAAA,wBACM,MAAKC,KADX;AAAA,UACbC,IADa,eACbA,IADa;AAAA,UACPC,QADO,eACPA,QADO;;AAErB,YAAKD,IAAL,CAAUE,eAAV,CACEF,IADF,EAEE,YAAM;AACJC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,OALH,EAME,YAAM;AACJH,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,OATH;AAWD,K;;;;;;;wCA3BmB;AAClB,WAAKJ,IAAL,GAAY,IAAIJ,WAAJ,CAAgB,KAAKS,IAAL,CAAUC,WAA1B,EAAuC;AACjDC,QAAAA,gBAAgB,EAAE;AAD+B,OAAvC,CAAZ;AAIA,WAAKT,cAAL;AACD;;;uCAEkBU,S,EAAWC,S,EAAW;AACvC,UAAID,SAAS,CAACR,IAAV,KAAmB,KAAKD,KAAL,CAAWC,IAAlC,EAAwC;AACtC,aAAKA,IAAL,CAAUU,UAAV,CAAqB,KAAKX,KAAL,CAAWC,IAAhC;AACD;AACF;;;6BAiBQ;AACP,aAAO;AAAK,QAAA,GAAG,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAhCgBL,a;;AAmCnB,eAAeE,IAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport PatternLock from './PatternLock';\nimport './style/index.less';\n\nclass Lock extends PureComponent {\n  componentDidMount() {\n    this.lock = new PatternLock(this.refs.patternLock, {\n      enableSetPattern: true\n    });\n\n    this.onCheckPattern();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.lock !== this.props.lock) {\n      this.lock.setPattern(this.props.lock);\n    }\n  }\n\n  onCheckPattern = () => {\n    const { lock, onChange } = this.props;\n    this.lock.checkForPattern(\n      lock,\n      () => {\n        onChange(true);\n        console.log('You unlocked your app');\n      },\n      () => {\n        onChange(false);\n        console.log('Pattern is not correct');\n      }\n    );\n  };\n\n  render() {\n    return <div ref=\"patternLock\" />;\n  }\n}\n\nexport default Lock;\n"]},"metadata":{},"sourceType":"module"}