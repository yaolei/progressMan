{"ast":null,"code":"import _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport modelEnhance from '@/utils/modelEnhance';\nimport { register } from '../service';\nexport default modelEnhance({\n  namespace: 'register',\n  state: {\n    status: undefined\n  },\n  effects: {\n    submit:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function submit(_ref, _ref2) {\n      var payload, call, put, response;\n      return _regeneratorRuntime.wrap(function submit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              payload = _ref.payload;\n              call = _ref2.call, put = _ref2.put;\n              console.log(payload);\n              _context.next = 5;\n              return call(register, payload);\n\n            case 5:\n              response = _context.sent;\n              _context.next = 8;\n              return put({\n                type: 'registerHandle',\n                payload: response\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, submit);\n    })\n  },\n  reducers: {\n    registerHandle: function registerHandle(state, _ref3) {\n      var payload = _ref3.payload;\n      return _objectSpread({}, state, {\n        status: payload.status\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/routes/Register/model/index.js"],"names":["modelEnhance","register","namespace","state","status","undefined","effects","submit","payload","call","put","console","log","response","type","reducers","registerHandle"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,sBAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,eAAeD,YAAY,CAAC;AAC1BE,EAAAA,SAAS,EAAE,UADe;AAG1BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEC;AADH,GAHmB;AAO1BC,EAAAA,OAAO,EAAE;AACNC,IAAAA,MADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,cAAAA,OADH,QACGA,OADH;AACgBC,cAAAA,IADhB,SACgBA,IADhB,EACsBC,GADtB,SACsBA,GADtB;AAELC,cAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAFK;AAGY,qBAAMC,IAAI,CAACR,QAAD,EAAWO,OAAX,CAAV;;AAHZ;AAGCK,cAAAA,QAHD;AAAA;AAIL,qBAAMH,GAAG,CAAC;AACRI,gBAAAA,IAAI,EAAE,gBADE;AAERN,gBAAAA,OAAO,EAAEK;AAFD,eAAD,CAAT;;AAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAPiB;AAkB1BE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cADQ,0BACOb,KADP,SAC2B;AAAA,UAAXK,OAAW,SAAXA,OAAW;AACjC,+BACKL,KADL;AAEEC,QAAAA,MAAM,EAAEI,OAAO,CAACJ;AAFlB;AAID;AANO;AAlBgB,CAAD,CAA3B","sourcesContent":["import modelEnhance from '@/utils/modelEnhance';\nimport { register } from '../service';\n\nexport default modelEnhance({\n  namespace: 'register',\n\n  state: {\n    status: undefined,\n  },\n\n  effects: {\n    *submit({ payload }, { call, put }) {\n      console.log(payload)\n      const response = yield call(register, payload);\n      yield put({\n        type: 'registerHandle',\n        payload: response,\n      });\n    },\n  },\n\n  reducers: {\n    registerHandle(state, { payload }) {\n      return {\n        ...state,\n        status: payload.status,\n      };\n    },\n  },\n});"]},"metadata":{},"sourceType":"module"}