{"ast":null,"code":"import _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Form/model/input.js\";\nimport React from 'react';\nimport $$ from 'cmn-utils';\nvar TextArea = _Input.TextArea;\n/**\n * 文本框元件\n */\n\nexport default (function (_ref) {\n  var form = _ref.form,\n      name = _ref.name,\n      _ref$formFieldOptions = _ref.formFieldOptions,\n      formFieldOptions = _ref$formFieldOptions === void 0 ? {} : _ref$formFieldOptions,\n      record = _ref.record,\n      initialValue = _ref.initialValue,\n      normalize = _ref.normalize,\n      rules = _ref.rules,\n      onChange = _ref.onChange,\n      type = _ref.type,\n      preview = _ref.preview,\n      placeholder = _ref.placeholder,\n      getPopupContainer = _ref.getPopupContainer,\n      otherProps = _objectWithoutProperties(_ref, [\"form\", \"name\", \"formFieldOptions\", \"record\", \"initialValue\", \"normalize\", \"rules\", \"onChange\", \"type\", \"preview\", \"placeholder\", \"getPopupContainer\"]);\n\n  var getFieldDecorator = form.getFieldDecorator;\n  var initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  } // 如果存在初始值\n\n\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  if (preview) {\n    if (type === 'hidden') return null;\n    return React.createElement(\"div\", {\n      style: otherProps.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, initval || '');\n  } // 如果有rules\n\n\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  } // 如果需要onChange\n\n\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = function (e) {\n      return onChange(form, e.target.value, e);\n    }; // form, value, event\n\n  }\n\n  var Comp = type === 'textarea' ? TextArea : _Input;\n  delete otherProps.render;\n\n  var props = _objectSpread({\n    autoComplete: 'off',\n    type: type,\n    placeholder: placeholder || \"\\u8BF7\\u8F93\\u5165\".concat(otherProps.title)\n  }, otherProps);\n\n  return getFieldDecorator(name, formFieldOptions)(React.createElement(Comp, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Form/model/input.js"],"names":["React","$$","TextArea","form","name","formFieldOptions","record","initialValue","normalize","rules","onChange","type","preview","placeholder","getPopupContainer","otherProps","getFieldDecorator","initval","isFunction","style","length","e","target","value","Comp","render","props","autoComplete","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,EAAP,MAAe,WAAf;IACQC,Q,UAAAA,Q;AACR;;;;AAGA,gBAAe,gBAcT;AAAA,MAbJC,IAaI,QAbJA,IAaI;AAAA,MAZJC,IAYI,QAZJA,IAYI;AAAA,mCAXJC,gBAWI;AAAA,MAXJA,gBAWI,sCAXe,EAWf;AAAA,MAVJC,MAUI,QAVJA,MAUI;AAAA,MATJC,YASI,QATJA,YASI;AAAA,MARJC,SAQI,QARJA,SAQI;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,iBAEI,QAFJA,iBAEI;AAAA,MADDC,UACC;;AAAA,MACIC,iBADJ,GAC0Bb,IAD1B,CACIa,iBADJ;AAGJ,MAAIC,OAAO,GAAGV,YAAd;;AAEA,MAAID,MAAJ,EAAY;AACVW,IAAAA,OAAO,GAAGX,MAAM,CAACF,IAAD,CAAhB;AACD,GAPG,CASJ;;;AACA,MAAIa,OAAO,KAAK,IAAZ,IAAoB,OAAOA,OAAP,KAAmB,WAA3C,EAAwD;AACtD,QAAIhB,EAAE,CAACiB,UAAH,CAAcV,SAAd,CAAJ,EAA8B;AAC5BH,MAAAA,gBAAgB,CAACE,YAAjB,GAAgCC,SAAS,CAACS,OAAD,CAAzC;AACD,KAFD,MAEO;AACLZ,MAAAA,gBAAgB,CAACE,YAAjB,GAAgCU,OAAhC;AACD;AACF;;AAED,MAAIL,OAAJ,EAAa;AACX,QAAID,IAAI,KAAK,QAAb,EAAuB,OAAO,IAAP;AACvB,WAAO;AAAK,MAAA,KAAK,EAAEI,UAAU,CAACI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BF,OAAO,IAAI,EAA1C,CAAP;AACD,GArBG,CAuBJ;;;AACA,MAAIR,KAAK,IAAIA,KAAK,CAACW,MAAnB,EAA2B;AACzBf,IAAAA,gBAAgB,CAACI,KAAjB,GAAyBA,KAAzB;AACD,GA1BG,CA4BJ;;;AACA,MAAI,OAAOC,QAAP,KAAoB,UAAxB,EAAoC;AAClCL,IAAAA,gBAAgB,CAACK,QAAjB,GAA4B,UAAAW,CAAC;AAAA,aAAIX,QAAQ,CAACP,IAAD,EAAOkB,CAAC,CAACC,MAAF,CAASC,KAAhB,EAAuBF,CAAvB,CAAZ;AAAA,KAA7B,CADkC,CACkC;;AACrE;;AAED,MAAMG,IAAI,GAAGb,IAAI,KAAK,UAAT,GAAsBT,QAAtB,SAAb;AAEA,SAAOa,UAAU,CAACU,MAAlB;;AAEA,MAAMC,KAAK;AACTC,IAAAA,YAAY,EAAE,KADL;AAEThB,IAAAA,IAAI,EAAJA,IAFS;AAGTE,IAAAA,WAAW,EAAEA,WAAW,gCAAUE,UAAU,CAACa,KAArB;AAHf,KAINb,UAJM,CAAX;;AAOA,SAAOC,iBAAiB,CAACZ,IAAD,EAAOC,gBAAP,CAAjB,CAA0C,oBAAC,IAAD,oBAAUqB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1C,CAAP;AACD,CA3DD","sourcesContent":["import React from 'react';\nimport { Input } from 'antd';\nimport $$ from 'cmn-utils';\nconst { TextArea } = Input;\n/**\n * 文本框元件\n */\nexport default ({\n  form,\n  name,\n  formFieldOptions = {},\n  record,\n  initialValue,\n  normalize,\n  rules,\n  onChange,\n  type,\n  preview,\n  placeholder,\n  getPopupContainer,\n  ...otherProps\n}) => {\n  const { getFieldDecorator } = form;\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // 如果存在初始值\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  if (preview) {\n    if (type === 'hidden') return null;\n    return <div style={otherProps.style}>{initval || ''}</div>;\n  }\n\n  // 如果有rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // 如果需要onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = e => onChange(form, e.target.value, e); // form, value, event\n  }\n\n  const Comp = type === 'textarea' ? TextArea : Input;\n\n  delete otherProps.render;\n\n  const props = {\n    autoComplete: 'off',\n    type,\n    placeholder: placeholder || `请输入${otherProps.title}`,\n    ...otherProps\n  };\n\n  return getFieldDecorator(name, formFieldOptions)(<Comp {...props} />);\n};\n"]},"metadata":{},"sourceType":"module"}