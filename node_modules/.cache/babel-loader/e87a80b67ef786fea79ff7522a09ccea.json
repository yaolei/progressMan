{"ast":null,"code":"import _defineProperty from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/**\n * 模拟CRUD数据\n */\nexport default (function (_ref) {\n  var fetchMock = _ref.fetchMock,\n      delay = _ref.delay,\n      mock = _ref.mock,\n      toSuccess = _ref.toSuccess,\n      toError = _ref.toError;\n  return {\n    // 表格带分页\n    '/api/datatable/getList': function apiDatatableGetList(options) {\n      var body = JSON.parse(options.body);\n      var currentPage = body.currentPage;\n      var sortMap = body.sortMap;\n      var idbase = (currentPage - 1) * 10 + 1;\n      var sortField = {\n        'age|1-100': 1\n      };\n\n      if (sortMap && sortMap.age) {\n        // 模拟排序\n        var i = 60;\n        sortField = sortMap.age === 'asc' ? {\n          'age|+1': new Array(10).fill(0).map(function (item) {\n            return i++;\n          })\n        } : {\n          'age|+1': new Array(10).fill(0).map(function (item) {\n            return i--;\n          })\n        };\n      }\n\n      return toSuccess(mock(_defineProperty({\n        currentPage: currentPage,\n        showCount: body.showCount,\n        totalResult: 100,\n        totalPage: 10\n      }, \"dataList|\".concat(body.showCount), [_objectSpread({\n        'id|+1': idbase,\n        name: '@cname',\n        address: '@county()',\n        'role|1': ['1', '2', '3']\n      }, sortField)])), 400);\n    },\n    // 前台分页\n    '/api/datatable/frontPaging': function apiDatatableFrontPaging(options) {\n      return toSuccess(mock(_defineProperty({}, \"list|33\", [{\n        'id|+1': 1,\n        name: '@cname',\n        address: '@county()',\n        'age|1-100': 1,\n        'role|1': ['1', '2', '3']\n      }])), 400);\n    }\n  };\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/__mocks__/datatable.js"],"names":["fetchMock","delay","mock","toSuccess","toError","options","body","JSON","parse","currentPage","sortMap","idbase","sortField","age","i","Array","fill","map","item","showCount","totalResult","totalPage","name","address"],"mappings":";;;AAAA;;;AAGA,gBAAe,gBAAoD;AAAA,MAAjDA,SAAiD,QAAjDA,SAAiD;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACjE,SAAO;AACL;AACA,8BAA0B,6BAAAC,OAAO,EAAI;AACnC,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACC,IAAnB,CAAb;AACA,UAAMG,WAAW,GAAGH,IAAI,CAACG,WAAzB;AACA,UAAMC,OAAO,GAAGJ,IAAI,CAACI,OAArB;AACA,UAAMC,MAAM,GAAG,CAACF,WAAW,GAAG,CAAf,IAAoB,EAApB,GAAyB,CAAxC;AACA,UAAIG,SAAS,GAAG;AAAE,qBAAa;AAAf,OAAhB;;AACA,UAAIF,OAAO,IAAIA,OAAO,CAACG,GAAvB,EAA4B;AAAE;AAC5B,YAAIC,CAAC,GAAG,EAAR;AACAF,QAAAA,SAAS,GACPF,OAAO,CAACG,GAAR,KAAgB,KAAhB,GACI;AAAE,oBAAU,IAAIE,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0B,UAAAC,IAAI;AAAA,mBAAIJ,CAAC,EAAL;AAAA,WAA9B;AAAZ,SADJ,GAEI;AAAE,oBAAU,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0B,UAAAC,IAAI;AAAA,mBAAIJ,CAAC,EAAL;AAAA,WAA9B;AAAZ,SAHN;AAID;;AAED,aAAOX,SAAS,CACdD,IAAI;AACFO,QAAAA,WAAW,EAAEA,WADX;AAEFU,QAAAA,SAAS,EAAEb,IAAI,CAACa,SAFd;AAGFC,QAAAA,WAAW,EAAE,GAHX;AAIFC,QAAAA,SAAS,EAAE;AAJT,4BAKWf,IAAI,CAACa,SALhB,GAK8B;AAE5B,iBAASR,MAFmB;AAG5BW,QAAAA,IAAI,EAAE,QAHsB;AAI5BC,QAAAA,OAAO,EAAE,WAJmB;AAK5B,kBAAU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX;AALkB,SAMzBX,SANyB,EAL9B,EADU,EAgBd,GAhBc,CAAhB;AAkBD,KAlCI;AAmCL;AACA,kCAA8B,iCAAAP,OAAO,EAAI;AACvC,aAAOF,SAAS,CACdD,IAAI,gCACW,CACX;AACE,iBAAS,CADX;AAEEoB,QAAAA,IAAI,EAAE,QAFR;AAGEC,QAAAA,OAAO,EAAE,WAHX;AAIE,qBAAa,CAJf;AAKE,kBAAU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX;AALZ,OADW,CADX,EADU,EAYd,GAZc,CAAhB;AAcD;AAnDI,GAAP;AAqDD,CAtDD","sourcesContent":["/**\n * 模拟CRUD数据\n */\nexport default ({ fetchMock, delay, mock, toSuccess, toError }) => {\n  return {\n    // 表格带分页\n    '/api/datatable/getList': options => {\n      const body = JSON.parse(options.body);\n      const currentPage = body.currentPage;\n      const sortMap = body.sortMap;\n      const idbase = (currentPage - 1) * 10 + 1;\n      let sortField = { 'age|1-100': 1 };\n      if (sortMap && sortMap.age) { // 模拟排序\n        let i = 60;\n        sortField =\n          sortMap.age === 'asc'\n            ? { 'age|+1': new Array(10).fill(0).map(item => i++) }\n            : { 'age|+1': new Array(10).fill(0).map(item => i--) };\n      }\n\n      return toSuccess(\n        mock({\n          currentPage: currentPage,\n          showCount: body.showCount,\n          totalResult: 100,\n          totalPage: 10,\n          [`dataList|${body.showCount}`]: [\n            {\n              'id|+1': idbase,\n              name: '@cname',\n              address: '@county()',\n              'role|1': ['1', '2', '3'],\n              ...sortField\n            }\n          ]\n        }),\n        400\n      );\n    },\n    // 前台分页\n    '/api/datatable/frontPaging': options => {\n      return toSuccess(\n        mock({\n          [`list|33`]: [\n            {\n              'id|+1': 1,\n              name: '@cname',\n              address: '@county()',\n              'age|1-100': 1,\n              'role|1': ['1', '2', '3']\n            }\n          ]\n        }),\n        400\n      );\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}