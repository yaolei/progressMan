{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Form/Form.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport objectAssign from 'object-assign';\nimport $$ from 'cmn-utils';\nimport omit from 'object.omit';\nimport Password from './model/password';\nimport './style/index.less';\nvar createForm = _Form.create;\n\nvar PlainComp = function PlainComp(_ref) {\n  var className = _ref.className,\n      children = _ref.children;\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, children);\n};\n\nPlainComp.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n};\n/**\n * 表单组件\n */\n\nvar FormComp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormComp, _React$Component);\n\n  function FormComp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormComp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormComp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.cols = {\n      xs: 24,\n      md: 24,\n      xl: 24\n    };\n    _this.width = {\n      date: 100,\n      month: 100,\n      'date~': 280,\n      datetime: 140,\n      select: 100,\n      default: 100,\n      treeSelect: 110,\n      cascade: 110,\n      cascader: 110\n    };\n    _this.rows = {\n      gutter: 8\n    };\n\n    _this.onReset = function (e) {\n      _this.props.form.resetFields();\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          form = _this$props.form,\n          record = _this$props.record,\n          onSubmit = _this$props.onSubmit;\n      form.validateFields(function (err, values) {\n        if (!err) {\n          onSubmit && onSubmit(values, record);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FormComp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          prefixCls = _this$props2.prefixCls,\n          type = _this$props2.type,\n          rows = _this$props2.rows,\n          cols = _this$props2.cols,\n          _formItemLayout = _this$props2.formItemLayout,\n          layout = _this$props2.layout,\n          appendTo = _this$props2.appendTo,\n          columns = _this$props2.columns,\n          record = _this$props2.record,\n          group = _this$props2.group,\n          children = _this$props2.children,\n          form = _this$props2.form,\n          preview = _this$props2.preview,\n          loading = _this$props2.loading,\n          footer = _this$props2.footer,\n          otherProps = _objectWithoutProperties(_this$props2, [\"className\", \"prefixCls\", \"type\", \"rows\", \"cols\", \"formItemLayout\", \"layout\", \"appendTo\", \"columns\", \"record\", \"group\", \"children\", \"form\", \"preview\", \"loading\", \"footer\"]);\n\n      delete otherProps.onSubmit;\n      var classname = cx(prefixCls, className, {\n        'form-inline': type === 'inline',\n        'form-grid': type === 'grid',\n        preview: preview\n      });\n      var colopts = type === 'grid' ? cols || this.cols : {};\n      var rowopts = type === 'grid' ? rows || this.rows : {};\n      var ComponentRow = type === 'inline' ? PlainComp : _Row;\n      var ComponentCol = type === 'inline' ? PlainComp : _Col;\n      var ComponentItem = _Form.Item;\n      var formFields = columns.filter(function (col) {\n        return col.formItem;\n      });\n      formFields = group ? formFields.filter(function (col) {\n        return col.formItem && col.formItem.group === group;\n      }) : formFields;\n      var getPopupContainer = null;\n\n      if (appendTo) {\n        if ($$.isFunction(appendTo)) getPopupContainer = appendTo;else if (appendTo === true) getPopupContainer = function getPopupContainer(triggerNode) {\n          return triggerNode.parentNode;\n        };else getPopupContainer = function getPopupContainer(_) {\n          return appendTo;\n        };\n      }\n\n      return React.createElement(_Form, Object.assign({\n        className: classname,\n        onSubmit: this.onSubmit\n      }, objectAssign(otherProps, type === 'inline' && {\n        layout: 'inline'\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(ComponentRow, Object.assign({\n        className: \"row-item\"\n      }, rowopts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), formFields.map(function (field, i) {\n        // 传入个性化的列大小，改变这个值可以改变每行元素的个数\n        var col = _objectSpread({}, colopts);\n\n        if (type === 'grid' && field.formItem.col) {\n          col = field.formItem.col;\n        } else if (type !== 'grid') {\n          col = {};\n        }\n\n        var formItemLayout = _objectSpread({}, _formItemLayout, layout);\n\n        if (type === 'grid' && (field.formItem.formItemLayout || field.formItem.layout)) {\n          formItemLayout = _objectSpread({}, formItemLayout, field.formItem.formItemLayout, field.formItem.layout);\n        } else if (type !== 'grid') {\n          formItemLayout = {};\n        }\n\n        var fieldType = field.formItem.type || 'input';\n\n        var formProps = _objectSpread({\n          form: form,\n          name: field.name,\n          title: field.title,\n          record: record,\n          preview: preview\n        }, field.formItem);\n\n        if (type === 'inline') {\n          formProps.style = {\n            width: formProps.width || _this2.width[fieldType]\n          };\n        }\n\n        if (getPopupContainer) {\n          formProps.getPopupContainer = getPopupContainer;\n        }\n\n        if (field.dict) {\n          formProps.dict = field.dict;\n        } // 传入子组件前删除无用属性\n\n\n        formProps = omit(formProps, ['formItemLayout', 'layout', 'col']);\n        var FieldComp;\n\n        switch (fieldType) {\n          case 'date~': // 日期范围\n\n          case 'datetime': // 日期时间\n\n          case 'date': // 日期\n\n          case 'month': // 月\n\n          case 'time':\n            // 时间\n            FieldComp = require(\"./model/date\").default(formProps);\n            break;\n\n          case 'input': // 输入框\n\n          case 'textarea':\n            // 多行文本\n            FieldComp = require(\"./model/input\").default(formProps);\n            break;\n\n          case 'hidden':\n            // 隐藏域\n            return React.createElement(\"span\", {\n              key: \"col-\".concat(i),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 263\n              },\n              __self: this\n            }, require(\"./model/input\").default(formProps));\n\n          case 'line':\n            // 分隔线\n            var lineProps = omit(formProps, 'type');\n            return React.createElement(_Divider, Object.assign({\n              key: \"col-\".concat(i)\n            }, lineProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 270\n              },\n              __self: this\n            }), formProps.title);\n\n          case 'password':\n            // 密码\n            return React.createElement(Password, Object.assign({\n              key: \"col-\".concat(i),\n              formItemLayout: formItemLayout,\n              col: col\n            }, formProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 276\n              },\n              __self: this\n            }));\n\n          default:\n            // 通用\n            FieldComp = require(\"./model/\".concat(fieldType.toLowerCase())).default(formProps);\n        }\n\n        return React.createElement(ComponentCol, Object.assign({\n          key: \"col-\".concat(i),\n          className: \"col-item\"\n        }, col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }), React.createElement(ComponentItem, Object.assign({}, formItemLayout, {\n          label: field.title,\n          className: \"col-item-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }), FieldComp));\n      }), children, footer === undefined ? React.createElement(ComponentCol, Object.assign({\n        className: \"form-btns col-item\"\n      }, colopts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), React.createElement(_Button, {\n        title: \"\\u63D0\\u4EA4\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        icon: \"check\",\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"\\u63D0\\u4EA4\"), React.createElement(_Button, {\n        title: \"\\u91CD\\u7F6E\",\n        onClick: function onClick(e) {\n          return _this2.onReset();\n        },\n        icon: \"reload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"\\u91CD\\u7F6E\")) : footer));\n    }\n  }]);\n\n  return FormComp;\n}(React.Component);\n\nFormComp.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n\n  /**\n   * 详见帮助文档 column.js 用法\n   */\n  columns: PropTypes.array.isRequired,\n\n  /**\n   * 使用record的数据对表单进行赋值 {key:value, key1: value1}, 时间类型初始值需转成moment类型\n   */\n  record: PropTypes.object,\n\n  /**\n   * 表单类型 inline(行内)，grid(栅格)\n   */\n  type: PropTypes.string,\n\n  /**\n   * 搜索条件分组，设置这个属性后，会在column.js中过滤有相同group值的搜索项\n   */\n  group: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * 如何处理表单里带弹出框的项，比如下拉框，下拉树，日期选择等\n   * 设置为true会自动依附到form上，或用function自已指定\n   * 用法见antd带弹窗组件的getPopupContainer属性http://ant-design.gitee.io/components/select-cn/\n   * appendTo={triggerNode => triggerNode.parentNode}\n   */\n  appendTo: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  /**\n   * 同antd中Grid组件中的Row配置\n   */\n  rows: PropTypes.object,\n\n  /**\n   * 同antd中Grid组件中的Col配置\n   */\n  cols: PropTypes.object,\n\n  /**\n   * 额外表单项\n   */\n  children: PropTypes.node,\n\n  /**\n   * antd的form对像\n   */\n  form: PropTypes.object,\n\n  /**\n   * 点击查询按钮 onSubmit(values) values 提交数据\n   */\n  onSubmit: PropTypes.func,\n\n  /**\n   * 是否是预览视图，所有表单项将展示为文本模式\n   */\n  preview: PropTypes.bool,\n\n  /** antd formItemLayout */\n  formItemLayout: PropTypes.object,\n  layout: PropTypes.object,\n  // 同formItemLayout\n\n  /**\n   * 是否是提交中状态\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * 是否显示底部按钮，或传入自定义的底部按钮\n   */\n  footer: PropTypes.oneOfType([PropTypes.bool, PropTypes.node])\n};\nFormComp.defaultProps = {\n  prefixCls: 'antui-form',\n  type: 'grid',\n  loading: false,\n  formItemLayout: {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 17\n    }\n  }\n};\nexport var Item = _Form.Item;\nexport default createForm()(FormComp);","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Form/Form.js"],"names":["React","PropTypes","cx","objectAssign","$$","omit","Password","createForm","create","PlainComp","className","children","propTypes","string","node","FormComp","cols","xs","md","xl","width","date","month","datetime","select","default","treeSelect","cascade","cascader","rows","gutter","onReset","e","props","form","resetFields","onSubmit","preventDefault","record","validateFields","err","values","prefixCls","type","_formItemLayout","formItemLayout","layout","appendTo","columns","group","preview","loading","footer","otherProps","classname","colopts","rowopts","ComponentRow","ComponentCol","ComponentItem","Item","formFields","filter","col","formItem","getPopupContainer","isFunction","triggerNode","parentNode","_","map","field","i","fieldType","formProps","name","title","style","dict","FieldComp","require","lineProps","toLowerCase","undefined","Component","array","isRequired","object","oneOfType","number","bool","func","defaultProps","labelCol","span","wrapperCol"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Row, Col, Button, Divider } from 'antd';\nimport cx from 'classnames';\nimport objectAssign from 'object-assign';\nimport $$ from 'cmn-utils';\nimport omit from 'object.omit';\nimport Password from './model/password';\nimport './style/index.less';\n\nconst createForm = Form.create;\n\nconst PlainComp = ({ className, children }) => (\n  <div className={className}>{children}</div>\n);\nPlainComp.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n};\n\n/**\n * 表单组件\n */\nclass FormComp extends React.Component {\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    /**\n     * 详见帮助文档 column.js 用法\n     */\n    columns: PropTypes.array.isRequired,\n    /**\n     * 使用record的数据对表单进行赋值 {key:value, key1: value1}, 时间类型初始值需转成moment类型\n     */\n    record: PropTypes.object,\n    /**\n     * 表单类型 inline(行内)，grid(栅格)\n     */\n    type: PropTypes.string,\n    /**\n     * 搜索条件分组，设置这个属性后，会在column.js中过滤有相同group值的搜索项\n     */\n    group: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /**\n     * 如何处理表单里带弹出框的项，比如下拉框，下拉树，日期选择等\n     * 设置为true会自动依附到form上，或用function自已指定\n     * 用法见antd带弹窗组件的getPopupContainer属性http://ant-design.gitee.io/components/select-cn/\n     * appendTo={triggerNode => triggerNode.parentNode}\n     */\n    appendTo: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    /**\n     * 同antd中Grid组件中的Row配置\n     */\n    rows: PropTypes.object,\n    /**\n     * 同antd中Grid组件中的Col配置\n     */\n    cols: PropTypes.object,\n    /**\n     * 额外表单项\n     */\n    children: PropTypes.node,\n    /**\n     * antd的form对像\n     */\n    form: PropTypes.object,\n    /**\n     * 点击查询按钮 onSubmit(values) values 提交数据\n     */\n    onSubmit: PropTypes.func,\n\n    /**\n     * 是否是预览视图，所有表单项将展示为文本模式\n     */\n    preview: PropTypes.bool,\n\n    /** antd formItemLayout */\n    formItemLayout: PropTypes.object,\n    layout: PropTypes.object, // 同formItemLayout\n\n    /**\n     * 是否是提交中状态\n     */\n    loading: PropTypes.bool,\n\n    /**\n     * 是否显示底部按钮，或传入自定义的底部按钮\n     */\n    footer: PropTypes.oneOfType([PropTypes.bool, PropTypes.node])\n  };\n\n  static defaultProps = {\n    prefixCls: 'antui-form',\n    type: 'grid',\n    loading: false,\n    formItemLayout: {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 17 }\n    }\n  };\n\n  // 当type为grid时，指定每行元素个数\n  cols = {\n    xs: 24,\n    md: 24,\n    xl: 24\n  };\n\n  // 内联元素默认宽\n  width = {\n    date: 100,\n    month: 100,\n    'date~': 280,\n    datetime: 140,\n    select: 100,\n    default: 100,\n    treeSelect: 110,\n    cascade: 110,\n    cascader: 110\n  };\n\n  // 当type为grid时，指定每两个元素的间隔\n  rows = {\n    gutter: 8\n  };\n\n  onReset = e => {\n    this.props.form.resetFields();\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { form, record, onSubmit } = this.props;\n    form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit && onSubmit(values, record);\n      }\n    });\n  };\n\n  render() {\n    const {\n      className,\n      prefixCls,\n      type,\n      rows,\n      cols,\n      formItemLayout: _formItemLayout,\n      layout,\n      appendTo,\n      columns,\n      record,\n      group,\n      children,\n      form,\n      preview,\n      loading,\n      footer,\n      ...otherProps\n    } = this.props;\n\n    delete otherProps.onSubmit;\n\n    let classname = cx(prefixCls, className, {\n      'form-inline': type === 'inline',\n      'form-grid': type === 'grid',\n      preview: preview\n    });\n\n    const colopts = type === 'grid' ? cols || this.cols : {};\n    const rowopts = type === 'grid' ? rows || this.rows : {};\n\n    let ComponentRow = type === 'inline' ? PlainComp : Row;\n    let ComponentCol = type === 'inline' ? PlainComp : Col;\n    let ComponentItem = Form.Item;\n\n    let formFields = columns.filter(col => col.formItem);\n    formFields = group\n      ? formFields.filter(col => col.formItem && col.formItem.group === group)\n      : formFields;\n\n    let getPopupContainer = null;\n    if (appendTo) {\n      if ($$.isFunction(appendTo)) getPopupContainer = appendTo;\n      else if (appendTo === true)\n        getPopupContainer = triggerNode => triggerNode.parentNode;\n      else getPopupContainer = _ => appendTo;\n    }\n\n    return (\n      <Form\n        className={classname}\n        onSubmit={this.onSubmit}\n        {...objectAssign(otherProps, type === 'inline' && { layout: 'inline' })}\n      >\n        <ComponentRow className=\"row-item\" {...rowopts}>\n          {formFields.map((field, i) => {\n            // 传入个性化的列大小，改变这个值可以改变每行元素的个数\n            let col = { ...colopts };\n            if (type === 'grid' && field.formItem.col) {\n              col = field.formItem.col;\n            } else if (type !== 'grid') {\n              col = {};\n            }\n\n            let formItemLayout = { ..._formItemLayout, ...layout };\n            if (\n              type === 'grid' &&\n              (field.formItem.formItemLayout || field.formItem.layout)\n            ) {\n              formItemLayout = {\n                ...formItemLayout,\n                ...field.formItem.formItemLayout,\n                ...field.formItem.layout\n              };\n            } else if (type !== 'grid') {\n              formItemLayout = {};\n            }\n\n            const fieldType = field.formItem.type || 'input';\n\n            let formProps = {\n              form,\n              name: field.name,\n              title: field.title,\n              record,\n              preview,\n              ...field.formItem\n            };\n\n            if (type === 'inline') {\n              formProps.style = {\n                width: formProps.width || this.width[fieldType]\n              };\n            }\n\n            if (getPopupContainer) {\n              formProps.getPopupContainer = getPopupContainer;\n            }\n\n            if (field.dict) {\n              formProps.dict = field.dict;\n            }\n\n            // 传入子组件前删除无用属性\n            formProps = omit(formProps, ['formItemLayout', 'layout', 'col']);\n\n            let FieldComp;\n            switch (fieldType) {\n              case 'date~': // 日期范围\n              case 'datetime': // 日期时间\n              case 'date': // 日期\n              case 'month': // 月\n              case 'time': // 时间\n                FieldComp = require(`./model/date`).default(formProps);\n                break;\n              case 'input': // 输入框\n              case 'textarea': // 多行文本\n                FieldComp = require(`./model/input`).default(formProps);\n                break;\n              case 'hidden': // 隐藏域\n                return (\n                  <span key={`col-${i}`}>\n                    {require(`./model/input`).default(formProps)}\n                  </span>\n                );\n              case 'line': // 分隔线\n                const lineProps = omit(formProps, 'type');\n                return (\n                  <Divider key={`col-${i}`} {...lineProps}>\n                    {formProps.title}\n                  </Divider>\n                );\n              case 'password': // 密码\n                return (\n                  <Password\n                    key={`col-${i}`}\n                    formItemLayout={formItemLayout}\n                    col={col}\n                    {...formProps}\n                  />\n                );\n              default:\n                // 通用\n                FieldComp = require(`./model/${fieldType.toLowerCase()}`).default(\n                  formProps\n                );\n            }\n\n            return (\n              <ComponentCol key={`col-${i}`} className=\"col-item\" {...col}>\n                <ComponentItem\n                  {...formItemLayout}\n                  label={field.title}\n                  className=\"col-item-content\"\n                >\n                  {FieldComp}\n                </ComponentItem>\n              </ComponentCol>\n            );\n          })}\n          {children}\n          {footer === undefined ? (\n            <ComponentCol className=\"form-btns col-item\" {...colopts}>\n              <Button\n                title=\"提交\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                icon=\"check\"\n                loading={loading}\n              >\n                提交\n              </Button>\n              <Button title=\"重置\" onClick={e => this.onReset()} icon=\"reload\">\n                重置\n              </Button>\n            </ComponentCol>\n          ) : (\n            footer\n          )}\n        </ComponentRow>\n      </Form>\n    );\n  }\n}\n\nexport const Item = Form.Item;\n\nexport default createForm()(FormComp);\n"]},"metadata":{},"sourceType":"module"}