{"ast":null,"code":"/**\n * 模拟请求数据\n * @param {FetchMock} fetchMock 当现有条件不满足时，可以使用fetchMock来进行扩展\n * @param {function} delay 增加延迟时间 ms 例: delay(mockData) 或 delay(mockData, 200)\n * @param {function} mock 使用mock生成数据，例:\n\n   mock({\n     'string|1-10': '★' // 生成最少1颗，最多10颗星字符\n   })\n\n   // {'string': '★★★★★★'} \n\n  更多用法参考 http://mockjs.com/examples.html\n */\nexport default (function (_ref) {\n  var fetchMock = _ref.fetchMock,\n      delay = _ref.delay,\n      mock = _ref.mock,\n      toSuccess = _ref.toSuccess,\n      toError = _ref.toError;\n  // 如果现有扩展不满足需求，可以直接使用fetchMock方法\n  // fetchMock.mock(/httpbin.org\\/post/, {/* response */}, {/* options */});\n  return {\n    '/api/user/login': function apiUserLogin(options) {\n      if (options.body) {\n        var user = JSON.parse(options.body);\n\n        if (user.userName === 'admin' && user.password === 'admin') {\n          return toSuccess(mock({\n            'userName': 'admin',\n            // 用户名\n            'name': '@cname',\n            // 中文名称\n            'age|1-100': 100,\n            // 100以内随机整数\n            'birthday': '@date(\"yyyy-MM-dd\")',\n            // 日期\n            'city': '@city(true)',\n            // 中国城市\n            'phone': /^1[385][1-9]\\d{8}/,\n            // 手机号\n            'token': '@guid' // token\n\n          }), 400);\n        } else {\n          return toError('用户名或密码错误 admin/admin');\n        }\n      } else {\n        return toError('请输入用户名和密码');\n      }\n    },\n    '/api/user/register': function apiUserRegister(options) {\n      return toSuccess();\n    },\n    '/api/user/menu': function apiUserMenu(options) {\n      return toSuccess([{\n        name: '仪表盘',\n        icon: 'dashboard',\n        path: '/dashboard'\n      }, {\n        name: '组件',\n        icon: 'desktop',\n        path: '/component',\n        children: [{\n          name: '工具条',\n          path: '/toolbar'\n        }, {\n          name: 'BaseComponent',\n          path: '/baseComponent'\n        }, {\n          name: 'Columns',\n          path: '/column'\n        }, {\n          name: '搜索条',\n          path: '/searchBar'\n        }, {\n          name: '数据表格',\n          path: '/datatable'\n        }, {\n          name: '表单',\n          path: '/form'\n        }, {\n          name: '穿梭树',\n          path: '/transferTree'\n        }, {\n          name: '图表',\n          path: '/charts',\n          children: [{\n            name: 'ECharts',\n            path: '/charts/ec'\n          }, {\n            name: 'G2',\n            path: '/charts/g2'\n          }]\n        }, {\n          name: '打印',\n          path: '/print'\n        }, {\n          name: 'Banner 管理',\n          path: '/banner'\n        }]\n      }, {\n        name: 'UI元素',\n        icon: 'share-alt',\n        path: '/ui',\n        children: [{\n          name: '按钮',\n          path: '/button'\n        }, {\n          name: '消息',\n          path: '/alerts'\n        }, {\n          name: '动画',\n          path: '/animations'\n        }, {\n          name: '图标',\n          path: '/icons'\n        }, {\n          name: '富文本',\n          path: '/editor'\n        }, {\n          name: '模态窗',\n          path: '/modal'\n        }, {\n          name: '遮罩',\n          path: '/mask'\n        }]\n      }, {\n        name: '页面',\n        icon: 'book',\n        path: '/page',\n        children: [{\n          name: '登录页',\n          path: '/sign/login'\n        }, {\n          name: '注册页',\n          path: '/sign/register'\n        }, {\n          name: '锁屏',\n          path: '/lock'\n        }, {\n          name: '画廊',\n          path: '/gallery'\n        }, {\n          name: '空白页',\n          path: '/blank'\n        }, {\n          name: '结果页',\n          path: '/result'\n        }, {\n          name: 'Coming Soon',\n          path: '/coming'\n        }, {\n          name: '403',\n          path: '/403'\n        }, {\n          name: '404',\n          path: '/404'\n        }, {\n          name: '500',\n          path: '/500'\n        }, {\n          name: '多级路由',\n          path: '/level-route/:sub?'\n        }]\n      }, {\n        name: '通用场景',\n        icon: 'bulb',\n        path: '/business',\n        children: [{\n          name: 'CRUD',\n          path: '/crud'\n        }]\n      }], 400);\n    }\n  };\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/__mocks__/user.js"],"names":["fetchMock","delay","mock","toSuccess","toError","options","body","user","JSON","parse","userName","password","name","icon","path","children"],"mappings":"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","sourcesContent":["/**\n * 模拟请求数据\n * @param {FetchMock} fetchMock 当现有条件不满足时，可以使用fetchMock来进行扩展\n * @param {function} delay 增加延迟时间 ms 例: delay(mockData) 或 delay(mockData, 200)\n * @param {function} mock 使用mock生成数据，例:\n\n   mock({\n     'string|1-10': '★' // 生成最少1颗，最多10颗星字符\n   })\n\n   // {'string': '★★★★★★'} \n\n  更多用法参考 http://mockjs.com/examples.html\n */\nexport default ({fetchMock, delay, mock, toSuccess, toError}) => {\n  // 如果现有扩展不满足需求，可以直接使用fetchMock方法\n  // fetchMock.mock(/httpbin.org\\/post/, {/* response */}, {/* options */});\n\n  return {\n    '/api/user/login': (options) => {\n      if (options.body) {\n        const user = JSON.parse(options.body);\n        if (user.userName === 'admin' && user.password === 'admin') {\n          return toSuccess(mock({\n            'userName': 'admin',                // 用户名\n            'name': '@cname',                   // 中文名称\n            'age|1-100': 100,                   // 100以内随机整数\n            'birthday': '@date(\"yyyy-MM-dd\")',  // 日期\n            'city': '@city(true)',              // 中国城市\n            'phone': /^1[385][1-9]\\d{8}/,       // 手机号\n            'token': '@guid'                    // token\n          }), 400);\n        } else {\n          return toError('用户名或密码错误 admin/admin');\n        }\n      } else {\n        return toError('请输入用户名和密码');\n      }\n    },\n    '/api/user/register': options => toSuccess(),\n    '/api/user/menu': options => toSuccess([\n      {\n        name: '仪表盘',\n        icon: 'dashboard',\n        path: '/dashboard',\n      },\n      {\n        name: '组件',\n        icon: 'desktop',\n        path: '/component',\n        children: [\n          {\n            name: '工具条',\n            path: '/toolbar',\n          },\n          {\n            name: 'BaseComponent',\n            path: '/baseComponent',\n          },\n          {\n            name: 'Columns',\n            path: '/column',\n          },\n          {\n            name: '搜索条',\n            path: '/searchBar',\n          },\n          {\n            name: '数据表格',\n            path: '/datatable',\n          },\n          {\n            name: '表单',\n            path: '/form',\n          },\n          {\n            name: '穿梭树',\n            path: '/transferTree',\n          },\n          {\n            name: '图表',\n            path: '/charts',\n            children: [\n              {\n                name: 'ECharts',\n                path: '/charts/ec',\n              },\n              {\n                name: 'G2',\n                path: '/charts/g2',\n              },\n            ]\n          },\n          {\n            name: '打印',\n            path: '/print',\n          },\n          {\n            name: 'Banner 管理',\n            path: '/banner',\n          },\n        ],\n      },\n      {\n        name: 'UI元素',\n        icon: 'share-alt',\n        path: '/ui',\n        children: [\n          {\n            name: '按钮',\n            path: '/button',\n          },\n          {\n            name: '消息',\n            path: '/alerts',\n          },\n          {\n            name: '动画',\n            path: '/animations',\n          },\n          {\n            name: '图标',\n            path: '/icons',\n          },\n          {\n            name: '富文本',\n            path: '/editor',\n          },\n          {\n            name: '模态窗',\n            path: '/modal',\n          },\n          {\n            name: '遮罩',\n            path: '/mask',\n          },\n        ],\n      },\n      {\n        name: '页面',\n        icon: 'book',\n        path: '/page',\n        children: [\n          {\n            name: '登录页',\n            path: '/sign/login',\n          },\n          {\n            name: '注册页',\n            path: '/sign/register',\n          },\n          {\n            name: '锁屏',\n            path: '/lock',\n          },\n          {\n            name: '画廊',\n            path: '/gallery',\n          },\n          {\n            name: '空白页',\n            path: '/blank',\n          },\n          {\n            name: '结果页',\n            path: '/result',\n          },\n          {\n            name: 'Coming Soon',\n            path: '/coming',\n          },\n          {\n            name: '403',\n            path: '/403',\n          },\n          {\n            name: '404',\n            path: '/404',\n          },\n          {\n            name: '500',\n            path: '/500',\n          },\n          {\n            name: '多级路由',\n            path: '/level-route/:sub?',\n          },\n        ],\n      },\n      {\n        name: '通用场景',\n        icon: 'bulb',\n        path: '/business',\n        children: [\n          {\n            name: 'CRUD',\n            path: '/crud',\n          }\n        ],\n      },\n    ], 400)\n  } \n}"]},"metadata":{},"sourceType":"module"}