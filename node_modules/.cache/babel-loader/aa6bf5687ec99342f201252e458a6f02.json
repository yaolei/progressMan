{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Form/model/password.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * 密码控件\n */\nvar PasswordForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PasswordForm, _Component);\n\n  function PasswordForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PasswordForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PasswordForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.checkPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue(_this.props.name)) {\n        callback('两次输入密码不一致!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.checkConfirm = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields([_this.props.name + '_repeat'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(PasswordForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          form = _this$props.form,\n          name = _this$props.name,\n          _this$props$formField = _this$props.formFieldOptions,\n          formFieldOptions = _this$props$formField === void 0 ? {} : _this$props$formField,\n          rules = _this$props.rules,\n          placeholder = _this$props.placeholder,\n          type = _this$props.type,\n          formItemLayout = _this$props.formItemLayout,\n          col = _this$props.col,\n          repeat = _this$props.repeat,\n          getPopupContainer = _this$props.getPopupContainer,\n          otherProps = _objectWithoutProperties(_this$props, [\"form\", \"name\", \"formFieldOptions\", \"rules\", \"placeholder\", \"type\", \"formItemLayout\", \"col\", \"repeat\", \"getPopupContainer\"]);\n\n      var getFieldDecorator = form.getFieldDecorator; // 如果有rules\n\n      formFieldOptions.rules = [{\n        required: true,\n        message: \"\\u8BF7\\u8F93\\u5165\".concat(otherProps.title)\n      }, {\n        validator: this.checkConfirm\n      }]; // 如果有rules\n\n      if (rules && rules.length) {\n        formFieldOptions.rules = formFieldOptions.rules.concat(rules);\n      }\n\n      var ComponentCol = type === 'inline' ? 'div' : _Col;\n      return React.createElement(\"div\", {\n        className: \"col-item col-item-password-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(ComponentCol, Object.assign({\n        className: \"col-item col-item-password\"\n      }, col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(_Form.Item, Object.assign({}, formItemLayout, {\n        label: otherProps.title,\n        hasFeedback: true,\n        className: \"col-item-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), getFieldDecorator(name, formFieldOptions)(React.createElement(_Input, {\n        type: \"password\",\n        placeholder: placeholder || \"\\u8BF7\\u8F93\\u5165\".concat(otherProps.title),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })))), repeat ? React.createElement(ComponentCol, Object.assign({\n        className: \"col-item col-item-repeat-password\"\n      }, col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(_Form.Item, Object.assign({}, formItemLayout, {\n        label: '确认' + otherProps.title,\n        hasFeedback: true,\n        className: \"col-item-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), getFieldDecorator(name + '_repeat', {\n        rules: [{\n          required: true,\n          message: \"\\u8BF7\\u518D\\u6B21\\u8F93\\u5165\".concat(otherProps.title)\n        }, {\n          validator: this.checkPassword\n        }]\n      })(React.createElement(_Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        placeholder: \"\\u4E24\\u6B21\\u8F93\\u5165\\u9700\\u4FDD\\u6301\\u4E00\\u81F4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })))) : null);\n    }\n  }]);\n\n  return PasswordForm;\n}(Component);\n\nPasswordForm.propTypes = {\n  form: PropTypes.object,\n  name: PropTypes.string,\n  formFieldOptions: PropTypes.object,\n  rules: PropTypes.array,\n  placeholder: PropTypes.string,\n  ComponentCol: PropTypes.node,\n  ComponentItem: PropTypes.node,\n  formItemLayout: PropTypes.object,\n  col: PropTypes.object,\n  repeat: PropTypes.bool,\n  type: PropTypes.string\n};\nexport { PasswordForm as default };","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Form/model/password.js"],"names":["React","Component","PropTypes","PasswordForm","state","confirmDirty","handleConfirmBlur","e","value","target","setState","checkPassword","rule","callback","form","props","getFieldValue","name","checkConfirm","validateFields","force","formFieldOptions","rules","placeholder","type","formItemLayout","col","repeat","getPopupContainer","otherProps","getFieldDecorator","required","message","title","validator","length","concat","ComponentCol","propTypes","object","string","array","node","ComponentItem","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Form, Col } from 'antd';\n/**\n * 密码控件\n */\nexport default class PasswordForm extends Component {\n  static propTypes = {\n    form: PropTypes.object,\n    name: PropTypes.string,\n    formFieldOptions: PropTypes.object,\n    rules: PropTypes.array,\n    placeholder: PropTypes.string,\n    ComponentCol: PropTypes.node,\n    ComponentItem: PropTypes.node,\n    formItemLayout: PropTypes.object,\n    col: PropTypes.object,\n    repeat: PropTypes.bool,\n    type: PropTypes.string\n  };\n\n  state = {\n    confirmDirty: false\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  checkPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue(this.props.name)) {\n      callback('两次输入密码不一致!');\n    } else {\n      callback();\n    }\n  };\n\n  checkConfirm = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([this.props.name + '_repeat'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const {\n      form,\n      name,\n      formFieldOptions = {},\n      rules,\n      placeholder,\n      type,\n      formItemLayout,\n      col,\n      repeat,\n      getPopupContainer,\n      ...otherProps\n    } = this.props;\n\n    const { getFieldDecorator } = form;\n\n    // 如果有rules\n    formFieldOptions.rules = [\n      {\n        required: true,\n        message: `请输入${otherProps.title}`\n      },\n      {\n        validator: this.checkConfirm\n      }\n    ];\n\n    // 如果有rules\n    if (rules && rules.length) {\n      formFieldOptions.rules = formFieldOptions.rules.concat(rules);\n    }\n\n    let ComponentCol = type === 'inline' ? 'div' : Col;\n\n    return (\n      <div className=\"col-item col-item-password-wrap\">\n        <ComponentCol className=\"col-item col-item-password\" {...col}>\n          <Form.Item\n            {...formItemLayout}\n            label={otherProps.title}\n            hasFeedback\n            className=\"col-item-content\"\n          >\n            {getFieldDecorator(name, formFieldOptions)(\n              <Input\n                type=\"password\"\n                placeholder={placeholder || `请输入${otherProps.title}`}\n              />\n            )}\n          </Form.Item>\n        </ComponentCol>\n        {repeat ? (\n          <ComponentCol className=\"col-item col-item-repeat-password\" {...col}>\n            <Form.Item\n              {...formItemLayout}\n              label={'确认' + otherProps.title}\n              hasFeedback\n              className=\"col-item-content\"\n            >\n              {getFieldDecorator(name + '_repeat', {\n                rules: [\n                  {\n                    required: true,\n                    message: `请再次输入${otherProps.title}`\n                  },\n                  {\n                    validator: this.checkPassword\n                  }\n                ]\n              })(\n                <Input\n                  type=\"password\"\n                  onBlur={this.handleConfirmBlur}\n                  placeholder=\"两次输入需保持一致\"\n                />\n              )}\n            </Form.Item>\n          </ComponentCol>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}