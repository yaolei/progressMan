{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = checkModel;\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime/core-js/object/keys\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _utils = require(\"./utils\");\n\nfunction checkModel(model, existModels) {\n  var namespace = model.namespace,\n      reducers = model.reducers,\n      effects = model.effects,\n      subscriptions = model.subscriptions; // namespace 必须被定义\n\n  (0, _invariant.default)(namespace, \"[app.model] namespace should be defined\"); // 并且是字符串\n\n  (0, _invariant.default)(typeof namespace === 'string', \"[app.model] namespace should be string, but got \".concat((0, _typeof2.default)(namespace))); // 并且唯一\n\n  (0, _invariant.default)(!existModels.some(function (model) {\n    return model.namespace === namespace;\n  }), \"[app.model] namespace should be unique\"); // state 可以为任意值\n  // reducers 可以为空，PlainObject 或者数组\n\n  if (reducers) {\n    (0, _invariant.default)((0, _utils.isPlainObject)(reducers) || (0, _utils.isArray)(reducers), \"[app.model] reducers should be plain object or array, but got \".concat((0, _typeof2.default)(reducers))); // 数组的 reducers 必须是 [Object, Function] 的格式\n\n    (0, _invariant.default)(!(0, _utils.isArray)(reducers) || (0, _utils.isPlainObject)(reducers[0]) && (0, _utils.isFunction)(reducers[1]), \"[app.model] reducers with array should be [Object, Function]\");\n  } // effects 可以为空，PlainObject\n\n\n  if (effects) {\n    (0, _invariant.default)((0, _utils.isPlainObject)(effects), \"[app.model] effects should be plain object, but got \".concat((0, _typeof2.default)(effects)));\n  }\n\n  if (subscriptions) {\n    // subscriptions 可以为空，PlainObject\n    (0, _invariant.default)((0, _utils.isPlainObject)(subscriptions), \"[app.model] subscriptions should be plain object, but got \".concat((0, _typeof2.default)(subscriptions))); // subscription 必须为函数\n\n    (0, _invariant.default)(isAllFunction(subscriptions), \"[app.model] subscription should be function\");\n  }\n}\n\nfunction isAllFunction(obj) {\n  return (0, _keys.default)(obj).every(function (key) {\n    return (0, _utils.isFunction)(obj[key]);\n  });\n}","map":null,"metadata":{},"sourceType":"script"}