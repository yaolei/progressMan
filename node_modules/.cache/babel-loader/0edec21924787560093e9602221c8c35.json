{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"/Users/evan/progressMan/src/routes/Dashboard/components/index.js\",\n    _dec,\n    _class;\n\nimport React from 'react';\nimport { connect } from 'dva';\nimport Icon from 'components/Icon';\nimport BaseComponent from 'components/BaseComponent';\nimport Panel from 'components/Panel';\nimport G2 from 'components/Charts/G2';\nimport DataSet from '@antv/data-set';\nimport './index.less';\nvar Content = _Layout.Content;\nvar Chart = G2.Chart,\n    Axis = G2.Axis,\n    Geom = G2.Geom,\n    Tooltip = G2.Tooltip,\n    Legend = G2.Legend,\n    Coord = G2.Coord,\n    Label = G2.Label;\nvar rankingListData = [];\n\nfor (var i = 0; i < 7; i += 1) {\n  rankingListData.push({\n    title: \"\\u5DE5\\u4E13\\u8DEF \".concat(i, \" \\u53F7\\u5E97\"),\n    total: 323234\n  });\n}\n\nvar Dashboard = (_dec = connect(function (_ref) {\n  var dashboard = _ref.dashboard;\n  return {\n    dashboard: dashboard\n  };\n}), _dec(_class =\n/*#__PURE__*/\nfunction (_BaseComponent) {\n  _inherits(Dashboard, _BaseComponent);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var dashboard = this.props.dashboard;\n      var bar1 = dashboard.bar1,\n          bar2 = dashboard.bar2;\n      return React.createElement(_Layout, {\n        className: \"full-layout page dashboard-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        gutter: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        className: \"qq\",\n        header: false,\n        cover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"qq\",\n        antd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"523\")), React.createElement(\"h5\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"QQ\"))), React.createElement(_Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        className: \"wechat\",\n        header: false,\n        cover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"wechat\",\n        antd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"99+\")), React.createElement(\"h5\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"\\u5FAE\\u4FE1\"))), React.createElement(_Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        className: \"skype\",\n        header: false,\n        cover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"skype\",\n        antd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"2\")), React.createElement(\"h5\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"skype\"))), React.createElement(_Col, {\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        className: \"github\",\n        header: false,\n        cover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"github\",\n        antd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"999\")), React.createElement(\"h5\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"github\")))), React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        title: \"\\u6570\\u636E\\u9762\\u677F\\u7EC4\\u4EF6\",\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-auto-hidden flex flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"flex-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\\u9500\\u552E\\u989D\\u5206\\u5E03\"), React.createElement(\"div\", {\n        className: \"flex-auto-hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Bar2, {\n        data: bar2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"flex-none sales-order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"\\u95E8\\u5E97\\u9500\\u552E\\u989D\\u6392\\u540D\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, rankingListData.map(function (item, i) {\n        return React.createElement(\"li\", {\n          key: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, i + 1), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, item.title), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, item.total));\n      }))))))), React.createElement(_Row, {\n        gutter: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        title: \"\\u6298\\u7EBF\\u56FE\",\n        height: 260,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Line1, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), React.createElement(_Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        title: \"\\u997C\\u56FE\",\n        height: 260,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Pie1, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(_Col, {\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        title: \"\\u67F1\\u72B6\\u56FE\",\n        height: 260,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Bar1, {\n        data: bar1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Dashboard;\n}(BaseComponent)) || _class);\nexport { Dashboard as default }; // source https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/bar/basic-column\n\nvar Bar1 = function Bar1(props) {\n  return React.createElement(Chart, {\n    data: props.data,\n    scale: {\n      sales: {\n        tickInterval: 20\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Axis, {\n    name: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(Axis, {\n    name: \"sales\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    crosshairs: {\n      type: 'y'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(Geom, {\n    type: \"interval\",\n    position: \"year*sales\",\n    color: ['year', ['#3da0ff', '#51ca73', '#fad337', '#424e87', '#985ce6']],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }));\n}; // source https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/bar/grouped-column\n\n\nvar Bar2 = function Bar2(props) {\n  var ds = new DataSet();\n  var dv = ds.createView().source(props.data);\n  dv.transform({\n    type: 'fold',\n    fields: ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May.', 'Jun.', 'Jul.', 'Aug.'],\n    // 展开字段集\n    key: '月份',\n    // key字段\n    value: '月均降雨量' // value字段\n\n  });\n  return React.createElement(Chart, {\n    data: dv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Axis, {\n    name: \"\\u6708\\u4EFD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(Axis, {\n    name: \"\\u6708\\u5747\\u964D\\u96E8\\u91CF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    crosshairs: {\n      type: 'y'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(Geom, {\n    type: \"interval\",\n    position: \"\\u6708\\u4EFD*\\u6708\\u5747\\u964D\\u96E8\\u91CF\",\n    color: 'name',\n    adjust: [{\n      type: 'dodge',\n      marginRatio: 1 / 32\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }));\n};\n\nvar Pie1 = function Pie1(props) {\n  var data = [{\n    item: '事例一',\n    count: 40\n  }, {\n    item: '事例二',\n    count: 21\n  }, {\n    item: '事例三',\n    count: 17\n  }, {\n    item: '事例四',\n    count: 13\n  }, {\n    item: '事例五',\n    count: 9\n  }];\n  var dv = new DataSet.DataView();\n  dv.source(data).transform({\n    type: 'percent',\n    field: 'count',\n    dimension: 'item',\n    as: 'percent'\n  });\n  var cols = {\n    percent: {\n      formatter: function formatter(val) {\n        val = val * 100 + '%';\n        return val;\n      }\n    }\n  };\n  return React.createElement(Chart, {\n    data: dv,\n    scale: cols,\n    padding: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Coord, {\n    type: 'theta',\n    radius: 0.75,\n    innerRadius: 0.6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(Axis, {\n    name: \"percent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    position: \"right\",\n    offsetY: -window.innerHeight / 2 + 120,\n    offsetX: -100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    showTitle: false,\n    itemTpl: \"<li><span style=\\\"background-color:{color};\\\" class=\\\"g2-tooltip-marker\\\"></span>{name}: {value}</li>\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(Geom, {\n    type: \"intervalStack\",\n    position: \"percent\",\n    color: \"item\",\n    tooltip: ['item*percent', function (item, percent) {\n      percent = percent * 100 + '%';\n      return {\n        name: item,\n        value: percent\n      };\n    }],\n    style: {\n      lineWidth: 1,\n      stroke: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Label, {\n    content: \"percent\",\n    formatter: function formatter(val, item) {\n      return item.point.item + ': ' + val;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })));\n}; // https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/line/series\n\n\nvar Line1 = function Line1(props) {\n  var data = [{\n    month: 'Jan',\n    Tokyo: 7.0,\n    London: 3.9\n  }, {\n    month: 'Feb',\n    Tokyo: 6.9,\n    London: 4.2\n  }, {\n    month: 'Mar',\n    Tokyo: 9.5,\n    London: 5.7\n  }, {\n    month: 'Apr',\n    Tokyo: 14.5,\n    London: 8.5\n  }, {\n    month: 'May',\n    Tokyo: 18.4,\n    London: 11.9\n  }, {\n    month: 'Jun',\n    Tokyo: 21.5,\n    London: 15.2\n  }, {\n    month: 'Jul',\n    Tokyo: 25.2,\n    London: 17.0\n  }, {\n    month: 'Aug',\n    Tokyo: 26.5,\n    London: 16.6\n  }, {\n    month: 'Sep',\n    Tokyo: 23.3,\n    London: 14.2\n  }, {\n    month: 'Oct',\n    Tokyo: 18.3,\n    London: 10.3\n  }, {\n    month: 'Nov',\n    Tokyo: 13.9,\n    London: 6.6\n  }, {\n    month: 'Dec',\n    Tokyo: 9.6,\n    London: 4.8\n  }];\n  var ds = new DataSet();\n  var dv = ds.createView().source(data);\n  dv.transform({\n    type: 'fold',\n    fields: ['Tokyo', 'London'],\n    // 展开字段集\n    key: 'city',\n    // key字段\n    value: 'temperature' // value字段\n\n  });\n  var cols = {\n    month: {\n      range: [0, 1]\n    }\n  };\n  return React.createElement(Chart, {\n    data: dv,\n    scale: cols,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), React.createElement(Axis, {\n    name: \"month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }), React.createElement(Axis, {\n    name: \"temperature\",\n    label: {\n      formatter: function formatter(val) {\n        return \"\".concat(val, \"\\xB0C\");\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    crosshairs: {\n      type: 'y'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }), React.createElement(Geom, {\n    type: \"line\",\n    position: \"month*temperature\",\n    size: 2,\n    color: 'city',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }), React.createElement(Geom, {\n    type: \"point\",\n    position: \"month*temperature\",\n    size: 4,\n    shape: 'circle',\n    color: 'city',\n    style: {\n      stroke: '#fff',\n      lineWidth: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/evan/progressMan/src/routes/Dashboard/components/index.js"],"names":["React","connect","Icon","BaseComponent","Panel","G2","DataSet","Content","Chart","Axis","Geom","Tooltip","Legend","Coord","Label","rankingListData","i","push","title","total","Dashboard","dashboard","props","bar1","bar2","map","item","Bar1","data","sales","tickInterval","type","Bar2","ds","dv","createView","source","transform","fields","key","value","marginRatio","Pie1","count","DataView","field","dimension","as","cols","percent","formatter","val","window","innerHeight","name","lineWidth","stroke","point","Line1","month","Tokyo","London","range"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'dva';\nimport { Layout, Col, Row } from 'antd';\nimport Icon from 'components/Icon';\nimport BaseComponent from 'components/BaseComponent';\nimport Panel from 'components/Panel';\nimport G2 from 'components/Charts/G2';\nimport DataSet from '@antv/data-set';\nimport './index.less';\nconst { Content } = Layout;\nconst { Chart, Axis, Geom, Tooltip, Legend, Coord, Label } = G2;\n\nconst rankingListData = [];\nfor (let i = 0; i < 7; i += 1) {\n  rankingListData.push({\n    title: `工专路 ${i} 号店`,\n    total: 323234\n  });\n}\n\n@connect(({ dashboard }) => ({\n  dashboard\n}))\nexport default class Dashboard extends BaseComponent {\n  render() {\n    const { dashboard } = this.props;\n    const { bar1, bar2 } = dashboard;\n    return (\n      <Layout className=\"full-layout page dashboard-page\">\n        <Content>\n          <Row gutter={20}>\n            <Col md={6}>\n              <Panel className=\"qq\" header={false} cover>\n                <Icon type=\"qq\" antd />\n                <h2>\n                  <b>523</b>\n                </h2>\n                <h5 className=\"text-muted\">QQ</h5>\n              </Panel>\n            </Col>\n            <Col md={6}>\n              <Panel className=\"wechat\" header={false} cover>\n                <Icon type=\"wechat\" antd />\n                <h2>\n                  <b>99+</b>\n                </h2>\n                <h5 className=\"text-muted\">微信</h5>\n              </Panel>\n            </Col>\n            <Col md={6}>\n              <Panel className=\"skype\" header={false} cover>\n                <Icon type=\"skype\" antd />\n                <h2>\n                  <b>2</b>\n                </h2>\n                <h5 className=\"text-muted\">skype</h5>\n              </Panel>\n            </Col>\n            <Col md={6}>\n              <Panel className=\"github\" header={false} cover>\n                <Icon type=\"github\" antd />\n                <h2>\n                  <b>999</b>\n                </h2>\n                <h5 className=\"text-muted\">github</h5>\n              </Panel>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Panel title=\"数据面板组件\" height={300}>\n                <div className=\"flex\">\n                  <div className=\"flex-auto-hidden flex flex-column\">\n                    <h4 className=\"flex-none\">销售额分布</h4>\n                    <div className=\"flex-auto-hidden\">\n                      <Bar2 data={bar2} />\n                    </div>\n                  </div>\n                  <div className=\"flex-none sales-order\">\n                    <h4>门店销售额排名</h4>\n                    <ul>\n                      {rankingListData.map((item, i) => (\n                        <li key={item.title}>\n                          <span>{i + 1}</span>\n                          <span>{item.title}</span>\n                          <span>{item.total}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </Panel>\n            </Col>\n          </Row>\n          <Row gutter={20}>\n            <Col md={8}>\n              <Panel title=\"折线图\" height={260}>\n                <Line1 />\n              </Panel>\n            </Col>\n            <Col md={8}>\n              <Panel title=\"饼图\" height={260}>\n                <Pie1 />\n              </Panel>\n            </Col>\n            <Col md={8}>\n              <Panel title=\"柱状图\" height={260}>\n                <Bar1 data={bar1} />\n              </Panel>\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\n// source https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/bar/basic-column\nconst Bar1 = props => {\n  return (\n    <Chart data={props.data} scale={{ sales: { tickInterval: 20 } }}>\n      <Axis name=\"year\" />\n      <Axis name=\"sales\" />\n      <Tooltip crosshairs={{ type: 'y' }} />\n      <Geom\n        type=\"interval\"\n        position=\"year*sales\"\n        color={[\n          'year',\n          ['#3da0ff', '#51ca73', '#fad337', '#424e87', '#985ce6']\n        ]}\n      />\n    </Chart>\n  );\n};\n\n// source https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/bar/grouped-column\nconst Bar2 = props => {\n  const ds = new DataSet();\n  const dv = ds.createView().source(props.data);\n  dv.transform({\n    type: 'fold',\n    fields: ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May.', 'Jun.', 'Jul.', 'Aug.'], // 展开字段集\n    key: '月份', // key字段\n    value: '月均降雨量' // value字段\n  });\n  return (\n    <Chart data={dv}>\n      <Axis name=\"月份\" />\n      <Axis name=\"月均降雨量\" />\n      <Legend />\n      <Tooltip crosshairs={{ type: 'y' }} />\n      <Geom\n        type=\"interval\"\n        position=\"月份*月均降雨量\"\n        color={'name'}\n        adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]}\n      />\n    </Chart>\n  );\n};\n\nconst Pie1 = props => {\n  const data = [\n    { item: '事例一', count: 40 },\n    { item: '事例二', count: 21 },\n    { item: '事例三', count: 17 },\n    { item: '事例四', count: 13 },\n    { item: '事例五', count: 9 }\n  ];\n\n  const dv = new DataSet.DataView();\n  dv.source(data).transform({\n    type: 'percent',\n    field: 'count',\n    dimension: 'item',\n    as: 'percent'\n  });\n  const cols = {\n    percent: {\n      formatter: val => {\n        val = val * 100 + '%';\n        return val;\n      }\n    }\n  };\n  return (\n    <Chart data={dv} scale={cols} padding={10}>\n      <Coord type={'theta'} radius={0.75} innerRadius={0.6} />\n      <Axis name=\"percent\" />\n      <Legend\n        position=\"right\"\n        offsetY={-window.innerHeight / 2 + 120}\n        offsetX={-100}\n      />\n      <Tooltip\n        showTitle={false}\n        itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\n      />\n      <Geom\n        type=\"intervalStack\"\n        position=\"percent\"\n        color=\"item\"\n        tooltip={[\n          'item*percent',\n          (item, percent) => {\n            percent = percent * 100 + '%';\n            return {\n              name: item,\n              value: percent\n            };\n          }\n        ]}\n        style={{ lineWidth: 1, stroke: '#fff' }}\n      >\n        <Label\n          content=\"percent\"\n          formatter={(val, item) => {\n            return item.point.item + ': ' + val;\n          }}\n        />\n      </Geom>\n    </Chart>\n  );\n};\n\n// https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/line/series\nconst Line1 = props => {\n  const data = [\n    { month: 'Jan', Tokyo: 7.0, London: 3.9 },\n    { month: 'Feb', Tokyo: 6.9, London: 4.2 },\n    { month: 'Mar', Tokyo: 9.5, London: 5.7 },\n    { month: 'Apr', Tokyo: 14.5, London: 8.5 },\n    { month: 'May', Tokyo: 18.4, London: 11.9 },\n    { month: 'Jun', Tokyo: 21.5, London: 15.2 },\n    { month: 'Jul', Tokyo: 25.2, London: 17.0 },\n    { month: 'Aug', Tokyo: 26.5, London: 16.6 },\n    { month: 'Sep', Tokyo: 23.3, London: 14.2 },\n    { month: 'Oct', Tokyo: 18.3, London: 10.3 },\n    { month: 'Nov', Tokyo: 13.9, London: 6.6 },\n    { month: 'Dec', Tokyo: 9.6, London: 4.8 }\n  ];\n  const ds = new DataSet();\n  const dv = ds.createView().source(data);\n  dv.transform({\n    type: 'fold',\n    fields: ['Tokyo', 'London'], // 展开字段集\n    key: 'city', // key字段\n    value: 'temperature' // value字段\n  });\n\n  const cols = {\n    month: {\n      range: [0, 1]\n    }\n  };\n  return (\n    <Chart data={dv} scale={cols}>\n      <Legend />\n      <Axis name=\"month\" />\n      <Axis name=\"temperature\" label={{ formatter: val => `${val}°C` }} />\n      <Tooltip crosshairs={{ type: 'y' }} />\n      <Geom type=\"line\" position=\"month*temperature\" size={2} color={'city'} />\n      <Geom\n        type=\"point\"\n        position=\"month*temperature\"\n        size={4}\n        shape={'circle'}\n        color={'city'}\n        style={{ stroke: '#fff', lineWidth: 1 }}\n      />\n    </Chart>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}