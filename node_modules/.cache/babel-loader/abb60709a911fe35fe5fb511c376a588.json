{"ast":null,"code":"var _jsxFileName = \"/Users/evan/progressMan/src/routes/Widgets/Charts/G2/components/Pie.js\";\nimport React from 'react';\nimport G2 from 'components/Charts/G2';\nimport DataSet from '@antv/data-set';\nvar Chart = G2.Chart,\n    Axis = G2.Axis,\n    Geom = G2.Geom,\n    Tooltip = G2.Tooltip,\n    Legend = G2.Legend,\n    Coord = G2.Coord,\n    Label = G2.Label;\nvar DataView = DataSet.DataView;\nvar data = [{\n  item: '事例一',\n  count: 40\n}, {\n  item: '事例二',\n  count: 21\n}, {\n  item: '事例三',\n  count: 17\n}, {\n  item: '事例四',\n  count: 13\n}, {\n  item: '事例五',\n  count: 9\n}];\nvar dv = new DataView();\ndv.source(data).transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nvar cols = {\n  percent: {\n    formatter: function formatter(val) {\n      val = val * 100 + '%';\n      return val;\n    }\n  }\n};\nexport default (function (props) {\n  return React.createElement(Chart, {\n    data: dv,\n    scale: cols,\n    forceFit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Coord, {\n    type: \"theta\",\n    radius: 0.75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Axis, {\n    name: \"percent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    position: \"right\",\n    offsetY: 0,\n    offsetX: -100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    showTitle: false,\n    itemTpl: \"<li><span style=\\\"background-color:{color};\\\" class=\\\"g2-tooltip-marker\\\"></span>{name}: {value}</li>\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Geom, {\n    type: \"intervalStack\",\n    position: \"percent\",\n    color: \"item\",\n    tooltip: ['item*percent', function (item, percent) {\n      percent = percent * 100 + '%';\n      return {\n        name: item,\n        value: percent\n      };\n    }],\n    style: {\n      lineWidth: 1,\n      stroke: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Label, {\n    content: \"percent\",\n    formatter: function formatter(val, item) {\n      return item.point.item + ': ' + val;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/routes/Widgets/Charts/G2/components/Pie.js"],"names":["React","G2","DataSet","Chart","Axis","Geom","Tooltip","Legend","Coord","Label","DataView","data","item","count","dv","source","transform","type","field","dimension","as","cols","percent","formatter","val","props","name","value","lineWidth","stroke","point"],"mappings":"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","sourcesContent":["import React from 'react';\nimport G2 from 'components/Charts/G2';\nimport DataSet from '@antv/data-set';\nconst { Chart, Axis, Geom, Tooltip, Legend, Coord, Label } = G2;\n\nconst { DataView } = DataSet;\nconst data = [\n  { item: '事例一', count: 40 },\n  { item: '事例二', count: 21 },\n  { item: '事例三', count: 17 },\n  { item: '事例四', count: 13 },\n  { item: '事例五', count: 9 }\n];\nconst dv = new DataView();\ndv.source(data).transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst cols = {\n  percent: {\n    formatter: val => {\n      val = val * 100 + '%';\n      return val;\n    }\n  }\n};\n\nexport default props => (\n  <Chart\n    data={dv}\n    scale={cols}\n    forceFit\n  >\n    <Coord type=\"theta\" radius={0.75} />\n    <Axis name=\"percent\" />\n    <Legend\n      position=\"right\"\n      offsetY={0}\n      offsetX={-100}\n    />\n    <Tooltip\n      showTitle={false}\n      itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\n    />\n    <Geom\n      type=\"intervalStack\"\n      position=\"percent\"\n      color=\"item\"\n      tooltip={[\n        'item*percent',\n        (item, percent) => {\n          percent = percent * 100 + '%';\n          return {\n            name: item,\n            value: percent\n          };\n        }\n      ]}\n      style={{ lineWidth: 1, stroke: '#fff' }}\n    >\n      <Label\n        content=\"percent\"\n        formatter={(val, item) => {\n          return item.point.item + ': ' + val;\n        }}\n      />\n    </Geom>\n  </Chart>\n);\n"]},"metadata":{},"sourceType":"module"}