{"ast":null,"code":"import _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"antd/lib/notification/style\";\nimport _notification from \"antd/lib/notification\";\nimport $$ from 'cmn-utils';\nimport Notification from './Notification';\nimport './antdNotice.less';\nvar prefixCls = 'antui-notification';\nvar defaultConfig = {};\n\nfunction notice(config, type, title) {\n  if ($$.isObject(config)) {\n    _notification[type](_objectSpread({\n      className: \"\".concat(prefixCls, \" \").concat(prefixCls, \"-\").concat(type)\n    }, defaultConfig, config));\n  } else {\n    _notification[type](_objectSpread({\n      className: \"\".concat(prefixCls, \" \").concat(prefixCls, \"-\").concat(type),\n      message: title,\n      description: config\n    }, defaultConfig));\n  }\n}\n\nvar _default =\n/*#__PURE__*/\nfunction (_Notification) {\n  _inherits(_default, _Notification);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, null, [{\n    key: \"success\",\n    value: function success(config) {\n      notice(config, 'success', '成功');\n    }\n  }, {\n    key: \"error\",\n    value: function error(config) {\n      notice(config, 'error', '出错了');\n    }\n  }, {\n    key: \"info\",\n    value: function info(config) {\n      notice(config, 'info', '提示');\n    }\n  }, {\n    key: \"warning\",\n    value: function warning(config) {\n      notice(config, 'warning', '注意');\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(config) {\n      notice(config, 'warning', '注意');\n    }\n  }, {\n    key: \"close\",\n    value: function close(key) {\n      _notification.close(key);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _notification.destroy();\n    }\n  }]);\n\n  return _default;\n}(Notification);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Notification/antdNotice.js"],"names":["$$","Notification","prefixCls","defaultConfig","notice","config","type","title","isObject","className","message","description","key","close","destroy"],"mappings":";;;;;;;;AACA,OAAOA,EAAP,MAAe,WAAf;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,mBAAP;AAEA,IAAMC,SAAS,GAAG,oBAAlB;AACA,IAAMC,aAAa,GAAG,EAAtB;;AAGA,SAASC,MAAT,CAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqC;AACnC,MAAIP,EAAE,CAACQ,QAAH,CAAYH,MAAZ,CAAJ,EAAyB;AACvB,kBAAaC,IAAb;AACEG,MAAAA,SAAS,YAAKP,SAAL,cAAkBA,SAAlB,cAA+BI,IAA/B;AADX,OAEKH,aAFL,EAGKE,MAHL;AAKD,GAND,MAMO;AACL,kBAAaC,IAAb;AACEG,MAAAA,SAAS,YAAKP,SAAL,cAAkBA,SAAlB,cAA+BI,IAA/B,CADX;AAEEI,MAAAA,OAAO,EAAEH,KAFX;AAGEI,MAAAA,WAAW,EAAEN;AAHf,OAIKF,aAJL;AAMD;AACF;;;;;;;;;;;;;;;4BAGgBE,M,EAAQ;AACrBD,MAAAA,MAAM,CAACC,MAAD,EAAS,SAAT,EAAoB,IAApB,CAAN;AACD;;;0BAEYA,M,EAAQ;AACnBD,MAAAA,MAAM,CAACC,MAAD,EAAS,OAAT,EAAkB,KAAlB,CAAN;AACD;;;yBAEWA,M,EAAQ;AAClBD,MAAAA,MAAM,CAACC,MAAD,EAAS,MAAT,EAAiB,IAAjB,CAAN;AACD;;;4BAEcA,M,EAAQ;AACrBD,MAAAA,MAAM,CAACC,MAAD,EAAS,SAAT,EAAoB,IAApB,CAAN;AACD;;;yBAEWA,M,EAAQ;AAClBD,MAAAA,MAAM,CAACC,MAAD,EAAS,SAAT,EAAoB,IAApB,CAAN;AACD;;;0BAEYO,G,EAAK;AAChB,oBAAaC,KAAb,CAAmBD,GAAnB;AACD;;;8BAEgB;AACf,oBAAaE,OAAb;AACD;;;;EA3B0Bb,Y","sourcesContent":["import { notification } from 'antd';\nimport $$ from 'cmn-utils';\nimport Notification from './Notification';\nimport './antdNotice.less';\n\nconst prefixCls = 'antui-notification';\nconst defaultConfig = {\n};\n\nfunction notice(config, type, title) {\n  if ($$.isObject(config)) {\n    notification[type]({\n      className: `${prefixCls} ${prefixCls}-${type}`,\n      ...defaultConfig,\n      ...config\n    });\n  } else {\n    notification[type]({\n      className: `${prefixCls} ${prefixCls}-${type}`,\n      message: title,\n      description: config,\n      ...defaultConfig\n    });\n  }\n}\n\nexport default class extends Notification {\n  static success(config) {\n    notice(config, 'success', '成功');\n  }\n\n  static error(config) {\n    notice(config, 'error', '出错了');\n  }\n\n  static info(config) {\n    notice(config, 'info', '提示');\n  }\n\n  static warning(config) {\n    notice(config, 'warning', '注意');\n  }\n\n  static warn(config) {\n    notice(config, 'warning', '注意');\n  }\n\n  static close(key) {\n    notification.close(key);\n  }\n\n  static destroy() {\n    notification.destroy();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}