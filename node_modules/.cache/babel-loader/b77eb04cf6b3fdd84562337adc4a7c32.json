{"ast":null,"code":"import _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/routes/Widgets/Charts/EC/components/Map.js\";\nimport React from 'react';\nimport EC from 'components/Charts/ECharts/EC';\nimport 'echarts/lib/chart/map';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\n\nrequire('echarts/map/js/china.js');\n\nvar Airport =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Airport, _React$PureComponent);\n\n  function Airport() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Airport);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Airport)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getOption = function () {\n      var geoCoordMap = {\n        上海: [121.4648, 31.2891],\n        东莞: [113.8953, 22.901],\n        东营: [118.7073, 37.5513],\n        中山: [113.4229, 22.478],\n        临汾: [111.4783, 36.1615],\n        临沂: [118.3118, 35.2936],\n        丹东: [124.541, 40.4242],\n        丽水: [119.5642, 28.1854],\n        乌鲁木齐: [87.9236, 43.5883],\n        佛山: [112.8955, 23.1097],\n        保定: [115.0488, 39.0948],\n        兰州: [103.5901, 36.3043],\n        包头: [110.3467, 41.4899],\n        北京: [116.4551, 40.2539],\n        北海: [109.314, 21.6211],\n        南京: [118.8062, 31.9208],\n        南宁: [108.479, 23.1152],\n        南昌: [116.0046, 28.6633],\n        南通: [121.1023, 32.1625],\n        厦门: [118.1689, 24.6478],\n        台州: [121.1353, 28.6688],\n        合肥: [117.29, 32.0581],\n        呼和浩特: [111.4124, 40.4901],\n        咸阳: [108.4131, 34.8706],\n        哈尔滨: [127.9688, 45.368],\n        唐山: [118.4766, 39.6826],\n        嘉兴: [120.9155, 30.6354],\n        大同: [113.7854, 39.8035],\n        大连: [122.2229, 39.4409],\n        天津: [117.4219, 39.4189],\n        太原: [112.3352, 37.9413],\n        威海: [121.9482, 37.1393],\n        宁波: [121.5967, 29.6466],\n        宝鸡: [107.1826, 34.3433],\n        宿迁: [118.5535, 33.7775],\n        常州: [119.4543, 31.5582],\n        广州: [113.5107, 23.2196],\n        廊坊: [116.521, 39.0509],\n        延安: [109.1052, 36.4252],\n        张家口: [115.1477, 40.8527],\n        徐州: [117.5208, 34.3268],\n        德州: [116.6858, 37.2107],\n        惠州: [114.6204, 23.1647],\n        成都: [103.9526, 30.7617],\n        扬州: [119.4653, 32.8162],\n        承德: [117.5757, 41.4075],\n        拉萨: [91.1865, 30.1465],\n        无锡: [120.3442, 31.5527],\n        日照: [119.2786, 35.5023],\n        昆明: [102.9199, 25.4663],\n        杭州: [119.5313, 29.8773],\n        枣庄: [117.323, 34.8926],\n        柳州: [109.3799, 24.9774],\n        株洲: [113.5327, 27.0319],\n        武汉: [114.3896, 30.6628],\n        汕头: [117.1692, 23.3405],\n        江门: [112.6318, 22.1484],\n        沈阳: [123.1238, 42.1216],\n        沧州: [116.8286, 38.2104],\n        河源: [114.917, 23.9722],\n        泉州: [118.3228, 25.1147],\n        泰安: [117.0264, 36.0516],\n        泰州: [120.0586, 32.5525],\n        济南: [117.1582, 36.8701],\n        济宁: [116.8286, 35.3375],\n        海口: [110.3893, 19.8516],\n        淄博: [118.0371, 36.6064],\n        淮安: [118.927, 33.4039],\n        深圳: [114.5435, 22.5439],\n        清远: [112.9175, 24.3292],\n        温州: [120.498, 27.8119],\n        渭南: [109.7864, 35.0299],\n        湖州: [119.8608, 30.7782],\n        湘潭: [112.5439, 27.7075],\n        滨州: [117.8174, 37.4963],\n        潍坊: [119.0918, 36.524],\n        烟台: [120.7397, 37.5128],\n        玉溪: [101.9312, 23.8898],\n        珠海: [113.7305, 22.1155],\n        盐城: [120.2234, 33.5577],\n        盘锦: [121.9482, 41.0449],\n        石家庄: [114.4995, 38.1006],\n        福州: [119.4543, 25.9222],\n        秦皇岛: [119.2126, 40.0232],\n        绍兴: [120.564, 29.7565],\n        聊城: [115.9167, 36.4032],\n        肇庆: [112.1265, 23.5822],\n        舟山: [122.2559, 30.2234],\n        苏州: [120.6519, 31.3989],\n        莱芜: [117.6526, 36.2714],\n        菏泽: [115.6201, 35.2057],\n        营口: [122.4316, 40.4297],\n        葫芦岛: [120.1575, 40.578],\n        衡水: [115.8838, 37.7161],\n        衢州: [118.6853, 28.8666],\n        西宁: [101.4038, 36.8207],\n        西安: [109.1162, 34.2004],\n        贵阳: [106.6992, 26.7682],\n        连云港: [119.1248, 34.552],\n        邢台: [114.8071, 37.2821],\n        邯郸: [114.4775, 36.535],\n        郑州: [113.4668, 34.6234],\n        鄂尔多斯: [108.9734, 39.2487],\n        重庆: [107.7539, 30.1904],\n        金华: [120.0037, 29.1028],\n        铜川: [109.0393, 35.1947],\n        银川: [106.3586, 38.1775],\n        镇江: [119.4763, 31.9702],\n        长春: [125.8154, 44.2584],\n        长沙: [113.0823, 28.2568],\n        长治: [112.8625, 36.4746],\n        阳泉: [113.4778, 38.0951],\n        青岛: [120.4651, 36.3373],\n        韶关: [113.7964, 24.7028]\n      };\n      var BJData = [[{\n        name: '北京'\n      }, {\n        name: '上海',\n        value: 95\n      }], [{\n        name: '北京'\n      }, {\n        name: '广州',\n        value: 90\n      }], [{\n        name: '北京'\n      }, {\n        name: '大连',\n        value: 80\n      }], [{\n        name: '北京'\n      }, {\n        name: '南宁',\n        value: 70\n      }], [{\n        name: '北京'\n      }, {\n        name: '南昌',\n        value: 60\n      }], [{\n        name: '北京'\n      }, {\n        name: '拉萨',\n        value: 50\n      }], [{\n        name: '北京'\n      }, {\n        name: '长春',\n        value: 40\n      }], [{\n        name: '北京'\n      }, {\n        name: '包头',\n        value: 30\n      }], [{\n        name: '北京'\n      }, {\n        name: '重庆',\n        value: 20\n      }], [{\n        name: '北京'\n      }, {\n        name: '常州',\n        value: 10\n      }]];\n      var SHData = [[{\n        name: '上海'\n      }, {\n        name: '包头',\n        value: 95\n      }], [{\n        name: '上海'\n      }, {\n        name: '昆明',\n        value: 90\n      }], [{\n        name: '上海'\n      }, {\n        name: '广州',\n        value: 80\n      }], [{\n        name: '上海'\n      }, {\n        name: '郑州',\n        value: 70\n      }], [{\n        name: '上海'\n      }, {\n        name: '长春',\n        value: 60\n      }], [{\n        name: '上海'\n      }, {\n        name: '重庆',\n        value: 50\n      }], [{\n        name: '上海'\n      }, {\n        name: '长沙',\n        value: 40\n      }], [{\n        name: '上海'\n      }, {\n        name: '北京',\n        value: 30\n      }], [{\n        name: '上海'\n      }, {\n        name: '丹东',\n        value: 20\n      }], [{\n        name: '上海'\n      }, {\n        name: '大连',\n        value: 10\n      }]];\n      var GZData = [[{\n        name: '广州'\n      }, {\n        name: '福州',\n        value: 95\n      }], [{\n        name: '广州'\n      }, {\n        name: '太原',\n        value: 90\n      }], [{\n        name: '广州'\n      }, {\n        name: '长春',\n        value: 80\n      }], [{\n        name: '广州'\n      }, {\n        name: '重庆',\n        value: 70\n      }], [{\n        name: '广州'\n      }, {\n        name: '西安',\n        value: 60\n      }], [{\n        name: '广州'\n      }, {\n        name: '成都',\n        value: 50\n      }], [{\n        name: '广州'\n      }, {\n        name: '常州',\n        value: 40\n      }], [{\n        name: '广州'\n      }, {\n        name: '北京',\n        value: 30\n      }], [{\n        name: '广州'\n      }, {\n        name: '北海',\n        value: 20\n      }], [{\n        name: '广州'\n      }, {\n        name: '海口',\n        value: 10\n      }]];\n      var planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';\n\n      var convertData = function convertData(data) {\n        var res = [];\n\n        for (var i = 0; i < data.length; i++) {\n          var dataItem = data[i];\n          var fromCoord = geoCoordMap[dataItem[0].name];\n          var toCoord = geoCoordMap[dataItem[1].name];\n\n          if (fromCoord && toCoord) {\n            res.push({\n              fromName: dataItem[0].name,\n              toName: dataItem[1].name,\n              coords: [fromCoord, toCoord]\n            });\n          }\n        }\n\n        return res;\n      };\n\n      var color = ['#a6c84c', '#ffa022', '#46bee9'];\n      var series = [];\n      [['北京', BJData], ['上海', SHData], ['广州', GZData]].forEach(function (item, i) {\n        series.push({\n          name: item[0] + ' Top10',\n          type: 'lines',\n          zlevel: 1,\n          effect: {\n            show: true,\n            period: 6,\n            trailLength: 0.7,\n            color: '#fff',\n            symbolSize: 3\n          },\n          lineStyle: {\n            normal: {\n              color: color[i],\n              width: 0,\n              curveness: 0.2\n            }\n          },\n          data: convertData(item[1])\n        }, {\n          name: item[0] + ' Top10',\n          type: 'lines',\n          zlevel: 2,\n          symbol: ['none', 'arrow'],\n          symbolSize: 10,\n          effect: {\n            show: true,\n            period: 6,\n            trailLength: 0,\n            symbol: planePath,\n            symbolSize: 15\n          },\n          lineStyle: {\n            normal: {\n              color: color[i],\n              width: 1,\n              opacity: 0.6,\n              curveness: 0.2\n            }\n          },\n          data: convertData(item[1])\n        }, {\n          name: item[0] + ' Top10',\n          type: 'effectScatter',\n          coordinateSystem: 'geo',\n          zlevel: 2,\n          rippleEffect: {\n            brushType: 'stroke'\n          },\n          label: {\n            normal: {\n              show: true,\n              position: 'right',\n              formatter: '{b}'\n            }\n          },\n          symbolSize: function symbolSize(val) {\n            return val[2] / 8;\n          },\n          itemStyle: {\n            normal: {\n              color: color[i]\n            }\n          },\n          data: item[1].map(function (dataItem) {\n            return {\n              name: dataItem[1].name,\n              value: geoCoordMap[dataItem[1].name].concat([dataItem[1].value])\n            };\n          })\n        });\n      });\n      var option = {\n        backgroundColor: '#404a59',\n        title: {\n          text: '模拟迁徙',\n          subtext: '数据纯属虚构',\n          left: 'center',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          top: 'bottom',\n          left: 'right',\n          data: ['北京 Top10', '上海 Top10', '广州 Top10'],\n          textStyle: {\n            color: '#fff'\n          },\n          selectedMode: 'single'\n        },\n        geo: {\n          map: 'china',\n          label: {\n            emphasis: {\n              show: false\n            }\n          },\n          roam: true,\n          itemStyle: {\n            normal: {\n              areaColor: '#323c48',\n              borderColor: '#404a59'\n            },\n            emphasis: {\n              areaColor: '#2a333d'\n            }\n          }\n        },\n        series: series\n      };\n      return option;\n    };\n\n    return _this;\n  }\n\n  _createClass(Airport, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(EC, {\n        option: this.getOption(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Airport;\n}(React.PureComponent);\n\nexport { Airport as default };","map":{"version":3,"sources":["/Users/evan/progressMan/src/routes/Widgets/Charts/EC/components/Map.js"],"names":["React","EC","require","Airport","getOption","geoCoordMap","上海","东莞","东营","中山","临汾","临沂","丹东","丽水","乌鲁木齐","佛山","保定","兰州","包头","北京","北海","南京","南宁","南昌","南通","厦门","台州","合肥","呼和浩特","咸阳","哈尔滨","唐山","嘉兴","大同","大连","天津","太原","威海","宁波","宝鸡","宿迁","常州","广州","廊坊","延安","张家口","徐州","德州","惠州","成都","扬州","承德","拉萨","无锡","日照","昆明","杭州","枣庄","柳州","株洲","武汉","汕头","江门","沈阳","沧州","河源","泉州","泰安","泰州","济南","济宁","海口","淄博","淮安","深圳","清远","温州","渭南","湖州","湘潭","滨州","潍坊","烟台","玉溪","珠海","盐城","盘锦","石家庄","福州","秦皇岛","绍兴","聊城","肇庆","舟山","苏州","莱芜","菏泽","营口","葫芦岛","衡水","衢州","西宁","西安","贵阳","连云港","邢台","邯郸","郑州","鄂尔多斯","重庆","金华","铜川","银川","镇江","长春","长沙","长治","阳泉","青岛","韶关","BJData","name","value","SHData","GZData","planePath","convertData","data","res","i","length","dataItem","fromCoord","toCoord","push","fromName","toName","coords","color","series","forEach","item","type","zlevel","effect","show","period","trailLength","symbolSize","lineStyle","normal","width","curveness","symbol","opacity","coordinateSystem","rippleEffect","brushType","label","position","formatter","val","itemStyle","map","concat","option","backgroundColor","title","text","subtext","left","textStyle","tooltip","trigger","legend","orient","top","selectedMode","geo","emphasis","roam","areaColor","borderColor","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport EC from 'components/Charts/ECharts/EC';\nimport 'echarts/lib/chart/map';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nrequire('echarts/map/js/china.js');\n\nexport default class Airport extends React.PureComponent {\n  getOption = () => {\n    const geoCoordMap = {\n      上海: [121.4648, 31.2891],\n      东莞: [113.8953, 22.901],\n      东营: [118.7073, 37.5513],\n      中山: [113.4229, 22.478],\n      临汾: [111.4783, 36.1615],\n      临沂: [118.3118, 35.2936],\n      丹东: [124.541, 40.4242],\n      丽水: [119.5642, 28.1854],\n      乌鲁木齐: [87.9236, 43.5883],\n      佛山: [112.8955, 23.1097],\n      保定: [115.0488, 39.0948],\n      兰州: [103.5901, 36.3043],\n      包头: [110.3467, 41.4899],\n      北京: [116.4551, 40.2539],\n      北海: [109.314, 21.6211],\n      南京: [118.8062, 31.9208],\n      南宁: [108.479, 23.1152],\n      南昌: [116.0046, 28.6633],\n      南通: [121.1023, 32.1625],\n      厦门: [118.1689, 24.6478],\n      台州: [121.1353, 28.6688],\n      合肥: [117.29, 32.0581],\n      呼和浩特: [111.4124, 40.4901],\n      咸阳: [108.4131, 34.8706],\n      哈尔滨: [127.9688, 45.368],\n      唐山: [118.4766, 39.6826],\n      嘉兴: [120.9155, 30.6354],\n      大同: [113.7854, 39.8035],\n      大连: [122.2229, 39.4409],\n      天津: [117.4219, 39.4189],\n      太原: [112.3352, 37.9413],\n      威海: [121.9482, 37.1393],\n      宁波: [121.5967, 29.6466],\n      宝鸡: [107.1826, 34.3433],\n      宿迁: [118.5535, 33.7775],\n      常州: [119.4543, 31.5582],\n      广州: [113.5107, 23.2196],\n      廊坊: [116.521, 39.0509],\n      延安: [109.1052, 36.4252],\n      张家口: [115.1477, 40.8527],\n      徐州: [117.5208, 34.3268],\n      德州: [116.6858, 37.2107],\n      惠州: [114.6204, 23.1647],\n      成都: [103.9526, 30.7617],\n      扬州: [119.4653, 32.8162],\n      承德: [117.5757, 41.4075],\n      拉萨: [91.1865, 30.1465],\n      无锡: [120.3442, 31.5527],\n      日照: [119.2786, 35.5023],\n      昆明: [102.9199, 25.4663],\n      杭州: [119.5313, 29.8773],\n      枣庄: [117.323, 34.8926],\n      柳州: [109.3799, 24.9774],\n      株洲: [113.5327, 27.0319],\n      武汉: [114.3896, 30.6628],\n      汕头: [117.1692, 23.3405],\n      江门: [112.6318, 22.1484],\n      沈阳: [123.1238, 42.1216],\n      沧州: [116.8286, 38.2104],\n      河源: [114.917, 23.9722],\n      泉州: [118.3228, 25.1147],\n      泰安: [117.0264, 36.0516],\n      泰州: [120.0586, 32.5525],\n      济南: [117.1582, 36.8701],\n      济宁: [116.8286, 35.3375],\n      海口: [110.3893, 19.8516],\n      淄博: [118.0371, 36.6064],\n      淮安: [118.927, 33.4039],\n      深圳: [114.5435, 22.5439],\n      清远: [112.9175, 24.3292],\n      温州: [120.498, 27.8119],\n      渭南: [109.7864, 35.0299],\n      湖州: [119.8608, 30.7782],\n      湘潭: [112.5439, 27.7075],\n      滨州: [117.8174, 37.4963],\n      潍坊: [119.0918, 36.524],\n      烟台: [120.7397, 37.5128],\n      玉溪: [101.9312, 23.8898],\n      珠海: [113.7305, 22.1155],\n      盐城: [120.2234, 33.5577],\n      盘锦: [121.9482, 41.0449],\n      石家庄: [114.4995, 38.1006],\n      福州: [119.4543, 25.9222],\n      秦皇岛: [119.2126, 40.0232],\n      绍兴: [120.564, 29.7565],\n      聊城: [115.9167, 36.4032],\n      肇庆: [112.1265, 23.5822],\n      舟山: [122.2559, 30.2234],\n      苏州: [120.6519, 31.3989],\n      莱芜: [117.6526, 36.2714],\n      菏泽: [115.6201, 35.2057],\n      营口: [122.4316, 40.4297],\n      葫芦岛: [120.1575, 40.578],\n      衡水: [115.8838, 37.7161],\n      衢州: [118.6853, 28.8666],\n      西宁: [101.4038, 36.8207],\n      西安: [109.1162, 34.2004],\n      贵阳: [106.6992, 26.7682],\n      连云港: [119.1248, 34.552],\n      邢台: [114.8071, 37.2821],\n      邯郸: [114.4775, 36.535],\n      郑州: [113.4668, 34.6234],\n      鄂尔多斯: [108.9734, 39.2487],\n      重庆: [107.7539, 30.1904],\n      金华: [120.0037, 29.1028],\n      铜川: [109.0393, 35.1947],\n      银川: [106.3586, 38.1775],\n      镇江: [119.4763, 31.9702],\n      长春: [125.8154, 44.2584],\n      长沙: [113.0823, 28.2568],\n      长治: [112.8625, 36.4746],\n      阳泉: [113.4778, 38.0951],\n      青岛: [120.4651, 36.3373],\n      韶关: [113.7964, 24.7028]\n    };\n\n    const BJData = [\n      [{ name: '北京' }, { name: '上海', value: 95 }],\n      [{ name: '北京' }, { name: '广州', value: 90 }],\n      [{ name: '北京' }, { name: '大连', value: 80 }],\n      [{ name: '北京' }, { name: '南宁', value: 70 }],\n      [{ name: '北京' }, { name: '南昌', value: 60 }],\n      [{ name: '北京' }, { name: '拉萨', value: 50 }],\n      [{ name: '北京' }, { name: '长春', value: 40 }],\n      [{ name: '北京' }, { name: '包头', value: 30 }],\n      [{ name: '北京' }, { name: '重庆', value: 20 }],\n      [{ name: '北京' }, { name: '常州', value: 10 }]\n    ];\n\n    const SHData = [\n      [{ name: '上海' }, { name: '包头', value: 95 }],\n      [{ name: '上海' }, { name: '昆明', value: 90 }],\n      [{ name: '上海' }, { name: '广州', value: 80 }],\n      [{ name: '上海' }, { name: '郑州', value: 70 }],\n      [{ name: '上海' }, { name: '长春', value: 60 }],\n      [{ name: '上海' }, { name: '重庆', value: 50 }],\n      [{ name: '上海' }, { name: '长沙', value: 40 }],\n      [{ name: '上海' }, { name: '北京', value: 30 }],\n      [{ name: '上海' }, { name: '丹东', value: 20 }],\n      [{ name: '上海' }, { name: '大连', value: 10 }]\n    ];\n\n    const GZData = [\n      [{ name: '广州' }, { name: '福州', value: 95 }],\n      [{ name: '广州' }, { name: '太原', value: 90 }],\n      [{ name: '广州' }, { name: '长春', value: 80 }],\n      [{ name: '广州' }, { name: '重庆', value: 70 }],\n      [{ name: '广州' }, { name: '西安', value: 60 }],\n      [{ name: '广州' }, { name: '成都', value: 50 }],\n      [{ name: '广州' }, { name: '常州', value: 40 }],\n      [{ name: '广州' }, { name: '北京', value: 30 }],\n      [{ name: '广州' }, { name: '北海', value: 20 }],\n      [{ name: '广州' }, { name: '海口', value: 10 }]\n    ];\n\n    const planePath =\n      'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';\n\n    const convertData = function(data) {\n      var res = [];\n      for (var i = 0; i < data.length; i++) {\n        var dataItem = data[i];\n        var fromCoord = geoCoordMap[dataItem[0].name];\n        var toCoord = geoCoordMap[dataItem[1].name];\n        if (fromCoord && toCoord) {\n          res.push({\n            fromName: dataItem[0].name,\n            toName: dataItem[1].name,\n            coords: [fromCoord, toCoord]\n          });\n        }\n      }\n      return res;\n    };\n\n    const color = ['#a6c84c', '#ffa022', '#46bee9'];\n    const series = [];\n    [['北京', BJData], ['上海', SHData], ['广州', GZData]].forEach(function(\n      item,\n      i\n    ) {\n      series.push(\n        {\n          name: item[0] + ' Top10',\n          type: 'lines',\n          zlevel: 1,\n          effect: {\n            show: true,\n            period: 6,\n            trailLength: 0.7,\n            color: '#fff',\n            symbolSize: 3\n          },\n          lineStyle: {\n            normal: {\n              color: color[i],\n              width: 0,\n              curveness: 0.2\n            }\n          },\n          data: convertData(item[1])\n        },\n        {\n          name: item[0] + ' Top10',\n          type: 'lines',\n          zlevel: 2,\n          symbol: ['none', 'arrow'],\n          symbolSize: 10,\n          effect: {\n            show: true,\n            period: 6,\n            trailLength: 0,\n            symbol: planePath,\n            symbolSize: 15\n          },\n          lineStyle: {\n            normal: {\n              color: color[i],\n              width: 1,\n              opacity: 0.6,\n              curveness: 0.2\n            }\n          },\n          data: convertData(item[1])\n        },\n        {\n          name: item[0] + ' Top10',\n          type: 'effectScatter',\n          coordinateSystem: 'geo',\n          zlevel: 2,\n          rippleEffect: {\n            brushType: 'stroke'\n          },\n          label: {\n            normal: {\n              show: true,\n              position: 'right',\n              formatter: '{b}'\n            }\n          },\n          symbolSize: function(val) {\n            return val[2] / 8;\n          },\n          itemStyle: {\n            normal: {\n              color: color[i]\n            }\n          },\n          data: item[1].map(function(dataItem) {\n            return {\n              name: dataItem[1].name,\n              value: geoCoordMap[dataItem[1].name].concat([dataItem[1].value])\n            };\n          })\n        }\n      );\n    });\n\n    const option = {\n      backgroundColor: '#404a59',\n      title: {\n        text: '模拟迁徙',\n        subtext: '数据纯属虚构',\n        left: 'center',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        top: 'bottom',\n        left: 'right',\n        data: ['北京 Top10', '上海 Top10', '广州 Top10'],\n        textStyle: {\n          color: '#fff'\n        },\n        selectedMode: 'single'\n      },\n      geo: {\n        map: 'china',\n        label: {\n          emphasis: {\n            show: false\n          }\n        },\n        roam: true,\n        itemStyle: {\n          normal: {\n            areaColor: '#323c48',\n            borderColor: '#404a59'\n          },\n          emphasis: {\n            areaColor: '#2a333d'\n          }\n        }\n      },\n      series: series\n    };\n    return option;\n  };\n  render() {\n    return <EC option={this.getOption()} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}