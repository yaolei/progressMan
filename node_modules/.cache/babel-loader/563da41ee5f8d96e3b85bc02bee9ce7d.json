{"ast":null,"code":"import _asyncToGenerator from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport $$ from 'cmn-utils';\nimport modelEnhance from '@/utils/modelEnhance';\nexport default modelEnhance({\n  namespace: 'global',\n  state: {\n    menu: [],\n    flatMenu: []\n  },\n  effects: {\n    getMenu:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getMenu(_ref, _ref2) {\n      var payload, call, put, _ref3, status, data, loopMenu;\n\n      return _regeneratorRuntime.wrap(function getMenu$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              payload = _ref.payload;\n              call = _ref2.call, put = _ref2.put;\n              _context.next = 4;\n              return call(_getMenu, payload);\n\n            case 4:\n              _ref3 = _context.sent;\n              status = _ref3.status;\n              data = _ref3.data;\n\n              if (!status) {\n                _context.next = 12;\n                break;\n              }\n\n              loopMenu = function loopMenu(menu) {\n                var pitem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                menu.forEach(function (item) {\n                  if (pitem.path) {\n                    item.parentPath = pitem.parentPath ? pitem.parentPath.concat(pitem.path) : [pitem.path];\n                  }\n\n                  if (item.children && item.children.length) {\n                    loopMenu(item.children, item);\n                  }\n                });\n              };\n\n              loopMenu(data);\n              _context.next = 12;\n              return put({\n                type: 'getMenuSuccess',\n                payload: data\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getMenu);\n    })\n  },\n  reducers: {\n    getMenuSuccess: function getMenuSuccess(state, _ref4) {\n      var payload = _ref4.payload;\n      return _objectSpread({}, state, {\n        menu: payload,\n        flatMenu: getFlatMenu(payload)\n      });\n    }\n  }\n});\nexport function getFlatMenu(menus) {\n  var menu = [];\n  menus.forEach(function (item) {\n    if (item.children) {\n      menu = menu.concat(getFlatMenu(item.children));\n    }\n\n    menu.push(item);\n  });\n  return menu;\n}\n\nfunction _getMenu(_x) {\n  return _getMenu2.apply(this, arguments);\n}\n\nfunction _getMenu2() {\n  _getMenu2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(payload) {\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", $$.post('/user/menu', payload));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getMenu2.apply(this, arguments);\n}\n\nexport { _getMenu as getMenu };","map":{"version":3,"sources":["/Users/evan/progressMan/src/models/global.js"],"names":["$$","modelEnhance","namespace","state","menu","flatMenu","effects","getMenu","payload","call","put","status","data","loopMenu","pitem","forEach","item","path","parentPath","concat","children","length","type","reducers","getMenuSuccess","getFlatMenu","menus","push","post"],"mappings":";;;AAAA,OAAOA,EAAP,MAAe,WAAf;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,eAAeA,YAAY,CAAC;AAC1BC,EAAAA,SAAS,EAAE,QADe;AAG1BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAHmB;AAQ1BC,EAAAA,OAAO,EAAE;AACNC,IAAAA,OADM;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIC,cAAAA,OADJ,QACIA,OADJ;AACiBC,cAAAA,IADjB,SACiBA,IADjB,EACuBC,GADvB,SACuBA,GADvB;AAAA;AAEoB,qBAAMD,IAAI,CAACF,QAAD,EAAUC,OAAV,CAAV;;AAFpB;AAAA;AAEGG,cAAAA,MAFH,SAEGA,MAFH;AAEWC,cAAAA,IAFX,SAEWA,IAFX;;AAAA,mBAGDD,MAHC;AAAA;AAAA;AAAA;;AAIGE,cAAAA,QAJH,GAIc,SAAXA,QAAW,CAACT,IAAD,EAAsB;AAAA,oBAAfU,KAAe,uEAAP,EAAO;AACrCV,gBAAAA,IAAI,CAACW,OAAL,CAAa,UAAAC,IAAI,EAAI;AACnB,sBAAIF,KAAK,CAACG,IAAV,EAAgB;AACdD,oBAAAA,IAAI,CAACE,UAAL,GAAkBJ,KAAK,CAACI,UAAN,GAAmBJ,KAAK,CAACI,UAAN,CAAiBC,MAAjB,CAAwBL,KAAK,CAACG,IAA9B,CAAnB,GAAyD,CAACH,KAAK,CAACG,IAAP,CAA3E;AACD;;AACD,sBAAID,IAAI,CAACI,QAAL,IAAiBJ,IAAI,CAACI,QAAL,CAAcC,MAAnC,EAA2C;AACzCR,oBAAAA,QAAQ,CAACG,IAAI,CAACI,QAAN,EAAgBJ,IAAhB,CAAR;AACD;AACF,iBAPD;AAQD,eAbE;;AAcHH,cAAAA,QAAQ,CAACD,IAAD,CAAR;AAdG;AAgBH,qBAAMF,GAAG,CAAC;AACRY,gBAAAA,IAAI,EAAE,gBADE;AAERd,gBAAAA,OAAO,EAAEI;AAFD,eAAD,CAAT;;AAhBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GARiB;AAgC1BW,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cADQ,0BACOrB,KADP,SAC2B;AAAA,UAAXK,OAAW,SAAXA,OAAW;AACjC,+BACKL,KADL;AAEEC,QAAAA,IAAI,EAAEI,OAFR;AAGEH,QAAAA,QAAQ,EAAEoB,WAAW,CAACjB,OAAD;AAHvB;AAKD;AAPO;AAhCgB,CAAD,CAA3B;AA2CA,OAAO,SAASiB,WAAT,CAAqBC,KAArB,EAA4B;AACjC,MAAItB,IAAI,GAAG,EAAX;AACAsB,EAAAA,KAAK,CAACX,OAAN,CAAc,UAAAC,IAAI,EAAI;AACpB,QAAIA,IAAI,CAACI,QAAT,EAAmB;AACjBhB,MAAAA,IAAI,GAAGA,IAAI,CAACe,MAAL,CAAYM,WAAW,CAACT,IAAI,CAACI,QAAN,CAAvB,CAAP;AACD;;AACDhB,IAAAA,IAAI,CAACuB,IAAL,CAAUX,IAAV;AACD,GALD;AAMA,SAAOZ,IAAP;AACD;;SAEqBG,Q;;;;;;;2BAAf,iBAAuBC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,8CACER,EAAE,CAAC4B,IAAH,CAAQ,YAAR,EAAsBpB,OAAtB,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import $$ from 'cmn-utils';\nimport modelEnhance from '@/utils/modelEnhance';\n\nexport default modelEnhance({\n  namespace: 'global',\n\n  state: {\n    menu: [],\n    flatMenu: [],\n  },\n\n  effects: {\n    *getMenu({ payload }, { call, put }) {\n      const { status, data } = yield call(getMenu, payload);\n      if (status) {\n        const loopMenu = (menu, pitem = {}) => {\n          menu.forEach(item => {\n            if (pitem.path) {\n              item.parentPath = pitem.parentPath ? pitem.parentPath.concat(pitem.path) : [pitem.path];\n            }\n            if (item.children && item.children.length) {\n              loopMenu(item.children, item);\n            }\n          });\n        }\n        loopMenu(data);\n        \n        yield put({\n          type: 'getMenuSuccess',\n          payload: data,\n        });\n      }\n    },\n  },\n\n  reducers: {\n    getMenuSuccess(state, { payload }) {\n      return {\n        ...state,\n        menu: payload,\n        flatMenu: getFlatMenu(payload),\n      };\n    }\n  },\n});\n\nexport function getFlatMenu(menus) {\n  let menu = [];\n  menus.forEach(item => {\n    if (item.children) {\n      menu = menu.concat(getFlatMenu(item.children));\n    }\n    menu.push(item);\n  });\n  return menu;\n}\n\nexport async function getMenu(payload) {\n  return $$.post('/user/menu', payload);\n}"]},"metadata":{},"sourceType":"module"}