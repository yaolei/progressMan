{"ast":null,"code":"import _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Form/model/radio.js\";\nimport React from 'react';\nimport $$ from 'cmn-utils';\nvar RadioGroup = _Radio.Group;\n/**\n * 单选框\n */\n\nexport default (function (_ref) {\n  var form = _ref.form,\n      name = _ref.name,\n      _ref$dict = _ref.dict,\n      dict = _ref$dict === void 0 ? [] : _ref$dict,\n      _ref$formFieldOptions = _ref.formFieldOptions,\n      formFieldOptions = _ref$formFieldOptions === void 0 ? {} : _ref$formFieldOptions,\n      record = _ref.record,\n      initialValue = _ref.initialValue,\n      rules = _ref.rules,\n      onChange = _ref.onChange,\n      normalize = _ref.normalize,\n      buttonStyle = _ref.buttonStyle,\n      getPopupContainer = _ref.getPopupContainer,\n      preview = _ref.preview,\n      otherProps = _objectWithoutProperties(_ref, [\"form\", \"name\", \"dict\", \"formFieldOptions\", \"record\", \"initialValue\", \"rules\", \"onChange\", \"normalize\", \"buttonStyle\", \"getPopupContainer\", \"preview\"]);\n\n  var getFieldDecorator = form.getFieldDecorator;\n  var initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  } // 如果存在初始值\n\n\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  } // 预览视图\n\n\n  if (preview) {\n    var dictObj = dict.filter(function (item) {\n      return item.code === initval;\n    })[0];\n    var text = '';\n\n    if (dictObj) {\n      text = dictObj.codeName;\n    }\n\n    return React.createElement(\"div\", {\n      style: otherProps.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, text);\n  } // 如果有rules\n\n\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  } // 如果需要onChange\n\n\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = function (e) {\n      return onChange(form, e.target.value, e);\n    }; // form, value\n\n  }\n\n  var RadioComp = _Radio;\n  if (buttonStyle === 'solid') RadioComp = _Radio.Button;\n  return getFieldDecorator(name, formFieldOptions)(React.createElement(RadioGroup, Object.assign({}, otherProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), dict.map(function (dic, i) {\n    return React.createElement(RadioComp, {\n      key: dic.code,\n      value: dic.code,\n      title: dic.codeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, dic.codeName);\n  })));\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Form/model/radio.js"],"names":["React","$$","RadioGroup","Group","form","name","dict","formFieldOptions","record","initialValue","rules","onChange","normalize","buttonStyle","getPopupContainer","preview","otherProps","getFieldDecorator","initval","isFunction","dictObj","filter","item","code","text","codeName","style","length","e","target","value","RadioComp","Button","map","dic","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Radio } from 'antd';\nimport $$ from 'cmn-utils';\nconst RadioGroup = Radio.Group;\n/**\n * 单选框\n */\nexport default ({\n  form,\n  name,\n  dict = [],\n  formFieldOptions = {},\n  record,\n  initialValue,\n  rules,\n  onChange,\n  normalize,\n  buttonStyle,\n  getPopupContainer,\n  preview,\n  ...otherProps\n}) => {\n  const { getFieldDecorator } = form;\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // 如果存在初始值\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  // 预览视图\n  if (preview) {\n    const dictObj = dict.filter(item => item.code === initval)[0];\n    let text = '';\n    if (dictObj) {\n      text = dictObj.codeName;\n    }\n    return <div style={otherProps.style}>{text}</div>;\n  }\n\n  // 如果有rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // 如果需要onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = e => onChange(form, e.target.value, e); // form, value\n  }\n\n  let RadioComp = Radio;\n  if (buttonStyle === 'solid') RadioComp = Radio.Button;\n\n  return getFieldDecorator(name, formFieldOptions)(\n    <RadioGroup {...otherProps}>\n      {dict.map((dic, i) => (\n        <RadioComp key={dic.code} value={dic.code} title={dic.codeName}>\n          {dic.codeName}\n        </RadioComp>\n      ))}\n    </RadioGroup>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}