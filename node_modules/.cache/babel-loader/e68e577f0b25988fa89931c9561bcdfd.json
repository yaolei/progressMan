{"ast":null,"code":"import _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Print/Print.js\";\nimport React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport assign from 'object-assign';\nimport { isArray } from 'cmn-utils/lib/utils';\nvar ROOT = 'antui-print-container';\n/**\n * 打印页面中的指定组件，\n * fork自：\n *   https://github.com/gregnb/react-to-print\n *   https://github.com/jasonday/printThis\n */\n\nvar Print =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Print, _PureComponent);\n\n  function Print(_props) {\n    var _this;\n\n    _classCallCheck(this, Print);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Print).call(this));\n\n    _this.normalElement = function () {\n      var content = _this.props.content;\n\n      if (typeof content === 'string') {\n        // html string\n        _this.element = document.createElement('div');\n        _this.element.innerHTML = content;\n      } else if (content instanceof Element) {\n        // real dom element\n        _this.element = content;\n      } else if (!React.isValidElement(content) && ReactDOM.findDOMNode(content)) {\n        _this.element = ReactDOM.findDOMNode(content);\n      }\n    };\n\n    _this.createContainer = function (props) {\n      var container = document.querySelector('#' + ROOT);\n      if (container) return container;else {\n        container = document.createElement('div');\n        container.id = ROOT;\n        document.body.appendChild(container);\n\n        if (!props.debug) {\n          assign(container.style, {\n            position: 'absolute',\n            width: '0px',\n            height: '0px',\n            left: '-600px',\n            top: '-600px',\n            overflow: 'hidden'\n          });\n        }\n\n        return container;\n      }\n    };\n\n    _this.createFrame = function (props) {\n      var strFrameName = 'printThis-' + new Date().getTime();\n      var printI = document.createElement('iframe');\n      printI.name = 'printIframe';\n      printI.id = strFrameName;\n\n      if (window.location.hostname !== document.domain && navigator.userAgent.match(/msie/i)) {\n        // Ugly IE hacks due to IE not inheriting document.domain from parent\n        // checks if document.domain is set by comparing the host name against document.domain\n\n        /* eslint-disable no-script-url, no-useless-concat */\n        var iframeSrc = 'javascript:document.write(\"<head><script>document.domain=\\\\\"' + document.domain + '\\\\\";</s' + 'cript></head><body></body>\")';\n        printI.className = 'MSIE';\n        printI.src = iframeSrc;\n      }\n\n      _this.container.appendChild(printI);\n\n      return printI;\n    };\n\n    _this.setContent = function () {\n      var _this$props = _this.props,\n          doctypeString = _this$props.doctypeString,\n          importCSS = _this$props.importCSS,\n          importStyle = _this$props.importStyle,\n          pageTitle = _this$props.pageTitle,\n          loadCSS = _this$props.loadCSS,\n          canvas = _this$props.canvas,\n          beforePrint = _this$props.beforePrint;\n\n      if (doctypeString) {\n        setDocType(_this.iframe, doctypeString);\n      }\n\n      var doc = _this.iframe.document || _this.iframe.contentDocument || _this.iframe;\n      var head = doc.querySelector('head');\n      var body = doc.querySelector('body'); // import page stylesheets\n\n      if (importCSS) {\n        [].forEach.call(document.querySelectorAll('link[rel=stylesheet]'), function (item) {\n          var href = item.getAttribute('href');\n\n          if (href) {\n            var media = item.getAttribute('media') || 'all';\n            setLink(head, href, media);\n          }\n        });\n      } // import style tags\n\n\n      if (importStyle) {\n        [].forEach.call(document.querySelectorAll('style'), function (item) {\n          head.appendChild(item.cloneNode(true));\n        });\n      } // add title of the page\n\n\n      if (pageTitle) {\n        var title = document.createElement('title');\n        title.innerText(pageTitle);\n        head.appendChild(title);\n      } // import additional stylesheet(s)\n\n\n      if (loadCSS) {\n        if (isArray(loadCSS)) {\n          loadCSS.forEach(function (item) {\n            setLink(head, item);\n          });\n        } else {\n          setLink(head, loadCSS);\n        }\n      }\n\n      var pageHtml = document.querySelector('html');\n      doc.querySelector('html').setAttribute('style', pageHtml.style.cssText);\n\n      if (canvas) {\n        // add canvas data-ids for easy access after cloning.\n        var canvasId = 0; // .addBack('canvas') adds the top-level element if it is a canvas.\n\n        [].forEach.call(_this.element.querySelectorAll('canvas'), function (item) {\n          item.setAttribute('data-printthis', canvasId++);\n        });\n      }\n\n      appendBody(body, _this.element, _this.props);\n\n      if (canvas) {\n        // Re-draw new canvases by referencing the originals\n        [].forEach.call(body.querySelectorAll('canvas'), function (item) {\n          var cid = item.getAttribute('data-printthis');\n          var src = document.querySelector('[data-printthis=\"' + cid + '\"]');\n          item.getContext('2d').drawImage(src, 0, 0);\n          src.removeAttribute('data-printthis');\n        });\n      } // attach event handler function to beforePrint event\n\n\n      function attachOnBeforePrintEvent(iframe, beforePrintHandler) {\n        var win = iframe.contentWindow || iframe.contentDocument || iframe;\n\n        if (typeof beforePrintHandler === 'function') {\n          if ('matchMedia' in win) {\n            win.matchMedia('print').addListener(function (mql) {\n              if (mql.matches) beforePrintHandler();\n            });\n          } else {\n            win.onbeforeprint = beforePrintHandler;\n          }\n        }\n      }\n\n      attachOnBeforePrintEvent(_this.iframe, beforePrint);\n    };\n\n    _this.savePrint = function (node) {\n      _this.print = node;\n    };\n\n    _this.handlePrint = function () {\n      var afterPrint = _this.props.afterPrint;\n\n      _this.setContent(); // proper method\n\n\n      if (document.queryCommandSupported('print')) {\n        _this.iframe.contentWindow.document.execCommand('print', false, null);\n      } else {\n        _this.iframe.contentWindow.focus();\n\n        _this.iframe.contentWindow.print();\n      } // after print callback\n\n\n      if (typeof afterPrint === 'function') {\n        afterPrint();\n      }\n    };\n\n    _this.container = _this.createContainer(_props);\n    _this.iframe = _this.createFrame(_props);\n    return _this;\n  }\n\n  _createClass(Print, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.normalElement();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.normalElement();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove iframe after print\n      this.iframe.parentNode.removeChild(this.iframe);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var content = this.props.content;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.isValidElement(content) ? React.createElement(Rootless, {\n        container: this.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.cloneElement(content, {\n        ref: function ref(node) {\n          return _this2.element = node;\n        }\n      })) : null, React.cloneElement(this.props.trigger, {\n        ref: this.savePrint,\n        onClick: this.handlePrint\n      }));\n    }\n  }]);\n\n  return Print;\n}(PureComponent);\n\nPrint.propTypes = {\n  content: PropTypes.any.isRequired,\n  // 可以是 string | React组件 | DOM 元素\n  trigger: PropTypes.node,\n  // print controller area\n  debug: PropTypes.bool,\n  // debug\n  doctypeString: PropTypes.string,\n  // enter a different doctype for older markup\n  importCSS: PropTypes.bool,\n  // import parent page css\n  importStyle: PropTypes.bool,\n  // import style tags\n  pageTitle: PropTypes.string,\n  // add title to print page\n  loadCSS: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  // path to additional css file - use an array [] for multiple\n  formValues: PropTypes.bool,\n  // preserve input/form values\n  removeScripts: PropTypes.bool,\n  // remove script tags from print content\n  beforePrint: PropTypes.func,\n  // function called before iframe is filled\n  afterPrint: PropTypes.func,\n  // function called before iframe is removed\n  printDelay: PropTypes.number,\n  //\n  canvas: PropTypes.bool // copy canvas content\n\n};\nPrint.defaultProps = {\n  debug: false,\n  trigger: React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\u6253\\u5370\"),\n  doctypeString: '<!DOCTYPE html>',\n  importCSS: true,\n  importStyle: true,\n  pageTitle: '',\n  loadCSS: '',\n  formValues: true,\n  removeScripts: false,\n  beforePrint: null,\n  afterPrint: null,\n  printDelay: 333,\n  canvas: false\n};\n\nvar Rootless = function Rootless(_ref) {\n  var children = _ref.children,\n      container = _ref.container;\n  return ReactDOM.createPortal(children, container);\n}; // Add doctype to fix the style difference between printing and render\n\n\nfunction setDocType(iframe, doctype) {\n  var doc = iframe.document || iframe.contentDocument || iframe;\n  doc.open();\n  doc.write(doctype);\n  doc.close();\n} // set html link tag\n\n\nfunction setLink(head, href, media) {\n  var link = document.createElement('link');\n  link.href = href;\n  if (media) link.media = media;\n  link.rel = 'stylesheet';\n  link.type = 'text/css'; // no need for HTML5\n\n  head.appendChild(link);\n}\n\nfunction appendBody(body, element, props) {\n  var formValues = props.formValues,\n      removeScripts = props.removeScripts; // Clone for safety and convenience\n\n  var _element = ReactDOM.findDOMNode(element);\n\n  var content = _element.cloneNode(true);\n\n  if (formValues) {\n    // Copy original select and textarea values to their cloned counterpart\n    // Makes up for inability to clone select and textarea values with clone(true)\n    copyValues(_element, content, 'select, textarea');\n  }\n\n  if (removeScripts) {\n    [].forEach.call(content.querySelectorAll('script'), function (item) {\n      item.parentNode.removeChild(item);\n    });\n  }\n\n  body.appendChild(content);\n} // Copies values from origin to clone for passed in elementSelector\n\n\nfunction copyValues(origin, clone, elementSelector) {\n  var originalElements = origin.querySelectorAll(elementSelector);\n  [].forEach.call(clone.querySelectorAll(elementSelector), function (item, index) {\n    item.value = originalElements[index].value;\n  });\n}\n\nexport default Print;","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Print/Print.js"],"names":["React","PureComponent","ReactDOM","PropTypes","assign","isArray","ROOT","Print","props","normalElement","content","element","document","createElement","innerHTML","Element","isValidElement","findDOMNode","createContainer","container","querySelector","id","body","appendChild","debug","style","position","width","height","left","top","overflow","createFrame","strFrameName","Date","getTime","printI","name","window","location","hostname","domain","navigator","userAgent","match","iframeSrc","className","src","setContent","doctypeString","importCSS","importStyle","pageTitle","loadCSS","canvas","beforePrint","setDocType","iframe","doc","contentDocument","head","forEach","call","querySelectorAll","item","href","getAttribute","media","setLink","cloneNode","title","innerText","pageHtml","setAttribute","cssText","canvasId","appendBody","cid","getContext","drawImage","removeAttribute","attachOnBeforePrintEvent","beforePrintHandler","win","contentWindow","matchMedia","addListener","mql","matches","onbeforeprint","savePrint","node","print","handlePrint","afterPrint","queryCommandSupported","execCommand","focus","prevProps","prevState","parentNode","removeChild","cloneElement","ref","trigger","onClick","propTypes","any","isRequired","bool","string","oneOfType","array","formValues","removeScripts","func","printDelay","number","defaultProps","Rootless","children","createPortal","doctype","open","write","close","link","rel","type","_element","copyValues","origin","clone","elementSelector","originalElements","index","value"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport assign from 'object-assign';\nimport { isArray } from 'cmn-utils/lib/utils';\nconst ROOT = 'antui-print-container';\n/**\n * 打印页面中的指定组件，\n * fork自：\n *   https://github.com/gregnb/react-to-print\n *   https://github.com/jasonday/printThis\n */\nclass Print extends PureComponent {\n  static propTypes = {\n    content: PropTypes.any.isRequired, // 可以是 string | React组件 | DOM 元素\n    trigger: PropTypes.node, // print controller area\n    debug: PropTypes.bool, // debug\n    doctypeString: PropTypes.string, // enter a different doctype for older markup\n    importCSS: PropTypes.bool, // import parent page css\n    importStyle: PropTypes.bool, // import style tags\n    pageTitle: PropTypes.string, // add title to print page\n    loadCSS: PropTypes.oneOfType([PropTypes.string, PropTypes.array]), // path to additional css file - use an array [] for multiple\n    formValues: PropTypes.bool, // preserve input/form values\n    removeScripts: PropTypes.bool, // remove script tags from print content\n    beforePrint: PropTypes.func, // function called before iframe is filled\n    afterPrint: PropTypes.func, // function called before iframe is removed\n    printDelay: PropTypes.number, //\n    canvas: PropTypes.bool // copy canvas content\n  };\n\n  static defaultProps = {\n    debug: false,\n    trigger: <button>打印</button>,\n    doctypeString: '<!DOCTYPE html>',\n    importCSS: true,\n    importStyle: true,\n    pageTitle: '',\n    loadCSS: '',\n    formValues: true,\n    removeScripts: false,\n    beforePrint: null,\n    afterPrint: null,\n    printDelay: 333,\n    canvas: false\n  };\n\n  constructor(props) {\n    super();\n    this.container = this.createContainer(props);\n    this.iframe = this.createFrame(props);\n  }\n\n  componentDidMount() {\n    this.normalElement();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.normalElement();\n  }\n\n  componentWillUnmount() {\n    // remove iframe after print\n    this.iframe.parentNode.removeChild(this.iframe);\n  }\n\n  normalElement = () => {\n    const { content } = this.props;\n\n    if (typeof content === 'string') {\n      // html string\n      this.element = document.createElement('div');\n      this.element.innerHTML = content;\n    } else if (content instanceof Element) {\n      // real dom element\n      this.element = content;\n    } else if (\n      !React.isValidElement(content) &&\n      ReactDOM.findDOMNode(content)\n    ) {\n      this.element = ReactDOM.findDOMNode(content);\n    }\n  };\n\n  /**\n   * create container\n   */\n  createContainer = props => {\n    let container = document.querySelector('#' + ROOT);\n    if (container) return container;\n    else {\n      container = document.createElement('div');\n      container.id = ROOT;\n      document.body.appendChild(container);\n      if (!props.debug) {\n        assign(container.style, {\n          position: 'absolute',\n          width: '0px',\n          height: '0px',\n          left: '-600px',\n          top: '-600px',\n          overflow: 'hidden'\n        });\n      }\n      return container;\n    }\n  };\n\n  /**\n   * create print iframe\n   */\n  createFrame = props => {\n    const strFrameName = 'printThis-' + new Date().getTime();\n\n    let printI = document.createElement('iframe');\n    printI.name = 'printIframe';\n    printI.id = strFrameName;\n\n    if (\n      window.location.hostname !== document.domain &&\n      navigator.userAgent.match(/msie/i)\n    ) {\n      // Ugly IE hacks due to IE not inheriting document.domain from parent\n      // checks if document.domain is set by comparing the host name against document.domain\n      /* eslint-disable no-script-url, no-useless-concat */\n      const iframeSrc =\n        'javascript:document.write(\"<head><script>document.domain=\\\\\"' +\n        document.domain +\n        '\\\\\";</s' +\n        'cript></head><body></body>\")';\n      printI.className = 'MSIE';\n      printI.src = iframeSrc;\n    }\n    this.container.appendChild(printI);\n\n    return printI;\n  };\n\n  // set html content for iframe\n  setContent = () => {\n    const {\n      doctypeString,\n      importCSS,\n      importStyle,\n      pageTitle,\n      loadCSS,\n      canvas,\n      beforePrint\n    } = this.props;\n    if (doctypeString) {\n      setDocType(this.iframe, doctypeString);\n    }\n\n    const doc =\n      this.iframe.document || this.iframe.contentDocument || this.iframe;\n    const head = doc.querySelector('head');\n    const body = doc.querySelector('body');\n\n    // import page stylesheets\n    if (importCSS) {\n      [].forEach.call(\n        document.querySelectorAll('link[rel=stylesheet]'),\n        item => {\n          const href = item.getAttribute('href');\n          if (href) {\n            const media = item.getAttribute('media') || 'all';\n            setLink(head, href, media);\n          }\n        }\n      );\n    }\n\n    // import style tags\n    if (importStyle) {\n      [].forEach.call(document.querySelectorAll('style'), item => {\n        head.appendChild(item.cloneNode(true));\n      });\n    }\n\n    // add title of the page\n    if (pageTitle) {\n      const title = document.createElement('title');\n      title.innerText(pageTitle);\n      head.appendChild(title);\n    }\n\n    // import additional stylesheet(s)\n    if (loadCSS) {\n      if (isArray(loadCSS)) {\n        loadCSS.forEach(item => {\n          setLink(head, item);\n        });\n      } else {\n        setLink(head, loadCSS);\n      }\n    }\n\n    const pageHtml = document.querySelector('html');\n    doc.querySelector('html').setAttribute('style', pageHtml.style.cssText);\n\n    if (canvas) {\n      // add canvas data-ids for easy access after cloning.\n      let canvasId = 0;\n      // .addBack('canvas') adds the top-level element if it is a canvas.\n      [].forEach.call(this.element.querySelectorAll('canvas'), item => {\n        item.setAttribute('data-printthis', canvasId++);\n      });\n    }\n\n    appendBody(body, this.element, this.props);\n\n    if (canvas) {\n      // Re-draw new canvases by referencing the originals\n      [].forEach.call(body.querySelectorAll('canvas'), item => {\n        const cid = item.getAttribute('data-printthis');\n        const src = document.querySelector('[data-printthis=\"' + cid + '\"]');\n\n        item.getContext('2d').drawImage(src, 0, 0);\n        src.removeAttribute('data-printthis');\n      });\n    }\n\n    // attach event handler function to beforePrint event\n    function attachOnBeforePrintEvent(iframe, beforePrintHandler) {\n      const win = iframe.contentWindow || iframe.contentDocument || iframe;\n\n      if (typeof beforePrintHandler === 'function') {\n        if ('matchMedia' in win) {\n          win.matchMedia('print').addListener(mql => {\n            if (mql.matches) beforePrintHandler();\n          });\n        } else {\n          win.onbeforeprint = beforePrintHandler;\n        }\n      }\n    }\n    attachOnBeforePrintEvent(this.iframe, beforePrint);\n  };\n\n  savePrint = node => {\n    this.print = node;\n  };\n\n  // print it\n  handlePrint = () => {\n    const { afterPrint } = this.props;\n\n    this.setContent();\n    // proper method\n    if (document.queryCommandSupported('print')) {\n      this.iframe.contentWindow.document.execCommand('print', false, null);\n    } else {\n      this.iframe.contentWindow.focus();\n      this.iframe.contentWindow.print();\n    }\n\n    // after print callback\n    if (typeof afterPrint === 'function') {\n      afterPrint();\n    }\n  };\n\n  render() {\n    const { content } = this.props;\n    return (\n      <React.Fragment>\n        {React.isValidElement(content) ? (\n          <Rootless container={this.container}>\n            {React.cloneElement(content, {\n              ref: node => (this.element = node)\n            })}\n          </Rootless>\n        ) : null}\n        {React.cloneElement(this.props.trigger, {\n          ref: this.savePrint,\n          onClick: this.handlePrint\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nconst Rootless = ({ children, container }) =>\n  ReactDOM.createPortal(children, container);\n\n// Add doctype to fix the style difference between printing and render\nfunction setDocType(iframe, doctype) {\n  const doc = iframe.document || iframe.contentDocument || iframe;\n  doc.open();\n  doc.write(doctype);\n  doc.close();\n}\n\n// set html link tag\nfunction setLink(head, href, media) {\n  const link = document.createElement('link');\n  link.href = href;\n  if (media) link.media = media;\n  link.rel = 'stylesheet';\n  link.type = 'text/css'; // no need for HTML5\n  head.appendChild(link);\n}\n\nfunction appendBody(body, element, props) {\n  const { formValues, removeScripts } = props;\n  // Clone for safety and convenience\n  const _element = ReactDOM.findDOMNode(element);\n  const content = _element.cloneNode(true);\n\n  if (formValues) {\n    // Copy original select and textarea values to their cloned counterpart\n    // Makes up for inability to clone select and textarea values with clone(true)\n    copyValues(_element, content, 'select, textarea');\n  }\n\n  if (removeScripts) {\n    [].forEach.call(content.querySelectorAll('script'), item => {\n      item.parentNode.removeChild(item);\n    });\n  }\n\n  body.appendChild(content);\n}\n\n// Copies values from origin to clone for passed in elementSelector\nfunction copyValues(origin, clone, elementSelector) {\n  const originalElements = origin.querySelectorAll(elementSelector);\n\n  [].forEach.call(clone.querySelectorAll(elementSelector), (item, index) => {\n    item.value = originalElements[index].value;\n  });\n}\n\nexport default Print;\n"]},"metadata":{},"sourceType":"module"}