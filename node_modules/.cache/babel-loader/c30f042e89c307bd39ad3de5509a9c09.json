{"ast":null,"code":"import \"antd/lib/tree-select/style\";\nimport _TreeSelect from \"antd/lib/tree-select\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Form/model/treeselect.js\";\nimport React from 'react';\nimport $$ from 'cmn-utils';\n/**\n * 下拉树菜单元件\n */\n\nexport var TreeSelectForm = function TreeSelectForm(_ref) {\n  var form = _ref.form,\n      name = _ref.name,\n      _ref$formFieldOptions = _ref.formFieldOptions,\n      formFieldOptions = _ref$formFieldOptions === void 0 ? {} : _ref$formFieldOptions,\n      children = _ref.children,\n      record = _ref.record,\n      initialValue = _ref.initialValue,\n      normalize = _ref.normalize,\n      rules = _ref.rules,\n      onChange = _ref.onChange,\n      getPopupContainer = _ref.getPopupContainer,\n      placeholder = _ref.placeholder,\n      otherProps = _objectWithoutProperties(_ref, [\"form\", \"name\", \"formFieldOptions\", \"children\", \"record\", \"initialValue\", \"normalize\", \"rules\", \"onChange\", \"getPopupContainer\", \"placeholder\"]);\n\n  // --\n  var getFieldDecorator = form.getFieldDecorator;\n  var initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  } // 如果存在初始值\n\n\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  } // 如果有rules\n\n\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  } // 如果需要onChange\n\n\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = function (value, label, extra) {\n      return onChange(form, value, label, extra);\n    }; // form, value\n\n  }\n\n  var props = _objectSpread({\n    placeholder: placeholder || \"\\u8BF7\\u9009\\u62E9\".concat(otherProps.title)\n  }, otherProps);\n\n  if (getPopupContainer) {\n    props.getPopupContainer = getPopupContainer;\n  }\n\n  return getFieldDecorator(name, formFieldOptions)(React.createElement(_TreeSelect, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n};\nexport default TreeSelectForm;","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Form/model/treeselect.js"],"names":["React","$$","TreeSelectForm","form","name","formFieldOptions","children","record","initialValue","normalize","rules","onChange","getPopupContainer","placeholder","otherProps","getFieldDecorator","initval","isFunction","length","value","label","extra","props","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,EAAP,MAAe,WAAf;AAEA;;;;AAGA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAaxB;AAAA,MAZJC,IAYI,QAZJA,IAYI;AAAA,MAXJC,IAWI,QAXJA,IAWI;AAAA,mCAVJC,gBAUI;AAAA,MAVJA,gBAUI,sCAVe,EAUf;AAAA,MATJC,QASI,QATJA,QASI;AAAA,MARJC,MAQI,QARJA,MAQI;AAAA,MAPJC,YAOI,QAPJA,YAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,iBAGI,QAHJA,iBAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADDC,UACC;;AACJ;AADI,MAEIC,iBAFJ,GAE0BZ,IAF1B,CAEIY,iBAFJ;AAIJ,MAAIC,OAAO,GAAGR,YAAd;;AAEA,MAAID,MAAJ,EAAY;AACVS,IAAAA,OAAO,GAAGT,MAAM,CAACH,IAAD,CAAhB;AACD,GARG,CAUJ;;;AACA,MAAIY,OAAO,KAAK,IAAZ,IAAoB,OAAOA,OAAP,KAAmB,WAA3C,EAAwD;AACtD,QAAIf,EAAE,CAACgB,UAAH,CAAcR,SAAd,CAAJ,EAA8B;AAC5BJ,MAAAA,gBAAgB,CAACG,YAAjB,GAAgCC,SAAS,CAACO,OAAD,CAAzC;AACD,KAFD,MAEO;AACLX,MAAAA,gBAAgB,CAACG,YAAjB,GAAgCQ,OAAhC;AACD;AACF,GAjBG,CAmBJ;;;AACA,MAAIN,KAAK,IAAIA,KAAK,CAACQ,MAAnB,EAA2B;AACzBb,IAAAA,gBAAgB,CAACK,KAAjB,GAAyBA,KAAzB;AACD,GAtBG,CAwBJ;;;AACA,MAAI,OAAOC,QAAP,KAAoB,UAAxB,EAAoC;AAClCN,IAAAA,gBAAgB,CAACM,QAAjB,GAA4B,UAACQ,KAAD,EAAQC,KAAR,EAAeC,KAAf;AAAA,aAC1BV,QAAQ,CAACR,IAAD,EAAOgB,KAAP,EAAcC,KAAd,EAAqBC,KAArB,CADkB;AAAA,KAA5B,CADkC,CAEK;;AACxC;;AAED,MAAMC,KAAK;AACTT,IAAAA,WAAW,EAAEA,WAAW,gCAAUC,UAAU,CAACS,KAArB;AADf,KAENT,UAFM,CAAX;;AAKA,MAAIF,iBAAJ,EAAuB;AACrBU,IAAAA,KAAK,CAACV,iBAAN,GAA0BA,iBAA1B;AACD;;AAED,SAAOG,iBAAiB,CAACX,IAAD,EAAOC,gBAAP,CAAjB,CACL,mDAAgBiB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,CAAP;AAGD,CAvDM;AAyDP,eAAepB,cAAf","sourcesContent":["import React from 'react';\nimport { TreeSelect } from 'antd';\nimport $$ from 'cmn-utils';\n\n/**\n * 下拉树菜单元件\n */\nexport const TreeSelectForm = ({\n  form,\n  name,\n  formFieldOptions = {},\n  children,\n  record,\n  initialValue,\n  normalize,\n  rules,\n  onChange,\n  getPopupContainer,\n  placeholder,\n  ...otherProps\n}) => {\n  // --\n  const { getFieldDecorator } = form;\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // 如果存在初始值\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  // 如果有rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // 如果需要onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = (value, label, extra) =>\n      onChange(form, value, label, extra); // form, value\n  }\n\n  const props = {\n    placeholder: placeholder || `请选择${otherProps.title}`,\n    ...otherProps\n  };\n\n  if (getPopupContainer) {\n    props.getPopupContainer = getPopupContainer;\n  }\n\n  return getFieldDecorator(name, formFieldOptions)(\n    <TreeSelect {...props} />\n  );\n};\n\nexport default TreeSelectForm;\n"]},"metadata":{},"sourceType":"module"}