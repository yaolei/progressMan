{"ast":null,"code":"import _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { routerRedux } from 'dva/router';\nimport { login as _login } from '../service';\nimport $$ from 'cmn-utils';\nexport default {\n  namespace: 'login',\n  state: {\n    loggedIn: false,\n    message: '',\n    user: {}\n  },\n  subscriptions: {\n    setup: function setup(_ref) {\n      var history = _ref.history,\n          dispatch = _ref.dispatch;\n      return history.listen(function (_ref2) {\n        var pathname = _ref2.pathname;\n\n        if (pathname.indexOf('/sign/login') !== -1) {\n          $$.removeStore('user');\n        }\n      });\n    }\n  },\n  effects: {\n    login:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function login(_ref3, _ref4) {\n      var payload, call, put, _ref5, status, message, data;\n\n      return _regeneratorRuntime.wrap(function login$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              payload = _ref3.payload;\n              call = _ref4.call, put = _ref4.put;\n              _context.next = 4;\n              return call(_login, payload);\n\n            case 4:\n              _ref5 = _context.sent;\n              status = _ref5.status;\n              message = _ref5.message;\n              data = _ref5.data;\n\n              if (!status) {\n                _context.next = 14;\n                break;\n              }\n\n              $$.setStore('user', data);\n              _context.next = 12;\n              return put(routerRedux.replace('/'));\n\n            case 12:\n              _context.next = 16;\n              break;\n\n            case 14:\n              _context.next = 16;\n              return put({\n                type: 'loginError',\n                payload: {\n                  message: message\n                }\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, login);\n    }),\n    logout:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function logout(_, _ref6) {\n      var put;\n      return _regeneratorRuntime.wrap(function logout$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              put = _ref6.put;\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, logout);\n    })\n  },\n  reducers: {\n    loginSuccess: function loginSuccess(state, _ref7) {\n      var payload = _ref7.payload;\n      return _objectSpread({}, state, {\n        loggedIn: true,\n        message: '',\n        user: payload\n      });\n    },\n    loginError: function loginError(state, _ref8) {\n      var payload = _ref8.payload;\n      return _objectSpread({}, state, {\n        loggedIn: false,\n        message: payload.message\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/evan/progressMan/src/routes/Login/model/index.js"],"names":["routerRedux","login","$$","namespace","state","loggedIn","message","user","subscriptions","setup","history","dispatch","listen","pathname","indexOf","removeStore","effects","payload","call","put","status","data","setStore","replace","type","logout","_","reducers","loginSuccess","loginError"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,KAAK,IAALA,MAAT,QAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,WAAf;AAEA,eAAe;AACbC,EAAAA,SAAS,EAAE,OADE;AAGbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,OAAO,EAAE,EAFJ;AAGLC,IAAAA,IAAI,EAAE;AAHD,GAHM;AASbC,EAAAA,aAAa,EAAE;AACbC,IAAAA,KADa,uBACgB;AAAA,UAArBC,OAAqB,QAArBA,OAAqB;AAAA,UAAZC,QAAY,QAAZA,QAAY;AAC3B,aAAOD,OAAO,CAACE,MAAR,CAAe,iBAAkB;AAAA,YAAfC,QAAe,SAAfA,QAAe;;AACtC,YAAIA,QAAQ,CAACC,OAAT,CAAiB,aAAjB,MAAoC,CAAC,CAAzC,EAA4C;AAC1CZ,UAAAA,EAAE,CAACa,WAAH,CAAe,MAAf;AACD;AACF,OAJM,CAAP;AAKD;AAPY,GATF;AAmBbC,EAAAA,OAAO,EAAE;AACNf,IAAAA,KADM;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEgB,cAAAA,OADF,SACEA,OADF;AACeC,cAAAA,IADf,SACeA,IADf,EACqBC,GADrB,SACqBA,GADrB;AAAA;AAE6B,qBAAMD,IAAI,CAACjB,MAAD,EAAQgB,OAAR,CAAV;;AAF7B;AAAA;AAEGG,cAAAA,MAFH,SAEGA,MAFH;AAEWd,cAAAA,OAFX,SAEWA,OAFX;AAEoBe,cAAAA,IAFpB,SAEoBA,IAFpB;;AAAA,mBAGDD,MAHC;AAAA;AAAA;AAAA;;AAIHlB,cAAAA,EAAE,CAACoB,QAAH,CAAY,MAAZ,EAAoBD,IAApB;AAJG;AAKH,qBAAMF,GAAG,CAACnB,WAAW,CAACuB,OAAZ,CAAoB,GAApB,CAAD,CAAT;;AALG;AAAA;AAAA;;AAAA;AAAA;AAOH,qBAAMJ,GAAG,CAAC;AACRK,gBAAAA,IAAI,EAAE,YADE;AAERP,gBAAAA,OAAO,EAAE;AAAEX,kBAAAA,OAAO,EAAPA;AAAF;AAFD,eAAD,CAAT;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaNmB,IAAAA,MAbM;AAAA;AAAA,6CAaCC,CAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAaMP,cAAAA,GAbN,SAaMA,GAbN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAnBI;AAmCbQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YADQ,wBACKxB,KADL,SACyB;AAAA,UAAXa,OAAW,SAAXA,OAAW;AAC/B,+BACKb,KADL;AAEEC,QAAAA,QAAQ,EAAE,IAFZ;AAGEC,QAAAA,OAAO,EAAE,EAHX;AAIEC,QAAAA,IAAI,EAAEU;AAJR;AAMD,KARO;AASRY,IAAAA,UATQ,sBASGzB,KATH,SASuB;AAAA,UAAXa,OAAW,SAAXA,OAAW;AAC7B,+BACKb,KADL;AAEEC,QAAAA,QAAQ,EAAE,KAFZ;AAGEC,QAAAA,OAAO,EAAEW,OAAO,CAACX;AAHnB;AAKD;AAfO;AAnCG,CAAf","sourcesContent":["import { routerRedux } from 'dva/router';\nimport { login } from '../service';\nimport $$ from 'cmn-utils';\n\nexport default {\n  namespace: 'login',\n\n  state: {\n    loggedIn: false,\n    message: '',\n    user: {},\n  },\n\n  subscriptions: {\n    setup({ history, dispatch }) {\n      return history.listen(({ pathname }) => {\n        if (pathname.indexOf('/sign/login') !== -1) {\n          $$.removeStore('user');\n        }\n      });\n    }\n  },\n\n  effects: {\n    *login({ payload }, { call, put }) {\n      const { status, message, data } = yield call(login, payload);\n      if (status) {\n        $$.setStore('user', data);\n        yield put(routerRedux.replace('/'));\n      } else {\n        yield put({\n          type: 'loginError',\n          payload: { message }\n        });\n      }\n    },\n    *logout(_, { put }) {}\n  },\n\n  reducers: {\n    loginSuccess(state, { payload }) {\n      return {\n        ...state,\n        loggedIn: true,\n        message: '',\n        user: payload\n      };\n    },\n    loginError(state, { payload }) {\n      return {\n        ...state,\n        loggedIn: false,\n        message: payload.message\n      };\n    },\n  }\n};\n"]},"metadata":{},"sourceType":"module"}