{"ast":null,"code":"import \"antd/lib/time-picker/style\";\nimport _TimePicker from \"antd/lib/time-picker\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Form/model/date.js\";\nimport React from 'react';\nimport $$ from 'cmn-utils';\nimport moment from 'moment';\nvar MonthPicker = _DatePicker.MonthPicker,\n    RangePicker = _DatePicker.RangePicker;\n/**\n * 日期，时间元件\n */\n\nexport default (function (_ref) {\n  var name = _ref.name,\n      form = _ref.form,\n      type = _ref.type,\n      record = _ref.record,\n      initialValue = _ref.initialValue,\n      rules = _ref.rules,\n      _ref$formFieldOptions = _ref.formFieldOptions,\n      formFieldOptions = _ref$formFieldOptions === void 0 ? {} : _ref$formFieldOptions,\n      format = _ref.format,\n      onChange = _ref.onChange,\n      normalize = _ref.normalize,\n      preview = _ref.preview,\n      getPopupContainer = _ref.getPopupContainer,\n      otherProps = _objectWithoutProperties(_ref, [\"name\", \"form\", \"type\", \"record\", \"initialValue\", \"rules\", \"formFieldOptions\", \"format\", \"onChange\", \"normalize\", \"preview\", \"getPopupContainer\"]);\n\n  var getFieldDecorator = form.getFieldDecorator;\n  var initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  } // 如果存在初始值\n\n\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      if ($$.isArray(initval)) {\n        formFieldOptions.initialValue = initval.map(function (item) {\n          return moment.isMoment(item) ? item : moment(item);\n        });\n      } else {\n        formFieldOptions.initialValue = moment.isMoment(initval) ? initval : moment(initval);\n      }\n    }\n  } // 如果有rules\n\n\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  var Component = _DatePicker;\n\n  var props = _objectSpread({}, otherProps);\n\n  if (getPopupContainer) {\n    props.getCalendarContainer = getPopupContainer;\n  }\n\n  switch (type) {\n    case 'date':\n      break;\n\n    case 'datetime':\n      if (!props.showTime) {\n        props.showTime = true;\n      }\n\n      break;\n\n    case 'date~':\n      Component = RangePicker;\n      break;\n\n    case 'month':\n      Component = MonthPicker;\n      break;\n\n    case 'time':\n      Component = _TimePicker;\n      break;\n\n    default:\n      break;\n  } // 如果需要onChange\n\n\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = function (date, dateString) {\n      return onChange(form, date, dateString);\n    };\n  }\n\n  if (format) props.format = format;else if (type === 'month') props.format = 'YYYY-MM';else if (type === 'datetime' || type === 'date~') props.format = 'YYYY-MM-DD HH:mm:ss';else if (type === 'time') props.format = 'HH:mm:ss';else props.format = 'YYYY-MM-DD';\n\n  if (preview) {\n    return React.createElement(\"div\", {\n      style: otherProps.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, initval ? formFieldOptions.initialValue.format(props.format) : '');\n  }\n\n  return getFieldDecorator(name, formFieldOptions)(React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Form/model/date.js"],"names":["React","$$","moment","MonthPicker","RangePicker","name","form","type","record","initialValue","rules","formFieldOptions","format","onChange","normalize","preview","getPopupContainer","otherProps","getFieldDecorator","initval","isFunction","isArray","map","item","isMoment","length","Component","props","getCalendarContainer","showTime","date","dateString","style"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DatePicker, TimePicker } from 'antd';\nimport $$ from 'cmn-utils';\nimport moment from 'moment';\nconst { MonthPicker, RangePicker } = DatePicker;\n/**\n * 日期，时间元件\n */\nexport default ({\n  name,\n  form,\n  type,\n  record,\n  initialValue,\n  rules,\n  formFieldOptions = {},\n  format,\n  onChange,\n  normalize,\n  preview,\n  getPopupContainer,\n  ...otherProps\n}) => {\n  const { getFieldDecorator } = form;\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // 如果存在初始值\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      if ($$.isArray(initval)) {\n        formFieldOptions.initialValue = initval.map(item => moment.isMoment(item) ? item : moment(item))\n      } else {\n        formFieldOptions.initialValue = moment.isMoment(initval) ? initval : moment(initval);\n      }\n    }\n  }\n\n  // 如果有rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  let Component = DatePicker;\n\n  const props = {\n    ...otherProps\n  };\n\n  if (getPopupContainer) {\n    props.getCalendarContainer = getPopupContainer;\n  }\n\n  switch (type) {\n    case 'date':\n      break;\n    case 'datetime':\n      if (!props.showTime) {\n        props.showTime = true;\n      }\n      break;\n    case 'date~':\n      Component = RangePicker;\n      break;\n    case 'month':\n      Component = MonthPicker;\n      break;\n    case 'time':\n      Component = TimePicker;\n      break;\n    default:\n      break;\n  }\n\n  // 如果需要onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = (date, dateString) =>\n      onChange(form, date, dateString);\n  }\n\n  if (format) props.format = format;\n  else if (type === 'month') props.format = 'YYYY-MM';\n  else if (type === 'datetime' || type === 'date~')\n    props.format = 'YYYY-MM-DD HH:mm:ss';\n  else if (type === 'time') props.format = 'HH:mm:ss';\n  else props.format = 'YYYY-MM-DD';\n\n  if (preview) {\n    return (\n      <div style={otherProps.style}>\n        {initval ? formFieldOptions.initialValue.format(props.format) : ''}\n      </div>\n    );\n  }\n\n  return getFieldDecorator(name, formFieldOptions)(<Component {...props} />);\n};\n"]},"metadata":{},"sourceType":"module"}