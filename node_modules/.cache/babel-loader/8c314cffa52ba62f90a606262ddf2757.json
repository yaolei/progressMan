{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Form/model/upload.js\";\nimport React from 'react';\nimport Upload from '../../Upload';\nimport omit from 'object.omit';\nimport $$ from 'cmn-utils';\n/**\n * Upload元件, 可能需要自已处理反回值，如果后台需要FormData\n * const formData = new FormData();\n   fileList.forEach((file) => {\n     formData.append('files[]', file);\n   });\n */\n\nexport default (function (_ref) {\n  var form = _ref.form,\n      name = _ref.name,\n      _ref$formFieldOptions = _ref.formFieldOptions,\n      formFieldOptions = _ref$formFieldOptions === void 0 ? {} : _ref$formFieldOptions,\n      record = _ref.record,\n      initialValue = _ref.initialValue,\n      normalize = _ref.normalize,\n      rules = _ref.rules,\n      onChange = _ref.onChange,\n      type = _ref.type,\n      preview = _ref.preview,\n      renderUpload = _ref.renderUpload,\n      _ref$btnIcon = _ref.btnIcon,\n      btnIcon = _ref$btnIcon === void 0 ? 'upload' : _ref$btnIcon,\n      max = _ref.max,\n      maxFileSize = _ref.maxFileSize,\n      fileTypes = _ref.fileTypes,\n      action = _ref.action,\n      fileName = _ref.fileName,\n      getPopupContainer = _ref.getPopupContainer,\n      otherProps = _objectWithoutProperties(_ref, [\"form\", \"name\", \"formFieldOptions\", \"record\", \"initialValue\", \"normalize\", \"rules\", \"onChange\", \"type\", \"preview\", \"renderUpload\", \"btnIcon\", \"max\", \"maxFileSize\", \"fileTypes\", \"action\", \"fileName\", \"getPopupContainer\"]);\n\n  var getFieldDecorator = form.getFieldDecorator;\n  var initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  } // 如果存在初始值\n\n\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = $$.isArray(initval) ? initval.map(function (item, index) {\n        return {\n          uid: 'fs_' + index,\n          thumbUrl: item\n        };\n      }) : [{\n        uid: 'fs_0',\n        thumbUrl: record[name]\n      }];\n    }\n  }\n\n  if (preview) {\n    return React.createElement(\"div\", {\n      style: otherProps.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, initval || '');\n  } // 如果有rules\n\n\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  if (maxFileSize || fileTypes) {\n    formFieldOptions.rules = [{\n      validator: function validator(rule, value, callback) {\n        validatorFileSize(maxFileSize, value, callback);\n        validatorFileTypes(fileTypes, value, callback);\n        callback();\n      }\n    }].concat(_toConsumableArray(formFieldOptions.rules || []));\n  } // 如果需要onChange\n\n\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = function (args) {\n      return onChange(form, args);\n    }; // form, args\n\n  }\n\n  var uploadProps = {\n    listType: 'picture',\n    beforeUpload: function beforeUpload(file) {\n      return false;\n    } // 真接上传到后台\n\n  };\n\n  if (action) {\n    uploadProps = omit(otherProps, ['beforeUpload']);\n    uploadProps.action = action;\n    uploadProps.name = fileName || 'file';\n  }\n\n  return getFieldDecorator(name, _objectSpread({\n    valuePropName: 'fileList',\n    getValueFromEvent: normFile\n  }, formFieldOptions))(React.createElement(Upload, Object.assign({}, uploadProps, otherProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), renderUpload ? renderUpload(form, record, isDisabled(max, form.getFieldValue(name))) : React.createElement(_Button, {\n    icon: btnIcon,\n    disabled: isDisabled(max, form.getFieldValue(name)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\u70B9\\u51FB\\u4E0A\\u4F20\")));\n});\n\nvar validatorFileSize = function validatorFileSize(maxFileSize, value, callback) {\n  if (value.some(function (item) {\n    return item.size > maxFileSize * 1024;\n  })) {\n    callback(new Error(\"\\u8BF7\\u4E0A\\u4F20\\u6587\\u4EF6\\u5927\\u5C0F\\u5728\".concat(maxFileSize, \"K\\u4EE5\\u5185\\u7684\\u56FE\\u7247\")));\n    return;\n  }\n};\n\nvar validatorFileTypes = function validatorFileTypes(fileTypes, value, callback) {\n  if ($$.isArray(fileTypes) && fileTypes.length > 0) {\n    if (value.some(function (item) {\n      return item.name && !fileTypes.some(function (type) {\n        return item.name.toLowerCase().indexOf(type.toLowerCase()) !== -1;\n      });\n    })) {\n      callback(new Error(\"\\u8BF7\\u4E0A\\u4F20\".concat(fileTypes.join('、'), \"\\uFF0C\\u7C7B\\u578B\\u6587\\u4EF6\")));\n      return;\n    }\n  }\n}; // 如果设置max，控制按钮禁用状态\n\n\nvar isDisabled = function isDisabled(max, value) {\n  if (!max) return false;\n  if (!value) return false;\n\n  if (value && value.length < max) {\n    return false;\n  }\n\n  return true;\n};\n\nvar normFile = function normFile(e) {\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Form/model/upload.js"],"names":["React","Upload","omit","$$","form","name","formFieldOptions","record","initialValue","normalize","rules","onChange","type","preview","renderUpload","btnIcon","max","maxFileSize","fileTypes","action","fileName","getPopupContainer","otherProps","getFieldDecorator","initval","isFunction","isArray","map","item","index","uid","thumbUrl","style","length","validator","rule","value","callback","validatorFileSize","validatorFileTypes","args","uploadProps","listType","beforeUpload","file","valuePropName","getValueFromEvent","normFile","isDisabled","getFieldValue","some","size","Error","toLowerCase","indexOf","join","e","Array","fileList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport Upload from '../../Upload';\nimport omit from 'object.omit';\nimport $$ from 'cmn-utils';\n/**\n * Upload元件, 可能需要自已处理反回值，如果后台需要FormData\n * const formData = new FormData();\n   fileList.forEach((file) => {\n     formData.append('files[]', file);\n   });\n */\nexport default ({\n  form,\n  name,\n  formFieldOptions = {},\n  record,\n  initialValue,\n  normalize,\n  rules,\n  onChange,\n  type,\n  preview,\n  renderUpload,\n  btnIcon = 'upload',\n  max,\n  maxFileSize, // 最大文件大小\n  fileTypes, // 允许文件类型\n  action,    // 后台地址\n  fileName,  // 上传到后台的文件名\n  getPopupContainer,\n  ...otherProps\n}) => {\n  const { getFieldDecorator } = form;\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // 如果存在初始值\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = $$.isArray(initval)\n        ? initval.map((item, index) => ({\n            uid: 'fs_' + index,\n            thumbUrl: item\n          }))\n        : [\n            {\n              uid: 'fs_0',\n              thumbUrl: record[name]\n            }\n          ];\n    }\n  }\n\n  if (preview) {\n    return <div style={otherProps.style}>{initval || ''}</div>;\n  }\n\n  // 如果有rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  if (maxFileSize || fileTypes) {\n    formFieldOptions.rules = [\n      {\n        validator: (rule, value, callback) => {\n          validatorFileSize(maxFileSize, value, callback);\n          validatorFileTypes(fileTypes, value, callback);\n          callback();\n        }\n      },\n      ...(formFieldOptions.rules || [])\n    ];\n  }\n\n  // 如果需要onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = args => onChange(form, args); // form, args\n  }\n\n  let uploadProps = {\n    listType: 'picture',\n    beforeUpload: file => false,\n  }\n\n  // 真接上传到后台\n  if (action) {\n    uploadProps = omit(otherProps, ['beforeUpload']);\n    uploadProps.action = action;\n    uploadProps.name = fileName || 'file';\n  } \n\n  return getFieldDecorator(name, {\n    valuePropName: 'fileList',\n    getValueFromEvent: normFile,\n    ...formFieldOptions\n  })(\n    <Upload {...uploadProps} {...otherProps}>\n      {renderUpload ? (\n        renderUpload(form, record, isDisabled(max, form.getFieldValue(name)))\n      ) : (\n        <Button\n          icon={btnIcon}\n          disabled={isDisabled(max, form.getFieldValue(name))}\n        >\n          点击上传\n        </Button>\n      )}\n    </Upload>\n  );\n};\n\nconst validatorFileSize = (maxFileSize, value, callback) => {\n  if (value.some(item => item.size > maxFileSize * 1024)) {\n    callback(new Error(`请上传文件大小在${maxFileSize}K以内的图片`));\n    return;\n  }\n};\n\nconst validatorFileTypes = (fileTypes, value, callback) => {\n  if ($$.isArray(fileTypes) && fileTypes.length > 0) {\n    if (\n      value.some(\n        item =>\n          item.name &&\n          !fileTypes.some(\n            type => item.name.toLowerCase().indexOf(type.toLowerCase()) !== -1\n          )\n      )\n    ) {\n      callback(new Error(`请上传${fileTypes.join('、')}，类型文件`));\n      return;\n    }\n  }\n};\n\n// 如果设置max，控制按钮禁用状态\nconst isDisabled = (max, value) => {\n  if (!max) return false;\n  if (!value) return false;\n  if (value && value.length < max) {\n    return false;\n  }\n  return true;\n};\n\nconst normFile = e => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e && e.fileList;\n};\n"]},"metadata":{},"sourceType":"module"}