{"ast":null,"code":"import _defineProperty from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n/**\n * 模拟CRUD数据\n */\nexport default (function (_ref) {\n  var fetchMock = _ref.fetchMock,\n      delay = _ref.delay,\n      mock = _ref.mock,\n      toSuccess = _ref.toSuccess,\n      toError = _ref.toError;\n  return {\n    // 表格带分页\n    '/api/crud/getList': function apiCrudGetList(options) {\n      var body = JSON.parse(options.body);\n      var currentPage = body.currentPage;\n      var idbase = (currentPage - 1) * 10 + 1;\n      var paramMap = body.paramMap;\n      var deptName = paramMap.deptName;\n\n      if (deptName == 'abcd') {\n        return toSuccess(mock({\n          'currentPage': currentPage,\n          'showCount': body.showCount,\n          'totalResult': 0,\n          'totalPage': 0,\n          dataList: []\n        }), 400);\n      }\n\n      return toSuccess(mock(_defineProperty({\n        'currentPage': currentPage,\n        'showCount': body.showCount,\n        'totalResult': 100,\n        'totalPage': 10\n      }, \"dataList|\".concat(body.showCount), [{\n        'id|+1': idbase,\n        'deptName': deptName ? deptName : '@cword(3, 5)',\n        'distributionNetwork|1': ['0', '1'],\n        'address': '@county()',\n        'type': '@cword(3)',\n        'planBeginTime': '@date',\n        'planEndTime': '@date',\n        'workEmployee|1-3': [{\n          'key|+1': 1,\n          'title': '@cname'\n        }],\n        'content': '@csentence'\n      }])), 400);\n    },\n    '/api/crud/bathDelete': function apiCrudBathDelete(options) {\n      return toSuccess({\n        options: options\n      }, 400);\n    },\n    '/api/crud/getWorkEmployee': function apiCrudGetWorkEmployee(options) {\n      return mock({\n        'status': true,\n        'data|10': [{\n          'key|+1': 1,\n          'title': '@cname'\n        }]\n      });\n    },\n    '/api/crud/save': function apiCrudSave(options) {\n      return toSuccess({\n        options: options\n      }, 800);\n    }\n  };\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/__mocks__/crud.js"],"names":["fetchMock","delay","mock","toSuccess","toError","options","body","JSON","parse","currentPage","idbase","paramMap","deptName","showCount","dataList"],"mappings":";;AAAA;;;AAGA,gBAAe,gBAAkD;AAAA,MAAhDA,SAAgD,QAAhDA,SAAgD;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,OAAa,QAAbA,OAAa;AAC/D,SAAO;AACL;AACA,yBAAqB,wBAACC,OAAD,EAAa;AAChC,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACC,IAAnB,CAAb;AACA,UAAMG,WAAW,GAAGH,IAAI,CAACG,WAAzB;AACA,UAAMC,MAAM,GAAG,CAACD,WAAW,GAAG,CAAf,IAAoB,EAApB,GAAyB,CAAxC;AACA,UAAME,QAAQ,GAAGL,IAAI,CAACK,QAAtB;AACA,UAAMC,QAAQ,GAAGD,QAAQ,CAACC,QAA1B;;AAEA,UAAIA,QAAQ,IAAI,MAAhB,EAAwB;AACtB,eAAOT,SAAS,CAACD,IAAI,CAAC;AACpB,yBAAeO,WADK;AAEpB,uBAAaH,IAAI,CAACO,SAFE;AAGpB,yBAAe,CAHK;AAIpB,uBAAa,CAJO;AAKpBC,UAAAA,QAAQ,EAAE;AALU,SAAD,CAAL,EAMZ,GANY,CAAhB;AAOD;;AAED,aAAOX,SAAS,CAACD,IAAI;AACnB,uBAAeO,WADI;AAEnB,qBAAaH,IAAI,CAACO,SAFC;AAGnB,uBAAe,GAHI;AAInB,qBAAa;AAJM,4BAKNP,IAAI,CAACO,SALC,GAKa,CAAC;AAC/B,iBAASH,MADsB;AAE/B,oBAAYE,QAAQ,GAAGA,QAAH,GAAc,cAFH;AAG/B,iCAAyB,CAAC,GAAD,EAAM,GAAN,CAHM;AAI/B,mBAAW,WAJoB;AAK/B,gBAAQ,WALuB;AAM/B,yBAAiB,OANc;AAO/B,uBAAe,OAPgB;AAQ/B,4BAAoB,CAAC;AACnB,oBAAU,CADS;AAEnB,mBAAS;AAFU,SAAD,CARW;AAY/B,mBAAW;AAZoB,OAAD,CALb,EAAL,EAmBZ,GAnBY,CAAhB;AAoBD,KAvCI;AAwCL,4BAAwB,2BAACP,OAAD;AAAA,aAAaF,SAAS,CAAC;AAACE,QAAAA,OAAO,EAAPA;AAAD,OAAD,EAAY,GAAZ,CAAtB;AAAA,KAxCnB;AAyCL,iCAA6B,gCAACA,OAAD;AAAA,aAAaH,IAAI,CAAC;AAC7C,kBAAU,IADmC;AAE7C,mBAAW,CAAC;AACV,oBAAU,CADA;AAEV,mBAAS;AAFC,SAAD;AAFkC,OAAD,CAAjB;AAAA,KAzCxB;AAgDL,sBAAkB,qBAACG,OAAD;AAAA,aAAaF,SAAS,CAAC;AAACE,QAAAA,OAAO,EAAPA;AAAD,OAAD,EAAY,GAAZ,CAAtB;AAAA;AAhDb,GAAP;AAkDD,CAnDD","sourcesContent":["/**\n * 模拟CRUD数据\n */\nexport default ({fetchMock, delay, mock, toSuccess, toError}) => {\n  return {\n    // 表格带分页\n    '/api/crud/getList': (options) => {\n      const body = JSON.parse(options.body);\n      const currentPage = body.currentPage;\n      const idbase = (currentPage - 1) * 10 + 1;\n      const paramMap = body.paramMap;\n      const deptName = paramMap.deptName;\n\n      if (deptName == 'abcd') {\n        return toSuccess(mock({\n          'currentPage': currentPage,\n          'showCount': body.showCount,\n          'totalResult': 0,\n          'totalPage': 0,\n          dataList: [],\n        }), 400)\n      }\n\n      return toSuccess(mock({\n        'currentPage': currentPage,\n        'showCount': body.showCount,\n        'totalResult': 100,\n        'totalPage': 10,\n        [`dataList|${body.showCount}`]: [{\n          'id|+1': idbase,\n          'deptName': deptName ? deptName : '@cword(3, 5)',      \n          'distributionNetwork|1': ['0', '1'],\n          'address': '@county()',\n          'type': '@cword(3)',  \n          'planBeginTime': '@date',\n          'planEndTime': '@date',\n          'workEmployee|1-3': [{\n            'key|+1': 1,\n            'title': '@cname',\n          }],\n          'content': '@csentence',\n        }],\n      }), 400)\n    },\n    '/api/crud/bathDelete': (options) => toSuccess({options}, 400),\n    '/api/crud/getWorkEmployee': (options) => mock({\n      'status': true,\n      'data|10': [{\n        'key|+1': 1,\n        'title': '@cname',\n      }]\n    }),\n    '/api/crud/save': (options) => toSuccess({options}, 800),\n  }\n}"]},"metadata":{},"sourceType":"module"}