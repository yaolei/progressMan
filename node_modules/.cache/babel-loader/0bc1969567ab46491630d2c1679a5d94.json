{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Modal/ModalForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../Form';\nimport cx from 'classnames';\nimport './style/index.less';\n\nvar ModalForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalForm, _Component);\n\n  function ModalForm(props) {\n    var _this;\n\n    _classCallCheck(this, ModalForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalForm).call(this, props));\n\n    _this.closeModal = function () {\n      if (_this.props.onCancel) {\n        _this.props.onCancel();\n\n        return;\n      }\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.onSubmit = function () {\n      var _this$props = _this.props,\n          record = _this$props.record,\n          onSubmit = _this$props.onSubmit;\n\n      _this.refs.form.validateFields(function (error, value) {\n        if (error) {\n          console.log(error);\n          return;\n        }\n\n        onSubmit && onSubmit(value, record);\n      });\n    };\n\n    _this.state = {\n      visible: _this.props.visible\n    };\n    return _this;\n  }\n\n  _createClass(ModalForm, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if ('visible' in nextProps) {\n        this.setState({\n          visible: nextProps.visible\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          record = _this$props2.record,\n          className = _this$props2.className,\n          columns = _this$props2.columns,\n          onCancel = _this$props2.onCancel,\n          onSubmit = _this$props2.onSubmit,\n          modalOpts = _this$props2.modalOpts,\n          formOpts = _this$props2.formOpts,\n          loading = _this$props2.loading,\n          full = _this$props2.full,\n          preview = _this$props2.preview;\n      var classname = cx(className, 'antui-modalform', {\n        'full-modal': full\n      });\n\n      var modalProps = _objectSpread({\n        className: classname,\n        visible: this.state.visible,\n        style: {\n          top: 20\n        },\n        title: title || (record ? '编辑' : '新增'),\n        // maskClosable: true,\n        destroyOnClose: true,\n        onCancel: this.closeModal,\n        footer: [onCancel && React.createElement(_Button, {\n          key: \"back\",\n          onClick: this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"), onSubmit && React.createElement(_Button, {\n          key: \"submit\",\n          type: \"primary\",\n          onClick: this.onSubmit,\n          loading: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"\\u786E\\u5B9A\")]\n      }, modalOpts);\n\n      var formProps = _objectSpread({\n        ref: 'form',\n        columns: columns,\n        onSubmit: onSubmit,\n        record: record,\n        preview: preview,\n        footer: false,\n        formItemLayout: {\n          labelCol: {\n            span: 4\n          },\n          wrapperCol: {\n            span: 17\n          }\n        }\n      }, formOpts);\n\n      return React.createElement(_Modal, Object.assign({}, modalProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Form, Object.assign({}, formProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ModalForm;\n}(Component);\n\nModalForm.propTypes = {\n  title: PropTypes.string,\n  record: PropTypes.object,\n  visible: PropTypes.bool,\n  columns: PropTypes.array,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  modalOpts: PropTypes.object,\n  formOpts: PropTypes.object,\n  className: PropTypes.string\n};\nexport default ModalForm;","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Modal/ModalForm.js"],"names":["React","Component","PropTypes","Form","cx","ModalForm","props","closeModal","onCancel","setState","visible","onSubmit","record","refs","form","validateFields","error","value","console","log","state","nextProps","title","className","columns","modalOpts","formOpts","loading","full","preview","classname","modalProps","style","top","destroyOnClose","footer","formProps","ref","formItemLayout","labelCol","span","wrapperCol","propTypes","string","object","bool","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button } from 'antd';\nimport Form from '../Form';\nimport cx from 'classnames';\nimport './style/index.less';\n\nclass ModalForm extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    record: PropTypes.object,\n    visible: PropTypes.bool,\n    columns: PropTypes.array,\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    modalOpts: PropTypes.object,\n    formOpts: PropTypes.object,\n    className: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: this.props.visible\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ('visible' in nextProps) {\n      this.setState({\n        visible: nextProps.visible\n      });\n    }\n  }\n\n  closeModal = () => {\n    if (this.props.onCancel) {\n      this.props.onCancel();\n      return;\n    }\n    this.setState({\n      visible: false\n    });\n  };\n\n  onSubmit = () => {\n    const { record, onSubmit } = this.props;\n    this.refs.form.validateFields((error, value) => {\n      if (error) {\n        console.log(error);\n        return;\n      }\n      onSubmit && onSubmit(value, record);\n    });\n  };\n\n  render() {\n    const {\n      title,\n      record,\n      className,\n      columns,\n      onCancel,\n      onSubmit,\n      modalOpts,\n      formOpts,\n      loading,\n      full,\n      preview\n    } = this.props;\n\n    const classname = cx(className, 'antui-modalform', { 'full-modal': full });\n    const modalProps = {\n      className: classname,\n      visible: this.state.visible,\n      style: { top: 20 },\n      title: title || (record ? '编辑' : '新增'),\n      // maskClosable: true,\n      destroyOnClose: true,\n      onCancel: this.closeModal,\n      footer: [\n        onCancel && (\n          <Button key=\"back\" onClick={this.closeModal}>\n            取消\n          </Button>\n        ),\n        onSubmit && (\n          <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit} loading={loading}>\n            确定\n          </Button>\n        )\n      ],\n      ...modalOpts\n    };\n\n    const formProps = {\n      ref: 'form',\n      columns,\n      onSubmit,\n      record,\n      preview,\n      footer: false,\n      formItemLayout: {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 17 }\n      },\n      ...formOpts\n    };\n\n    return (\n      <Modal {...modalProps}>\n        <Form {...formProps} />\n      </Modal>\n    );\n  }\n}\n\nexport default ModalForm;\n"]},"metadata":{},"sourceType":"module"}