{"ast":null,"code":"import \"antd/lib/cascader/style\";\nimport _Cascader from \"antd/lib/cascader\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Form/model/cascade.js\";\nimport React from 'react';\nimport $$ from 'cmn-utils';\n/**\n * 级联表单元件\n * initialValue 初始值\n */\n\nexport default (function (_ref) {\n  var name = _ref.name,\n      form = _ref.form,\n      record = _ref.record,\n      _ref$formFieldOptions = _ref.formFieldOptions,\n      formFieldOptions = _ref$formFieldOptions === void 0 ? {} : _ref$formFieldOptions,\n      normalize = _ref.normalize,\n      initialValue = _ref.initialValue,\n      rules = _ref.rules,\n      onChange = _ref.onChange,\n      preview = _ref.preview,\n      getPopupContainer = _ref.getPopupContainer,\n      placeholder = _ref.placeholder,\n      otherProps = _objectWithoutProperties(_ref, [\"name\", \"form\", \"record\", \"formFieldOptions\", \"normalize\", \"initialValue\", \"rules\", \"onChange\", \"preview\", \"getPopupContainer\", \"placeholder\"]);\n\n  var getFieldDecorator = form.getFieldDecorator;\n  var initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  } // 如果存在初始值\n\n\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  if (preview) {\n    if (otherProps.options && initval) {\n      var data = [];\n      var level = 0;\n\n      var loop = function loop(opts) {\n        opts.forEach(function (item) {\n          if (item.value === initval[level]) {\n            data.push(item.label);\n\n            if (item.children && initval[++level]) {\n              loop(item.children);\n            }\n          }\n        });\n      };\n\n      loop(otherProps.options);\n      return React.createElement(\"div\", {\n        style: otherProps.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, data.join(' / '));\n    }\n\n    return null;\n  } // 如果有rules\n\n\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  } // 如果需要onChange\n\n\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = function (value, selectedOptions) {\n      return onChange(form, value, selectedOptions);\n    }; // form, value, selectedOptions\n\n  }\n\n  var props = _objectSpread({\n    placeholder: placeholder || \"\\u8BF7\\u9009\\u62E9\".concat(otherProps.title)\n  }, otherProps);\n\n  if (getPopupContainer) {\n    props.getPopupContainer = getPopupContainer;\n  }\n\n  return getFieldDecorator(name, formFieldOptions)(React.createElement(_Cascader, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Form/model/cascade.js"],"names":["React","$$","name","form","record","formFieldOptions","normalize","initialValue","rules","onChange","preview","getPopupContainer","placeholder","otherProps","getFieldDecorator","initval","isFunction","options","data","level","loop","opts","forEach","item","value","push","label","children","style","join","length","selectedOptions","props","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Cascader } from 'antd';\nimport $$ from 'cmn-utils';\n\n/**\n * 级联表单元件\n * initialValue 初始值\n */\nexport default ({\n  name,\n  form,\n  record,\n  formFieldOptions = {},\n  normalize,\n  initialValue,\n  rules,\n  onChange,\n  preview,\n  getPopupContainer,\n  placeholder,\n  ...otherProps\n}) => {\n  const { getFieldDecorator } = form;\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // 如果存在初始值\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  if (preview) {\n    if (otherProps.options && initval) {\n      const data = [];\n      let level = 0;\n      const loop = opts => {\n        opts.forEach(item => {\n          if (item.value === initval[level]) {\n            data.push(item.label);\n            if (item.children && initval[++level]) {\n              loop(item.children);\n            }\n          }\n        });\n      };\n      loop(otherProps.options);\n      return <div style={otherProps.style}>{data.join(' / ')}</div>;\n    }\n    return null;\n  }\n\n  // 如果有rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // 如果需要onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = (value, selectedOptions) =>\n      onChange(form, value, selectedOptions); // form, value, selectedOptions\n  }\n\n  const props = {\n    placeholder: placeholder || `请选择${otherProps.title}`,\n    ...otherProps\n  };\n\n  if (getPopupContainer) {\n    props.getPopupContainer = getPopupContainer;\n  }\n\n  return getFieldDecorator(name, formFieldOptions)(\n    <Cascader {...props} />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}