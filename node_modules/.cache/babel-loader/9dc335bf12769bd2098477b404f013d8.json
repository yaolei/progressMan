{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/progress/style\";\nimport _Progress from \"antd/lib/progress\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"/Users/evan/progressMan/src/routes/Register/components/index.js\",\n    _dec,\n    _dec2,\n    _class,\n    _temp;\n\nimport React, { Component } from 'react';\nimport { connect } from 'dva';\nimport { Link } from 'dva/router';\nimport './index.less';\nimport '../../Login/components/index.less';\nimport logoImg from 'assets/images/logo1.png';\nimport Success from './Success';\nvar Content = _Layout.Content;\nvar FormItem = _Form.Item;\nvar Option = _Select.Option;\nvar InputGroup = _Input.Group;\nvar passwordStatusMap = {\n  ok: React.createElement(\"div\", {\n    style: {\n      color: '#52c41a'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\u5F3A\\u5EA6\\uFF1A\\u5F3A\"),\n  pass: React.createElement(\"div\", {\n    style: {\n      color: '#faad14'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"\\u5F3A\\u5EA6\\uFF1A\\u4E2D\"),\n  poor: React.createElement(\"div\", {\n    style: {\n      color: '#f5222d'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u5F3A\\u5EA6\\uFF1A\\u592A\\u77ED\")\n};\nvar passwordProgressMap = {\n  ok: 'success',\n  pass: 'normal',\n  poor: 'exception'\n};\nvar Register = (_dec = connect(function (_ref) {\n  var register = _ref.register,\n      loading = _ref.loading;\n  return {\n    register: register,\n    submitting: loading.effects['register/submit']\n  };\n}), _dec2 = _Form.create(), _dec(_class = _dec2(_class = (_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      confirmDirty: false,\n      visible: false,\n      help: '',\n      prefix: '86',\n      registerSuccess: false\n    };\n\n    _this.onGetCaptcha = function () {\n      var count = 59;\n\n      _this.setState({\n        count: count\n      });\n\n      _this.interval = setInterval(function () {\n        count -= 1;\n\n        _this.setState({\n          count: count\n        });\n\n        if (count === 0) {\n          clearInterval(_this.interval);\n        }\n      }, 1000);\n    };\n\n    _this.getPasswordStatus = function () {\n      var form = _this.props.form;\n      var value = form.getFieldValue('password');\n\n      if (value && value.length > 9) {\n        return 'ok';\n      }\n\n      if (value && value.length > 5) {\n        return 'pass';\n      }\n\n      return 'poor';\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          form = _this$props.form,\n          dispatch = _this$props.dispatch;\n      form.validateFields({\n        force: true\n      }, function (err, values) {\n        var prefix = _this.state.prefix;\n\n        if (!err) {\n          dispatch({\n            type: 'register/submit',\n            payload: _objectSpread({}, values, {\n              prefix: prefix\n            })\n          });\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n      var confirmDirty = _this.state.confirmDirty;\n\n      _this.setState({\n        confirmDirty: confirmDirty || !!value\n      });\n    };\n\n    _this.checkConfirm = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不匹配!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.checkPassword = function (rule, value, callback) {\n      if (!value) {\n        _this.setState({\n          help: '请输入密码！',\n          visible: !!value\n        });\n\n        callback('error');\n      } else {\n        _this.setState({\n          help: ''\n        });\n\n        var _this$state = _this.state,\n            visible = _this$state.visible,\n            confirmDirty = _this$state.confirmDirty;\n\n        if (!visible) {\n          _this.setState({\n            visible: !!value\n          });\n        }\n\n        if (value.length < 6) {\n          callback('error');\n        } else {\n          var form = _this.props.form;\n\n          if (value && confirmDirty) {\n            form.validateFields(['confirm'], {\n              force: true\n            });\n          }\n\n          callback();\n        }\n      }\n    };\n\n    _this.changePrefix = function (value) {\n      _this.setState({\n        prefix: value\n      });\n    };\n\n    _this.renderPasswordProgress = function () {\n      var form = _this.props.form;\n      var value = form.getFieldValue('password');\n\n      var passwordStatus = _this.getPasswordStatus();\n\n      return value && value.length ? React.createElement(_Progress, {\n        status: passwordProgressMap[passwordStatus],\n        className: \"progress-\".concat(passwordStatus),\n        strokeWidth: 6,\n        percent: value.length * 10 > 100 ? 100 : value.length * 10,\n        showInfo: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }) : null;\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.register.status) {\n        this.setState({\n          registerSuccess: true\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          form = _this$props2.form,\n          submitting = _this$props2.submitting;\n      var getFieldDecorator = form.getFieldDecorator;\n      var _this$state2 = this.state,\n          count = _this$state2.count,\n          prefix = _this$state2.prefix,\n          help = _this$state2.help,\n          visible = _this$state2.visible,\n          registerSuccess = _this$state2.registerSuccess;\n\n      if (registerSuccess) {\n        return React.createElement(Success, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(_Layout, {\n        className: \"full-layout register-page login-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logoImg,\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"LANIF\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Admin\")), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, getFieldDecorator('mail', {\n        rules: [{\n          required: true,\n          message: '请输入邮箱地址！'\n        }, {\n          type: 'email',\n          message: '邮箱地址格式错误！'\n        }]\n      })(React.createElement(_Input, {\n        size: \"large\",\n        placeholder: \"\\u90AE\\u7BB1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        help: help,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(_Popover, {\n        content: React.createElement(\"div\", {\n          style: {\n            padding: '4px 0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, passwordStatusMap[this.getPasswordStatus()], this.renderPasswordProgress(), React.createElement(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \"\\u8BF7\\u81F3\\u5C11\\u8F93\\u5165 6 \\u4E2A\\u5B57\\u7B26\\u3002\\u8BF7\\u4E0D\\u8981\\u4F7F\\u7528\\u5BB9\\u6613\\u88AB\\u731C\\u5230\\u7684\\u5BC6\\u7801\\u3002\")),\n        overlayStyle: {\n          width: 240\n        },\n        placement: \"right\",\n        visible: visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          validator: this.checkPassword\n        }]\n      })(React.createElement(_Input, {\n        size: \"large\",\n        type: \"password\",\n        placeholder: \"\\u81F3\\u5C116\\u4F4D\\u5BC6\\u7801\\uFF0C\\u533A\\u5206\\u5927\\u5C0F\\u5199\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: '请确认密码！'\n        }, {\n          validator: this.checkConfirm\n        }]\n      })(React.createElement(_Input, {\n        size: \"large\",\n        type: \"password\",\n        placeholder: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        compact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(_Select, {\n        size: \"large\",\n        value: prefix,\n        onChange: this.changePrefix,\n        style: {\n          width: '20%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"+86\"), React.createElement(Option, {\n        value: \"87\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"+87\")), getFieldDecorator('mobile', {\n        rules: [{\n          required: true,\n          message: '请输入手机号！'\n        }, {\n          pattern: /^1\\d{10}$/,\n          message: '手机号格式错误！'\n        }]\n      })(React.createElement(_Input, {\n        size: \"large\",\n        style: {\n          width: '80%'\n        },\n        placeholder: \"11\\u4F4D\\u624B\\u673A\\u53F7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        gutter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, getFieldDecorator('captcha', {\n        rules: [{\n          required: true,\n          message: '请输入验证码！'\n        }]\n      })(React.createElement(_Input, {\n        size: \"large\",\n        placeholder: \"\\u9A8C\\u8BC1\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }))), React.createElement(_Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        className: \"getCaptcha\",\n        size: \"large\",\n        disabled: count,\n        onClick: this.onGetCaptcha,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, count ? \"\".concat(count, \" s\") : '获取验证码')))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        size: \"large\",\n        loading: submitting,\n        className: \"register-form-button\",\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"\\u6CE8\\u518C\"), React.createElement(Link, {\n        className: \"fr\",\n        to: \"/sign/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"\\u4F7F\\u7528\\u5DF2\\u6709\\u8D26\\u6237\\u767B\\u5F55\")))));\n    }\n  }]);\n\n  return Register;\n}(Component), _temp)) || _class) || _class);\nexport { Register as default };","map":{"version":3,"sources":["/Users/evan/progressMan/src/routes/Register/components/index.js"],"names":["React","Component","connect","Link","logoImg","Success","Content","FormItem","Item","Option","InputGroup","Group","passwordStatusMap","ok","color","pass","poor","passwordProgressMap","Register","register","loading","submitting","effects","create","state","count","confirmDirty","visible","help","prefix","registerSuccess","onGetCaptcha","setState","interval","setInterval","clearInterval","getPasswordStatus","form","props","value","getFieldValue","length","handleSubmit","e","preventDefault","dispatch","validateFields","force","err","values","type","payload","handleConfirmBlur","target","checkConfirm","rule","callback","checkPassword","changePrefix","renderPasswordProgress","passwordStatus","nextProps","status","getFieldDecorator","rules","required","message","padding","marginTop","width","validator","pattern"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'dva';\nimport { Link } from 'dva/router';\nimport {\n  Form,\n  Input,\n  Button,\n  Select,\n  Row,\n  Col,\n  Popover,\n  Progress,\n  Layout\n} from 'antd';\nimport './index.less';\nimport '../../Login/components/index.less';\nimport logoImg from 'assets/images/logo1.png';\nimport Success from './Success';\nconst { Content } = Layout;\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\nconst InputGroup = Input.Group;\n\nconst passwordStatusMap = {\n  ok: <div style={{ color: '#52c41a' }}>强度：强</div>,\n  pass: <div style={{ color: '#faad14' }}>强度：中</div>,\n  poor: <div style={{ color: '#f5222d' }}>强度：太短</div>\n};\n\nconst passwordProgressMap = {\n  ok: 'success',\n  pass: 'normal',\n  poor: 'exception'\n};\n\n@connect(({ register, loading }) => ({\n  register,\n  submitting: loading.effects['register/submit']\n}))\n@Form.create()\nexport default class Register extends Component {\n  state = {\n    count: 0,\n    confirmDirty: false,\n    visible: false,\n    help: '',\n    prefix: '86',\n    registerSuccess: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.register.status) {\n      this.setState({\n        registerSuccess: true\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onGetCaptcha = () => {\n    let count = 59;\n    this.setState({ count });\n    this.interval = setInterval(() => {\n      count -= 1;\n      this.setState({ count });\n      if (count === 0) {\n        clearInterval(this.interval);\n      }\n    }, 1000);\n  };\n\n  getPasswordStatus = () => {\n    const { form } = this.props;\n    const value = form.getFieldValue('password');\n    if (value && value.length > 9) {\n      return 'ok';\n    }\n    if (value && value.length > 5) {\n      return 'pass';\n    }\n    return 'poor';\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { form, dispatch } = this.props;\n    form.validateFields({ force: true }, (err, values) => {\n      const { prefix } = this.state;\n      if (!err) {\n        dispatch({\n          type: 'register/submit',\n          payload: {\n            ...values,\n            prefix\n          }\n        });\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    const { confirmDirty } = this.state;\n    this.setState({ confirmDirty: confirmDirty || !!value });\n  };\n\n  checkConfirm = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('两次输入的密码不匹配!');\n    } else {\n      callback();\n    }\n  };\n\n  checkPassword = (rule, value, callback) => {\n    if (!value) {\n      this.setState({\n        help: '请输入密码！',\n        visible: !!value\n      });\n      callback('error');\n    } else {\n      this.setState({\n        help: ''\n      });\n      const { visible, confirmDirty } = this.state;\n      if (!visible) {\n        this.setState({\n          visible: !!value\n        });\n      }\n      if (value.length < 6) {\n        callback('error');\n      } else {\n        const { form } = this.props;\n        if (value && confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      }\n    }\n  };\n\n  changePrefix = value => {\n    this.setState({\n      prefix: value\n    });\n  };\n\n  renderPasswordProgress = () => {\n    const { form } = this.props;\n    const value = form.getFieldValue('password');\n    const passwordStatus = this.getPasswordStatus();\n    return value && value.length ? (\n      <Progress\n        status={passwordProgressMap[passwordStatus]}\n        className={`progress-${passwordStatus}`}\n        strokeWidth={6}\n        percent={value.length * 10 > 100 ? 100 : value.length * 10}\n        showInfo={false}\n      />\n    ) : null;\n  };\n\n  render() {\n    const { form, submitting } = this.props;\n    const { getFieldDecorator } = form;\n    const { count, prefix, help, visible, registerSuccess } = this.state;\n\n    if (registerSuccess) {\n      return <Success />;\n    }\n    return (\n      <Layout className=\"full-layout register-page login-page\">\n        <Content>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <div className=\"user-img\">\n              <img src={logoImg} alt=\"logo\" />\n              <b>LANIF</b>\n              <span>Admin</span>\n            </div>\n            <FormItem>\n              {getFieldDecorator('mail', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入邮箱地址！'\n                  },\n                  {\n                    type: 'email',\n                    message: '邮箱地址格式错误！'\n                  }\n                ]\n              })(<Input size=\"large\" placeholder=\"邮箱\" />)}\n            </FormItem>\n            <FormItem help={help}>\n              <Popover\n                content={\n                  <div style={{ padding: '4px 0' }}>\n                    {passwordStatusMap[this.getPasswordStatus()]}\n                    {this.renderPasswordProgress()}\n                    <div style={{ marginTop: 10 }}>\n                      请至少输入 6 个字符。请不要使用容易被猜到的密码。\n                    </div>\n                  </div>\n                }\n                overlayStyle={{ width: 240 }}\n                placement=\"right\"\n                visible={visible}\n              >\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      validator: this.checkPassword\n                    }\n                  ]\n                })(\n                  <Input\n                    size=\"large\"\n                    type=\"password\"\n                    placeholder=\"至少6位密码，区分大小写\"\n                  />\n                )}\n              </Popover>\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('confirm', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请确认密码！'\n                  },\n                  {\n                    validator: this.checkConfirm\n                  }\n                ]\n              })(<Input size=\"large\" type=\"password\" placeholder=\"确认密码\" />)}\n            </FormItem>\n            <FormItem>\n              <InputGroup compact>\n                <Select\n                  size=\"large\"\n                  value={prefix}\n                  onChange={this.changePrefix}\n                  style={{ width: '20%' }}\n                >\n                  <Option value=\"86\">+86</Option>\n                  <Option value=\"87\">+87</Option>\n                </Select>\n                {getFieldDecorator('mobile', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请输入手机号！'\n                    },\n                    {\n                      pattern: /^1\\d{10}$/,\n                      message: '手机号格式错误！'\n                    }\n                  ]\n                })(\n                  <Input\n                    size=\"large\"\n                    style={{ width: '80%' }}\n                    placeholder=\"11位手机号\"\n                  />\n                )}\n              </InputGroup>\n            </FormItem>\n            <FormItem>\n              <Row gutter={8}>\n                <Col span={16}>\n                  {getFieldDecorator('captcha', {\n                    rules: [\n                      {\n                        required: true,\n                        message: '请输入验证码！'\n                      }\n                    ]\n                  })(<Input size=\"large\" placeholder=\"验证码\" />)}\n                </Col>\n                <Col span={8}>\n                  <Button\n                    className=\"getCaptcha\"\n                    size=\"large\"\n                    disabled={count}\n                    onClick={this.onGetCaptcha}\n                  >\n                    {count ? `${count} s` : '获取验证码'}\n                  </Button>\n                </Col>\n              </Row>\n            </FormItem>\n            <FormItem>\n              <Button\n                size=\"large\"\n                loading={submitting}\n                className=\"register-form-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                注册\n              </Button>\n              <Link className=\"fr\" to=\"/sign/login\">\n                使用已有账户登录\n              </Link>\n            </FormItem>\n          </Form>\n        </Content>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}