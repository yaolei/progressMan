{"ast":null,"code":"import _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/routes/Widgets/Charts/EC/components/Gauge.js\";\nimport React from 'react';\nimport EC from 'components/Charts/ECharts/EC';\nimport cloneDeep from 'lodash/cloneDeep';\nimport 'echarts/lib/chart/gauge';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\n\nvar Gauge =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Gauge, _React$Component);\n\n  function Gauge(props) {\n    var _this;\n\n    _classCallCheck(this, Gauge);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Gauge).call(this, props));\n\n    _this.getOption = function () {\n      return {\n        backgroundColor: '#1b1b1b',\n        tooltip: {\n          formatter: '{a} <br/>{c} {b}'\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {\n              show: true\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        series: [{\n          name: '速度',\n          type: 'gauge',\n          min: 0,\n          max: 220,\n          splitNumber: 11,\n          radius: '70%',\n          axisLine: {\n            // 坐标轴线\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: [[0.09, 'lime'], [0.82, '#1e90ff'], [1, '#ff4500']],\n              width: 3,\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisLabel: {\n            // 坐标轴小标记\n            textStyle: {\n              // 属性lineStyle控制线条样式\n              fontWeight: 'bolder',\n              color: '#fff',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisTick: {\n            // 坐标轴小标记\n            length: 15,\n            // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: 'auto',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          splitLine: {\n            // 分隔线\n            length: 25,\n            // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle（详见lineStyle）控制线条样式\n              width: 3,\n              color: '#fff',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          pointer: {\n            // 分隔线\n            shadowColor: '#fff',\n            //默认透明\n            shadowBlur: 5\n          },\n          title: {\n            textStyle: {\n              // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n              fontWeight: 'bolder',\n              fontSize: 20,\n              fontStyle: 'italic',\n              color: '#fff',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          detail: {\n            backgroundColor: 'rgba(30,144,255,0.8)',\n            borderWidth: 1,\n            borderColor: '#fff',\n            shadowColor: '#fff',\n            //默认透明\n            shadowBlur: 5,\n            offsetCenter: [0, '50%'],\n            // x, y，单位px\n            textStyle: {\n              // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n              fontWeight: 'bolder',\n              color: '#fff'\n            }\n          },\n          data: [{\n            value: 40,\n            name: 'km/h'\n          }]\n        }, {\n          name: '转速',\n          type: 'gauge',\n          center: ['25%', '55%'],\n          // 默认全局居中\n          radius: '50%',\n          min: 0,\n          max: 7,\n          endAngle: 45,\n          splitNumber: 7,\n          axisLine: {\n            // 坐标轴线\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: [[0.29, 'lime'], [0.86, '#1e90ff'], [1, '#ff4500']],\n              width: 2,\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisLabel: {\n            // 坐标轴小标记\n            textStyle: {\n              // 属性lineStyle控制线条样式\n              fontWeight: 'bolder',\n              color: '#fff',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisTick: {\n            // 坐标轴小标记\n            length: 12,\n            // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: 'auto',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          splitLine: {\n            // 分隔线\n            length: 20,\n            // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle（详见lineStyle）控制线条样式\n              width: 3,\n              color: '#fff',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          pointer: {\n            width: 5,\n            shadowColor: '#fff',\n            //默认透明\n            shadowBlur: 5\n          },\n          title: {\n            offsetCenter: [0, '-30%'],\n            // x, y，单位px\n            textStyle: {\n              // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n              fontWeight: 'bolder',\n              fontStyle: 'italic',\n              color: '#fff',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          detail: {\n            //backgroundColor: 'rgba(30,144,255,0.8)',\n            // borderWidth: 1,\n            borderColor: '#fff',\n            shadowColor: '#fff',\n            //默认透明\n            shadowBlur: 5,\n            width: 80,\n            height: 30,\n            offsetCenter: [25, '20%'],\n            // x, y，单位px\n            textStyle: {\n              // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n              fontWeight: 'bolder',\n              color: '#fff'\n            }\n          },\n          data: [{\n            value: 1.5,\n            name: 'x1000 r/min'\n          }]\n        }, {\n          name: '油表',\n          type: 'gauge',\n          center: ['75%', '50%'],\n          // 默认全局居中\n          radius: '50%',\n          min: 0,\n          max: 2,\n          startAngle: 135,\n          endAngle: 45,\n          splitNumber: 2,\n          axisLine: {\n            // 坐标轴线\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: [[0.2, 'lime'], [0.8, '#1e90ff'], [1, '#ff4500']],\n              width: 2,\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisTick: {\n            // 坐标轴小标记\n            length: 12,\n            // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: 'auto',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisLabel: {\n            textStyle: {\n              // 属性lineStyle控制线条样式\n              fontWeight: 'bolder',\n              color: '#fff',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            },\n            formatter: function formatter(v) {\n              switch (v + '') {\n                case '0':\n                  return 'E';\n\n                case '1':\n                  return 'Gas';\n\n                case '2':\n                  return 'F';\n\n                default:\n                  break;\n              }\n            }\n          },\n          splitLine: {\n            // 分隔线\n            length: 15,\n            // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle（详见lineStyle）控制线条样式\n              width: 3,\n              color: '#fff',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          pointer: {\n            width: 2,\n            shadowColor: '#fff',\n            //默认透明\n            shadowBlur: 5\n          },\n          title: {\n            show: false\n          },\n          detail: {\n            show: false\n          },\n          data: [{\n            value: 0.5,\n            name: 'gas'\n          }]\n        }, {\n          name: '水表',\n          type: 'gauge',\n          center: ['75%', '50%'],\n          // 默认全局居中\n          radius: '50%',\n          min: 0,\n          max: 2,\n          startAngle: 315,\n          endAngle: 225,\n          splitNumber: 2,\n          axisLine: {\n            // 坐标轴线\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: [[0.2, 'lime'], [0.8, '#1e90ff'], [1, '#ff4500']],\n              width: 2,\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisTick: {\n            // 坐标轴小标记\n            show: false\n          },\n          axisLabel: {\n            textStyle: {\n              // 属性lineStyle控制线条样式\n              fontWeight: 'bolder',\n              color: '#fff',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            },\n            formatter: function formatter(v) {\n              switch (v + '') {\n                case '0':\n                  return 'H';\n\n                case '1':\n                  return 'Water';\n\n                case '2':\n                  return 'C';\n\n                default:\n                  break;\n              }\n            }\n          },\n          splitLine: {\n            // 分隔线\n            length: 15,\n            // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle（详见lineStyle）控制线条样式\n              width: 3,\n              color: '#fff',\n              shadowColor: '#fff',\n              //默认透明\n              shadowBlur: 10\n            }\n          },\n          pointer: {\n            width: 2,\n            shadowColor: '#fff',\n            //默认透明\n            shadowBlur: 5\n          },\n          title: {\n            show: false\n          },\n          detail: {\n            show: false\n          },\n          data: [{\n            value: 0.5,\n            name: 'gas'\n          }]\n        }]\n      };\n    };\n\n    _this.timeTicket = null;\n\n    _this.getInitialState = function () {\n      return {\n        option: _this.getOption()\n      };\n    };\n\n    _this.state = _this.getInitialState();\n    return _this;\n  }\n\n  _createClass(Gauge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.timeTicket) {\n        clearInterval(this.timeTicket);\n      }\n\n      this.timeTicket = setInterval(function () {\n        var option = cloneDeep(_this2.state.option);\n        option.series[0].data[0].value = (Math.random() * 100).toFixed(2) - 0;\n        option.series[1].data[0].value = (Math.random() * 7).toFixed(2) - 0;\n        option.series[2].data[0].value = (Math.random() * 2).toFixed(2) - 0;\n        option.series[3].data[0].value = (Math.random() * 2).toFixed(2) - 0;\n\n        _this2.setState({\n          option: option\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeTicket) {\n        clearInterval(this.timeTicket);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(EC, {\n        option: this.state.option,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Gauge;\n}(React.Component);\n\nexport { Gauge as default };","map":{"version":3,"sources":["/Users/evan/progressMan/src/routes/Widgets/Charts/EC/components/Gauge.js"],"names":["React","EC","cloneDeep","Gauge","props","getOption","backgroundColor","tooltip","formatter","toolbox","show","feature","mark","restore","saveAsImage","series","name","type","min","max","splitNumber","radius","axisLine","lineStyle","color","width","shadowColor","shadowBlur","axisLabel","textStyle","fontWeight","axisTick","length","splitLine","pointer","title","fontSize","fontStyle","detail","borderWidth","borderColor","offsetCenter","data","value","center","endAngle","height","startAngle","v","timeTicket","getInitialState","option","state","clearInterval","setInterval","Math","random","toFixed","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport EC from 'components/Charts/ECharts/EC';\nimport cloneDeep from 'lodash/cloneDeep';\nimport 'echarts/lib/chart/gauge';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\n\nexport default class Gauge extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState();\n  }\n  getOption = () => {\n    return {\n      backgroundColor: '#1b1b1b',\n      tooltip: {\n        formatter: '{a} <br/>{c} {b}'\n      },\n      toolbox: {\n        show: true,\n        feature: {\n          mark: { show: true },\n          restore: { show: true },\n          saveAsImage: { show: true }\n        }\n      },\n      series: [\n        {\n          name: '速度',\n          type: 'gauge',\n          min: 0,\n          max: 220,\n          splitNumber: 11,\n          radius: '70%',\n          axisLine: {\n            // 坐标轴线\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: [[0.09, 'lime'], [0.82, '#1e90ff'], [1, '#ff4500']],\n              width: 3,\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisLabel: {\n            // 坐标轴小标记\n            textStyle: {\n              // 属性lineStyle控制线条样式\n              fontWeight: 'bolder',\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisTick: {\n            // 坐标轴小标记\n            length: 15, // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: 'auto',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          splitLine: {\n            // 分隔线\n            length: 25, // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle（详见lineStyle）控制线条样式\n              width: 3,\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          pointer: {\n            // 分隔线\n            shadowColor: '#fff', //默认透明\n            shadowBlur: 5\n          },\n          title: {\n            textStyle: {\n              // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n              fontWeight: 'bolder',\n              fontSize: 20,\n              fontStyle: 'italic',\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          detail: {\n            backgroundColor: 'rgba(30,144,255,0.8)',\n            borderWidth: 1,\n            borderColor: '#fff',\n            shadowColor: '#fff', //默认透明\n            shadowBlur: 5,\n            offsetCenter: [0, '50%'], // x, y，单位px\n            textStyle: {\n              // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n              fontWeight: 'bolder',\n              color: '#fff'\n            }\n          },\n          data: [{ value: 40, name: 'km/h' }]\n        },\n        {\n          name: '转速',\n          type: 'gauge',\n          center: ['25%', '55%'], // 默认全局居中\n          radius: '50%',\n          min: 0,\n          max: 7,\n          endAngle: 45,\n          splitNumber: 7,\n          axisLine: {\n            // 坐标轴线\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: [[0.29, 'lime'], [0.86, '#1e90ff'], [1, '#ff4500']],\n              width: 2,\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisLabel: {\n            // 坐标轴小标记\n            textStyle: {\n              // 属性lineStyle控制线条样式\n              fontWeight: 'bolder',\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisTick: {\n            // 坐标轴小标记\n            length: 12, // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: 'auto',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          splitLine: {\n            // 分隔线\n            length: 20, // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle（详见lineStyle）控制线条样式\n              width: 3,\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          pointer: {\n            width: 5,\n            shadowColor: '#fff', //默认透明\n            shadowBlur: 5\n          },\n          title: {\n            offsetCenter: [0, '-30%'], // x, y，单位px\n            textStyle: {\n              // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n              fontWeight: 'bolder',\n              fontStyle: 'italic',\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          detail: {\n            //backgroundColor: 'rgba(30,144,255,0.8)',\n            // borderWidth: 1,\n            borderColor: '#fff',\n            shadowColor: '#fff', //默认透明\n            shadowBlur: 5,\n            width: 80,\n            height: 30,\n            offsetCenter: [25, '20%'], // x, y，单位px\n            textStyle: {\n              // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n              fontWeight: 'bolder',\n              color: '#fff'\n            }\n          },\n          data: [{ value: 1.5, name: 'x1000 r/min' }]\n        },\n        {\n          name: '油表',\n          type: 'gauge',\n          center: ['75%', '50%'], // 默认全局居中\n          radius: '50%',\n          min: 0,\n          max: 2,\n          startAngle: 135,\n          endAngle: 45,\n          splitNumber: 2,\n          axisLine: {\n            // 坐标轴线\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: [[0.2, 'lime'], [0.8, '#1e90ff'], [1, '#ff4500']],\n              width: 2,\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisTick: {\n            // 坐标轴小标记\n            length: 12, // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: 'auto',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisLabel: {\n            textStyle: {\n              // 属性lineStyle控制线条样式\n              fontWeight: 'bolder',\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            },\n            formatter: function(v) {\n              switch (v + '') {\n                case '0':\n                  return 'E';\n                case '1':\n                  return 'Gas';\n                case '2':\n                  return 'F';\n                default:\n                  break;\n              }\n            }\n          },\n          splitLine: {\n            // 分隔线\n            length: 15, // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle（详见lineStyle）控制线条样式\n              width: 3,\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          pointer: {\n            width: 2,\n            shadowColor: '#fff', //默认透明\n            shadowBlur: 5\n          },\n          title: {\n            show: false\n          },\n          detail: {\n            show: false\n          },\n          data: [{ value: 0.5, name: 'gas' }]\n        },\n        {\n          name: '水表',\n          type: 'gauge',\n          center: ['75%', '50%'], // 默认全局居中\n          radius: '50%',\n          min: 0,\n          max: 2,\n          startAngle: 315,\n          endAngle: 225,\n          splitNumber: 2,\n          axisLine: {\n            // 坐标轴线\n            lineStyle: {\n              // 属性lineStyle控制线条样式\n              color: [[0.2, 'lime'], [0.8, '#1e90ff'], [1, '#ff4500']],\n              width: 2,\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          axisTick: {\n            // 坐标轴小标记\n            show: false\n          },\n          axisLabel: {\n            textStyle: {\n              // 属性lineStyle控制线条样式\n              fontWeight: 'bolder',\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            },\n            formatter: function(v) {\n              switch (v + '') {\n                case '0':\n                  return 'H';\n                case '1':\n                  return 'Water';\n                case '2':\n                  return 'C';\n                default:\n                  break;\n              }\n            }\n          },\n          splitLine: {\n            // 分隔线\n            length: 15, // 属性length控制线长\n            lineStyle: {\n              // 属性lineStyle（详见lineStyle）控制线条样式\n              width: 3,\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            }\n          },\n          pointer: {\n            width: 2,\n            shadowColor: '#fff', //默认透明\n            shadowBlur: 5\n          },\n          title: {\n            show: false\n          },\n          detail: {\n            show: false\n          },\n          data: [{ value: 0.5, name: 'gas' }]\n        }\n      ]\n    };\n  };\n\n  timeTicket = null;\n  getInitialState = () => ({ option: this.getOption() });\n\n  componentDidMount() {\n    if (this.timeTicket) {\n      clearInterval(this.timeTicket);\n    }\n    this.timeTicket = setInterval(() => {\n      const option = cloneDeep(this.state.option);\n      option.series[0].data[0].value = (Math.random() * 100).toFixed(2) - 0;\n      option.series[1].data[0].value = (Math.random() * 7).toFixed(2) - 0;\n      option.series[2].data[0].value = (Math.random() * 2).toFixed(2) - 0;\n      option.series[3].data[0].value = (Math.random() * 2).toFixed(2) - 0;\n      this.setState({ option: option });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timeTicket) {\n      clearInterval(this.timeTicket);\n    }\n  }\n\n  render() {\n    return (\n      <EC option={this.state.option} />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}