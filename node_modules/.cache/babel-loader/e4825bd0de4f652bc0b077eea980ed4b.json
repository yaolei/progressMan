{"ast":null,"code":"import \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Panel/Panel.js\";\nimport React, { Component } from 'react';\nimport Icon from '../Icon';\nimport cx from 'classnames';\nimport CSSAnimate from '../CSSAnimate';\nimport './style/index.less';\nvar confirm = _Modal.confirm;\n\nvar noop = function noop(_) {};\n/**\n * 面板组件\n */\n\n\nvar Panel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Panel, _Component);\n\n  function Panel(props) {\n    var _this;\n\n    _classCallCheck(this, Panel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Panel).call(this, props));\n\n    _this.onExpand = function (expand) {\n      return function (e) {\n        var onChange = _this.props.onChange;\n\n        _this.setState({\n          expand: expand,\n          collapse: false\n        });\n\n        if (onChange) {\n          onChange({\n            expand: expand,\n            collapse: false\n          });\n        }\n      };\n    };\n\n    _this.onCollapse = function (collapse) {\n      return function (e) {\n        var onChange = _this.props.onChange;\n\n        _this.setState({\n          collapse: collapse,\n          expand: false\n        });\n\n        if (onChange) {\n          onChange({\n            collapse: collapse,\n            expand: false\n          });\n        }\n      };\n    };\n\n    _this.onRefresh = function () {\n      _this.setState({\n        refresh: _this.state.refresh + 1,\n        animationName: 'fadeIn'\n      });\n\n      _this.props.onRefresh && _this.props.onRefresh();\n    };\n\n    _this.onClose = function () {\n      var expand = _this.state.expand;\n\n      if (expand) {\n        confirm({\n          title: '提示',\n          content: '您确认要关闭这个面板？',\n          onOk: function onOk() {\n            _this.props.onClose && _this.props.onClose();\n          }\n        });\n      } else {\n        _this.props.onClose && _this.props.onClose();\n      }\n    };\n\n    _this.state = {\n      collapse: props.collapse || false,\n      expand: props.expand || false,\n      refresh: 0,\n      animationName: ''\n    };\n    return _this;\n  }\n\n  _createClass(Panel, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var st = {};\n\n      if ('collapse' in nextProps) {\n        st.collapse = true;\n      } else if ('expand' in nextProps) {\n        st.expand = true;\n      }\n\n      if (Object.keys(st).length) {\n        this.setState(st);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          expand = _this$state.expand,\n          collapse = _this$state.collapse,\n          refresh = _this$state.refresh,\n          animationName = _this$state.animationName;\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          prefix = _this$props.prefix,\n          className = _this$props.className,\n          title = _this$props.title,\n          width = _this$props.width,\n          height = _this$props.height,\n          style = _this$props.style,\n          children = _this$props.children,\n          header = _this$props.header,\n          cover = _this$props.cover,\n          scroll = _this$props.scroll;\n      var classnames = cx(prefix, className, {\n        theme: !!theme,\n        'panel-fullscreen': !!expand,\n        'panel-collapsed': !!collapse,\n        cover: !!cover\n      });\n\n      var styles = _objectSpread({}, style, {\n        width: width\n      });\n\n      var bodyStyles = {};\n\n      if (!expand) {\n        bodyStyles.height = height;\n      }\n\n      if (scroll) {\n        bodyStyles.overflow = 'auto';\n      }\n\n      var Header = typeof header === 'undefined' ? React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"-header\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"\".concat(prefix, \"-header-title\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, title), React.createElement(\"span\", {\n        className: \"\".concat(prefix, \"-header-controls\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"panel-control-loader\",\n        onClick: this.onRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"a\", {\n        className: \"panel-control-fullscreen\",\n        onClick: this.onExpand(expand ? false : true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"\".concat(expand ? 'shrink' : 'enlarge'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"a\", {\n        className: \"panel-control-collapsed\",\n        onClick: this.onCollapse(collapse ? false : true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"\".concat(collapse ? 'plus' : 'minus'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(_Popconfirm, {\n        title: \"\\u60A8\\u786E\\u8BA4\\u8981\\u5173\\u95ED\\u8FD9\\u4E2A\\u9762\\u677F\\uFF1F\",\n        onConfirm: this.onClose,\n        placement: \"topRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"panel-control-remove\",\n        onClick: expand ? this.onClose : noop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))))) : header;\n      return React.createElement(\"div\", {\n        className: classnames,\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, Header, React.createElement(\"div\", {\n        className: \"\".concat(prefix, \"-body\"),\n        style: bodyStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(CSSAnimate, {\n        className: \"panel-content\",\n        type: animationName,\n        callback: function callback(_) {\n          return _this2.setState({\n            animationName: ''\n          });\n        },\n        key: refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, children)));\n    }\n  }]);\n\n  return Panel;\n}(Component);\n\nPanel.defaultProps = {\n  prefix: 'antui-panel'\n};\nexport default Panel;","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Panel/Panel.js"],"names":["React","Component","Icon","cx","CSSAnimate","confirm","noop","_","Panel","props","onExpand","expand","e","onChange","setState","collapse","onCollapse","onRefresh","refresh","state","animationName","onClose","title","content","onOk","nextProps","st","Object","keys","length","theme","prefix","className","width","height","style","children","header","cover","scroll","classnames","styles","bodyStyles","overflow","Header","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Icon from '../Icon';\nimport cx from 'classnames';\nimport CSSAnimate from '../CSSAnimate';\nimport { Popconfirm, Modal } from 'antd';\nimport './style/index.less';\nconst confirm = Modal.confirm;\nconst noop = _ => {};\n/**\n * 面板组件\n */\nclass Panel extends Component {\n  static defaultProps = {\n    prefix: 'antui-panel'\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: props.collapse || false,\n      expand: props.expand || false,\n      refresh: 0,\n      animationName: ''\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const st = {};\n    if ('collapse' in nextProps) {\n      st.collapse = true;\n    } else if ('expand' in nextProps) {\n      st.expand = true;\n    }\n    if (Object.keys(st).length) {\n      this.setState(st);\n    }\n  }\n\n  onExpand = expand => e => {\n    const { onChange } = this.props;\n\n    this.setState({\n      expand,\n      collapse: false\n    });\n\n    if (onChange) {\n      onChange({\n        expand,\n        collapse: false\n      });\n    }\n  };\n\n  onCollapse = collapse => e => {\n    const { onChange } = this.props;\n\n    this.setState({\n      collapse,\n      expand: false\n    });\n\n    if (onChange) {\n      onChange({\n        collapse,\n        expand: false\n      });\n    }\n  };\n\n  onRefresh = () => {\n    this.setState({\n      refresh: this.state.refresh + 1,\n      animationName: 'fadeIn'\n    });\n    this.props.onRefresh && this.props.onRefresh();\n  };\n\n  onClose = () => {\n    const { expand } = this.state;\n    if (expand) {\n      confirm({\n        title: '提示',\n        content: '您确认要关闭这个面板？',\n        onOk: () => {\n          this.props.onClose && this.props.onClose();\n        }\n      });\n    } else {\n      this.props.onClose && this.props.onClose();\n    }\n  };\n\n  render() {\n    const { expand, collapse, refresh, animationName } = this.state;\n    const {\n      theme,\n      prefix,\n      className,\n      title,\n      width,\n      height,\n      style,\n      children,\n      header,\n      cover,\n      scroll,\n    } = this.props;\n\n    const classnames = cx(prefix, className, {\n      theme: !!theme,\n      'panel-fullscreen': !!expand,\n      'panel-collapsed': !!collapse,\n      cover: !!cover\n    });\n\n    const styles = {\n      ...style,\n      width\n    };\n    const bodyStyles = {};\n    if (!expand) {\n      bodyStyles.height = height;\n    }\n    if (scroll) {\n      bodyStyles.overflow = 'auto';\n    }\n\n    const Header =\n      typeof header === 'undefined' ? (\n        <div className={`${prefix}-header`}>\n          <span className={`${prefix}-header-title`}>{title}</span>\n          <span className={`${prefix}-header-controls`}>\n            <a className=\"panel-control-loader\" onClick={this.onRefresh}>\n              <Icon type=\"refresh\" />\n            </a>\n            <a\n              className=\"panel-control-fullscreen\"\n              onClick={this.onExpand(expand ? false : true)}\n            >\n              <Icon type={`${expand ? 'shrink' : 'enlarge'}`} />\n            </a>\n            <a\n              className=\"panel-control-collapsed\"\n              onClick={this.onCollapse(collapse ? false : true)}\n            >\n              <Icon type={`${collapse ? 'plus' : 'minus'}`} />\n            </a>\n            <Popconfirm\n              title=\"您确认要关闭这个面板？\"\n              onConfirm={this.onClose}\n              placement=\"topRight\"\n            >\n              <a\n                className=\"panel-control-remove\"\n                onClick={expand ? this.onClose : noop}\n              >\n                <Icon type=\"close\" />\n              </a>\n            </Popconfirm>\n          </span>\n        </div>\n      ) : (\n        header\n      );\n\n    return (\n      <div className={classnames} style={styles}>\n        {Header}\n        <div className={`${prefix}-body`} style={bodyStyles}>\n          <CSSAnimate\n            className=\"panel-content\"\n            type={animationName}\n            callback={_ => this.setState({ animationName: '' })}\n            key={refresh}\n          >\n            {children}\n          </CSSAnimate>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Panel;\n"]},"metadata":{},"sourceType":"module"}