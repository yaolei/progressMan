{"ast":null,"code":"import _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/routes/Widgets/Charts/G2/components/Map.js\";\nimport React, { Component } from 'react';\nimport G2 from 'components/Charts/G2';\nimport DataSet from '@antv/data-set';\nimport mapData from '../data/world.geo.json';\nimport data from '../data/earthquake.json';\nvar Chart = G2.Chart,\n    Axis = G2.Axis,\n    Geom = G2.Geom,\n    Tooltip = G2.Tooltip,\n    Legend = G2.Legend,\n    Coord = G2.Coord,\n    View = G2.View;\nvar cols = {\n  x: {\n    sync: true,\n    nice: false\n  },\n  y: {\n    sync: true,\n    nice: false\n  }\n};\nvar ds = new DataSet(); // draw the map\n\nvar dv = ds.createView('back').source(mapData, {\n  type: 'GeoJSON'\n}).transform({\n  type: 'geo.projection',\n  projection: 'geoMercator',\n  as: ['x', 'y', 'centroidX', 'centroidY']\n}); // draw the bubble plot\n\nvar userData = ds.createView().source(data);\nuserData.transform({\n  type: 'map',\n  callback: function callback(obj) {\n    var projectedCoord = dv.geoProjectPosition([obj.lng * 1, obj.lat * 1], 'geoMercator');\n    obj.x = projectedCoord[0];\n    obj.y = projectedCoord[1];\n    obj.deaths = obj.deaths * 1;\n    obj.magnitude = obj.magnitude * 1;\n    return obj;\n  }\n});\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    _classCallCheck(this, Map);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Map).apply(this, arguments));\n  }\n\n  _createClass(Map, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Chart, {\n        data: true,\n        scale: cols,\n        forceFit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Coord, {\n        reflect: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        visible: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        visible: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        showTitle: false,\n        containerTpl: \"<div class=\\\"g2-tooltip\\\" style=\\\"color:transparent !important;border: 1px solid rgb(51, 51, 51);\\\"><table class=\\\"g2-tooltip-list\\\"></table></div>\",\n        itemTpl: \"<tr data-index={index}><td style=\\\"padding: 5px; background-color:#545454\\\">{name}</td><td style=\\\"padding: 5px; background-color:#fff;color: #000\\\">{value}</td></tr>\",\n        \"g2-tooltip\": {\n          borderRadius: '2px',\n          backgroundColor: '#DDDDDD',\n          padding: 0,\n          border: '1px solid #333'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(View, {\n        data: dv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Geom, {\n        type: \"polygon\",\n        tooltip: false,\n        position: \"x*y\",\n        style: {\n          fill: '#ddd',\n          lineWidth: 0.5,\n          stroke: '#fff',\n          fillOpacity: 0.85\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(View, {\n        data: userData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Geom, {\n        type: \"point\",\n        position: \"x*y\",\n        size: ['deaths', [2, 30]],\n        shape: \"circle\",\n        opacity: 0.45,\n        color: \"#FF2F29\",\n        tooltip: \"date*location*lat*lng*deaths*magnitude\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/Users/evan/progressMan/src/routes/Widgets/Charts/G2/components/Map.js"],"names":["React","Component","G2","DataSet","mapData","data","Chart","Axis","Geom","Tooltip","Legend","Coord","View","cols","x","sync","nice","y","ds","dv","createView","source","type","transform","projection","as","userData","callback","obj","projectedCoord","geoProjectPosition","lng","lat","deaths","magnitude","Map","borderRadius","backgroundColor","padding","border","fill","lineWidth","stroke","fillOpacity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport G2 from 'components/Charts/G2';\nimport DataSet from '@antv/data-set';\nimport mapData from '../data/world.geo.json';\nimport data from '../data/earthquake.json';\nconst { Chart, Axis, Geom, Tooltip, Legend, Coord, View } = G2;\n\nconst cols = {\n  x: { sync: true, nice: false },\n  y: { sync: true, nice: false }\n}\n\nconst ds = new DataSet();\n\n// draw the map\nconst dv = ds\n  .createView('back')\n  .source(mapData, {\n    type: 'GeoJSON'\n  })\n  .transform({\n    type: 'geo.projection',\n    projection: 'geoMercator',\n    as: ['x', 'y', 'centroidX', 'centroidY']\n  });\n// draw the bubble plot\nconst userData = ds.createView().source(data);\nuserData.transform({\n  type: 'map',\n  callback: obj => {\n    const projectedCoord = dv.geoProjectPosition(\n      [obj.lng * 1, obj.lat * 1],\n      'geoMercator'\n    );\n    obj.x = projectedCoord[0];\n    obj.y = projectedCoord[1];\n    obj.deaths = obj.deaths * 1;\n    obj.magnitude = obj.magnitude * 1;\n    return obj;\n  }\n});\n\nclass Map extends Component {\n  render() {\n    return (\n      <Chart\n        data\n        scale={cols}\n        forceFit\n      >\n        <Coord reflect />\n        <Legend visible={false} />\n        <Axis visible={false} />\n        <Tooltip\n          showTitle={false}\n          containerTpl=\"<div class=&quot;g2-tooltip&quot; style=&quot;color:transparent !important;border: 1px solid rgb(51, 51, 51);&quot;><table class=&quot;g2-tooltip-list&quot;></table></div>\"\n          itemTpl=\"<tr data-index={index}><td style=&quot;padding: 5px; background-color:#545454&quot;>{name}</td><td style=&quot;padding: 5px; background-color:#fff;color: #000&quot;>{value}</td></tr>\"\n          g2-tooltip={{\n            borderRadius: '2px',\n            backgroundColor: '#DDDDDD',\n            padding: 0,\n            border: '1px solid #333'\n          }}\n        />\n        <View data={dv}>\n          <Geom\n            type=\"polygon\"\n            tooltip={false}\n            position=\"x*y\"\n            style={{\n              fill: '#ddd',\n              lineWidth: 0.5,\n              stroke: '#fff',\n              fillOpacity: 0.85\n            }}\n          />\n        </View>\n        <View data={userData}>\n          <Geom\n            type=\"point\"\n            position=\"x*y\"\n            size={['deaths', [2, 30]]}\n            shape=\"circle\"\n            opacity={0.45}\n            color=\"#FF2F29\"\n            tooltip=\"date*location*lat*lng*deaths*magnitude\"\n          />\n        </View>\n      </Chart>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}