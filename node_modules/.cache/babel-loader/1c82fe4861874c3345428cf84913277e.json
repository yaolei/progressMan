{"ast":null,"code":"import _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport PageInfo from './PageInfo';\nimport config from '@/config';\n/**\n * 通用分页助手\n */\n\nvar PageHelper =\n/*#__PURE__*/\nfunction () {\n  function PageHelper() {\n    _classCallCheck(this, PageHelper);\n  }\n\n  _createClass(PageHelper, null, [{\n    key: \"requestFormat\",\n\n    /**\n     * 可以通过设置这个函数，格式化发送到后端的参数\n     * \n     * 例如后端分页接口需要的参数是\n     * {\n     *    currentPage: 1, \n     *    showCount: 10, \n     *    paramMap: {name: 'jonn'}\n     * }\n     * 可以通过设置这个参数格式化分页信息\n     * 例如：\n     * pageHelper.requestFormat(({pageNum, pageSize}) => ({\n     *  currentPage: pageNum,\n     *  showCount: pageSize\n     * }))\n    */\n    value: function requestFormat(pageInfo) {\n      return config.pageHelper.requestFormat(pageInfo);\n    }\n  }, {\n    key: \"responseFormat\",\n\n    /**\n     * 格式化从服务端反回的数据，并置入PageInfo对象中，\n     * 为下次分页做准备\n     * 页码 pageNum;\n       每页数量 pageSize;\n       当前页的数量 size;\n       总记录数 total;\n       总页数 totalPages;\n       结果集 list;\n     * @param {object} resp \n    */\n    value: function responseFormat(resp) {\n      return config.pageHelper.responseFormat(resp);\n    }\n  }]);\n\n  return PageHelper;\n}();\n\nPageHelper.create = function () {\n  var pageInfo = new PageInfo();\n  return pageInfo;\n};\n\nexport { PageHelper as default };","map":{"version":3,"sources":["/Users/evan/progressMan/src/utils/pageHelper/index.js"],"names":["PageInfo","config","PageHelper","pageInfo","pageHelper","requestFormat","resp","responseFormat","create"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;;;;IAGqBC,U;;;;;;;;;;AAMnB;;;;;;;;;;;;;;;;kCAgBqBC,Q,EAAU;AAC7B,aAAOF,MAAM,CAACG,UAAP,CAAkBC,aAAlB,CAAgCF,QAAhC,CAAP;AACD;;;;AAGD;;;;;;;;;;;mCAWsBG,I,EAAM;AAC1B,aAAOL,MAAM,CAACG,UAAP,CAAkBG,cAAlB,CAAiCD,IAAjC,CAAP;AACD;;;;;;AAxCkBJ,U,CACZM,M,GAAS,YAAM;AACpB,MAAML,QAAQ,GAAG,IAAIH,QAAJ,EAAjB;AACA,SAAOG,QAAP;AACD,C;;SAJkBD,U","sourcesContent":["import PageInfo from './PageInfo';\nimport config from '@/config';\n\n/**\n * 通用分页助手\n */\nexport default class　PageHelper {\n  static create = () => {\n    const pageInfo = new PageInfo();\n    return pageInfo;\n  }\n\n  /**\n   * 可以通过设置这个函数，格式化发送到后端的参数\n   * \n   * 例如后端分页接口需要的参数是\n   * {\n   *    currentPage: 1, \n   *    showCount: 10, \n   *    paramMap: {name: 'jonn'}\n   * }\n   * 可以通过设置这个参数格式化分页信息\n   * 例如：\n   * pageHelper.requestFormat(({pageNum, pageSize}) => ({\n   *  currentPage: pageNum,\n   *  showCount: pageSize\n   * }))\n  */\n  static requestFormat(pageInfo) {\n    return config.pageHelper.requestFormat(pageInfo);\n  };\n   \n\n  /**\n   * 格式化从服务端反回的数据，并置入PageInfo对象中，\n   * 为下次分页做准备\n   * 页码 pageNum;\n     每页数量 pageSize;\n     当前页的数量 size;\n     总记录数 total;\n     总页数 totalPages;\n     结果集 list;\n   * @param {object} resp \n  */\n  static responseFormat(resp) {\n    return config.pageHelper.responseFormat(resp);\n  }\n}"]},"metadata":{},"sourceType":"module"}