{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.REQUEST_METHODS = undefined;\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _utils = require('../utils');\n\nvar _error = require('./error');\n\nvar _error2 = _interopRequireDefault(_error);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar REQUEST_METHODS = exports.REQUEST_METHODS = ['GET', 'POST', 'HEAD', 'DELETE', 'OPTIONS', 'PUT', 'PATCH'];\n\nvar Request = function () {\n  function Request() {\n    var _this = this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck3['default'])(this, Request);\n\n    _initialiseProps.call(this);\n\n    this._options = (0, _extends3['default'])({}, this.defaultOptions, opts); // normalize the headers\n\n    var headers = this._options.headers;\n\n    for (var h in headers) {\n      if (h !== h.toLowerCase()) {\n        headers[h.toLowerCase()] = headers[h];\n        delete headers[h];\n      }\n    }\n\n    REQUEST_METHODS.forEach(function (method) {\n      _this[method.toLowerCase()] = function (url, data) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        options.data = data;\n        return _this.send(url, (0, _extends3['default'])({}, options, {\n          method: method\n        }));\n      };\n    });\n  }\n  /**\r\n   * default options\r\n   */\n\n  /**\r\n   * Set Options\r\n   *\r\n   * Examples:\r\n   *\r\n   *   .config('method', 'GET')\r\n   *   .config({headers: {'content-type': 'application/json'}})\r\n   *\r\n   * @param {String|Object} key\r\n   * @param {Any} value\r\n   * @return {Request}\r\n   */\n\n  /**\r\n   * Set headers\r\n   *\r\n   * Examples:\r\n   *\r\n   *   .headers('Accept', 'application/json')\r\n   *   .headers({ Accept: 'application/json' })\r\n   *\r\n   * @param {String|Object} key\r\n   * @param {String} value\r\n   * @return {Request}\r\n   */\n\n  /**\r\n   * Set Content-Type\r\n   *\r\n   * @param {String} type\r\n   */\n\n  /**\r\n   * GET send form\r\n   */\n\n  /**\r\n   * POST send form\r\n   */\n  // send request\n\n\n  (0, _createClass3['default'])(Request, [{\n    key: '__checkStatus',\n    value: function __checkStatus(response) {\n      if (response.status >= 200 && response.status < 300) {\n        if (response.status === 204) {\n          return null;\n        }\n\n        return response;\n      }\n\n      var errortext = response.statusText;\n      var error = new _error2['default'](errortext, response.status);\n      error.response = response;\n      throw error;\n    }\n  }, {\n    key: '__parseResponse',\n    value: function __parseResponse(response, responseType) {\n      return (0, _utils.isFunction)(response && response[responseType]) ? response[responseType]() : response;\n    }\n  }, {\n    key: '__afterResponse',\n    value: function __afterResponse(response, afterResponse, info) {\n      if ((0, _utils.isFunction)(afterResponse)) {\n        var after = afterResponse(response, info);\n        return after;\n      }\n\n      return response;\n    }\n  }, {\n    key: '__errorHandle',\n    value: function __errorHandle(e, errorHandle, reject, info) {\n      if (e.name !== 'RequestError') {\n        e.name = 'RequestError';\n        e.code = 0;\n      }\n\n      if (!(0, _utils.isFunction)(errorHandle) || errorHandle(e, info) !== false) {\n        reject(e);\n      }\n    }\n  }, {\n    key: '__timeoutFetch',\n    value: function __timeoutFetch(url, fetchOpts, options) {\n      var timeout = options.timeout;\n\n      if (timeout && typeof timeout === 'number') {\n        return Promise.race([fetch(url, fetchOpts), new Promise(function (resolve, reject) {\n          return setTimeout(function () {\n            return reject(new _error2['default']('request timeout of ' + timeout + ' ms.', 'timeout'));\n          }, timeout);\n        })]);\n      } else {\n        return fetch(url, fetchOpts);\n      }\n    }\n  }]);\n  return Request;\n}();\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.defaultOptions = {\n    method: 'POST',\n    // default\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      'content-type': 'application/json'\n    },\n    responseType: 'json',\n    // text or blob or formData https://fetch.spec.whatwg.org/\n    prefix: '',\n    // request prefix\n    beforeRequest: null,\n    // before request check, return false or a rejected Promise will stop request\n    afterResponse: null,\n    // after request hook\n    errorHandle: null,\n    // global error handle\n    withHeaders: null,\n    // function & object, every request will take it\n    timeout: null // request timeout\n\n  };\n\n  this.create = function (opts) {\n    return new Request(opts);\n  };\n\n  this.config = function (key, value) {\n    var options = _this2._options;\n\n    if (typeof key === 'object') {\n      for (var k in key) {\n        options[k] = key[k];\n      }\n    } else {\n      options[key] = value;\n    }\n\n    return _this2;\n  };\n\n  this.prefix = function (prefix) {\n    if (prefix && typeof prefix === 'string') _this2._options.prefix = prefix;\n    return _this2;\n  };\n\n  this.timeout = function (timeout) {\n    if (timeout && typeof timeout === 'number') _this2._options.timeout = timeout;\n    return _this2;\n  };\n\n  this.beforeRequest = function (cb) {\n    var options = _this2._options;\n\n    if ((0, _utils.isFunction)(cb)) {\n      options.beforeRequest = cb;\n    }\n\n    return _this2;\n  };\n\n  this.afterResponse = function (cb) {\n    var options = _this2._options;\n\n    if ((0, _utils.isFunction)(cb)) {\n      options.afterResponse = cb;\n    }\n\n    return _this2;\n  };\n\n  this.errorHandle = function (cb) {\n    var options = _this2._options;\n\n    if ((0, _utils.isFunction)(cb)) {\n      options.errorHandle = cb;\n    }\n\n    return _this2;\n  };\n\n  this.withHeaders = function (cb) {\n    var options = _this2._options;\n\n    if ((0, _utils.isFunction)(cb)) {\n      options.withHeaders = cb;\n    }\n\n    return _this2;\n  };\n\n  this.headers = function (key, value) {\n    var headers = _this2._options.headers;\n\n    if ((0, _utils.isObject)(key)) {\n      for (var k in key) {\n        headers[k.toLowerCase()] = key[k];\n      }\n    } else if ((0, _utils.isFunction)(key)) {\n      headers.__headersFun__ = key;\n    } else {\n      headers[key.toLowerCase()] = value;\n    }\n\n    return _this2;\n  };\n\n  this.contentType = function (type) {\n    var headers = _this2._options.headers;\n\n    switch (type) {\n      case 'json':\n        type = 'application/json';\n        break;\n\n      case 'form':\n      case 'urlencoded':\n        type = 'application/x-www-form-urlencoded;charset=UTF-8';\n        break;\n\n      case 'multipart':\n        type = 'multipart/form-data';\n        break;\n    }\n\n    headers['content-type'] = type;\n    return _this2;\n  };\n\n  this.getform = function (url, data) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    opts.data = data;\n    return _this2.send(url, (0, _extends3['default'])({}, opts, {\n      method: 'GET',\n      headers: (0, _extends3['default'])({}, _this2._options.headers, opts.headers, {\n        'content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      })\n    }));\n  };\n\n  this.postform = function (url, data) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    opts.data = data;\n    return _this2.send(url, (0, _extends3['default'])({}, opts, {\n      method: 'POST',\n      headers: (0, _extends3['default'])({}, _this2._options.headers, opts.headers, {\n        'content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      })\n    }));\n  };\n\n  this.send = function (url) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return new Promise(function (resolve, reject) {\n      if (typeof url !== 'string') {\n        return reject(new _error2['default']('invalid url', 'invalidURL'));\n      }\n\n      var data = opts.data,\n          otherOpts = (0, _objectWithoutProperties3['default'])(opts, ['data']);\n      var options = (0, _extends3['default'])({}, _this2._options, otherOpts);\n      var beforeRequest = options.beforeRequest,\n          afterResponse = options.afterResponse,\n          errorHandle = options.errorHandle,\n          responseType = options.responseType,\n          prefix = options.prefix,\n          headers = options.headers,\n          withHeaders = options.withHeaders,\n          timeout = options.timeout,\n          fetchOpts = (0, _objectWithoutProperties3['default'])(options, ['beforeRequest', 'afterResponse', 'errorHandle', 'responseType', 'prefix', 'headers', 'withHeaders', 'timeout']);\n      /*******************\r\n       * format header\r\n       *******************/\n\n      var __headersFun__ = headers.__headersFun__,\n          realheaders = (0, _objectWithoutProperties3['default'])(headers, ['__headersFun__']);\n      var newheaders = (0, _extends3['default'])({}, realheaders);\n\n      if ((0, _utils.isFunction)(withHeaders)) {\n        var _newheaders = withHeaders();\n\n        if (_newheaders && (0, _utils.isObject)(_newheaders)) {\n          newheaders = (0, _extends3['default'])({}, newheaders, _newheaders);\n        }\n      } else if ((0, _utils.isObject)(withHeaders)) {\n        newheaders = (0, _extends3['default'])({}, newheaders, withHeaders);\n      }\n\n      if (__headersFun__) {\n        var _newheaders2 = __headersFun__();\n\n        if (_newheaders2 && (0, _utils.isObject)(_newheaders2)) {\n          newheaders = (0, _extends3['default'])({}, newheaders, _newheaders2);\n        }\n      }\n\n      fetchOpts.headers = newheaders;\n      /***********************\r\n       * format data to body\r\n       ***********************/\n\n      var contentType = newheaders['content-type'];\n      fetchOpts.body = data; // if FormData\n\n      if (contentType.indexOf('multipart/form-data') !== -1 || data instanceof FormData) {\n        if (data instanceof FormData) {\n          fetchOpts.body = data;\n        } else if ((0, _utils.isObject)(data)) {\n          fetchOpts.body = new FormData();\n\n          for (var k in data) {\n            fetchOpts.body.append(k, data[k]);\n          }\n        } // If it is FormData, content-type: 'multipart/form-data' is deleted,\n        // otherwise the boundary will not be added automatically\n\n\n        delete fetchOpts.headers['content-type'];\n      } // if json\n      else if (contentType.indexOf('application/json') !== -1) {\n          fetchOpts.body = JSON.stringify(fetchOpts.body);\n        } // if form\n        else if (contentType.indexOf('application/x-www-form-urlencoded') !== -1) {\n            fetchOpts.body = (0, _utils.param)(fetchOpts.body);\n          } // if 'GET' request, join _body of url queryString\n\n\n      if (fetchOpts.method.toUpperCase() === 'GET' && data) {\n        if (url.indexOf('?') >= 0) {\n          url += '&' + (0, _utils.param)(data);\n        } else {\n          url += '?' + (0, _utils.param)(data);\n        }\n\n        delete fetchOpts.body;\n      }\n      /*******************\r\n       * format url\r\n       *******************/\n\n\n      var nextURL = prefix + url;\n\n      if (/^(http|https|ftp)\\:\\/\\//.test(url)) {\n        nextURL = url;\n      }\n\n      if ((0, _utils.isFunction)(beforeRequest) && beforeRequest(nextURL, fetchOpts) === false) {\n        return reject(new _error2['default']('request canceled by beforeRequest', 'requestCanceled'));\n      }\n\n      return _this2.__timeoutFetch(nextURL, fetchOpts, options).then(function (resp) {\n        return _this2.__checkStatus(resp);\n      }).then(function (resp) {\n        return _this2.__parseResponse(resp, responseType);\n      }).then(function (resp) {\n        return _this2.__afterResponse(resp, afterResponse, (0, _extends3['default'])({\n          prefix: prefix,\n          url: url\n        }, fetchOpts));\n      }).then(function (response) {\n        return resolve(response);\n      })['catch'](function (e) {\n        return _this2.__errorHandle(e, errorHandle, reject, (0, _extends3['default'])({\n          prefix: prefix,\n          url: url\n        }, fetchOpts));\n      });\n    });\n  };\n};\n\nexports['default'] = Request;","map":null,"metadata":{},"sourceType":"script"}