{"ast":null,"code":"import \"antd/lib/pagination/style\";\nimport _Pagination from \"antd/lib/pagination\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/DataTable/DataTable.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport objectAssign from 'object-assign';\nimport isEqual from 'react-fast-compare';\nimport { EditableCell } from './Editable';\nimport $$ from 'cmn-utils';\nimport cx from 'classnames';\nimport './style/index.less';\n/**\n * 数据表格\n */\n\nvar DataTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataTable, _Component);\n\n  function DataTable(props) {\n    var _this;\n\n    _classCallCheck(this, DataTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataTable).call(this, props));\n\n    _this.tableOnRow = function (record, index) {\n      var selectType = _this.props.selectType;\n      var keys = selectType === 'radio' ? [] : _this.state.selectedRowKeys || [];\n      var rows = selectType === 'radio' ? [] : _this.state.selectedRows || [];\n      var i = keys.indexOf(record[_this._rowKey]);\n\n      if (i !== -1) {\n        keys.splice(i, 1);\n        rows.splice(i, 1);\n      } else {\n        keys.push(record[_this._rowKey]);\n        rows.push(record);\n      }\n\n      _this.onSelectChange(keys, rows);\n    };\n\n    _this.onSelectChange = function (selectedRowKeys, selectedRows) {\n      // 使用keys重新过滤一遍rows以key为准，解决keys与rows不同步问题\n      // 并在每一行加一个rowKey字段\n      selectedRows = selectedRows.filter(function (item) {\n        return selectedRowKeys.indexOf(item[_this._rowKey]) !== -1;\n      });\n\n      _this.setState({\n        selectedRowKeys: selectedRowKeys,\n        selectedRows: selectedRows\n      }, function () {\n        _this.props.onSelect && _this.props.onSelect(selectedRowKeys, selectedRows);\n      });\n    };\n\n    _this.handleTableChange = function (pagination, filters, sorter) {\n      var pageNum = pagination.current || pagination;\n      var sortMap = sorter.field ? _defineProperty({}, sorter.field, sorter.order === 'ascend' ? 'asc' : 'desc') : sorter;\n      _this.props.onChange && _this.props.onChange({\n        pageNum: pageNum,\n        filters: filters,\n        sorter: sortMap\n      });\n    };\n\n    _this.onShowSizeChange = function (pageNum, pageSize) {\n      _this.props.onChange && _this.props.onChange({\n        pageNum: pageNum,\n        pageSize: pageSize\n      });\n    };\n\n    _this.state = {\n      selectedRowKeys: props.selectedRowKeys,\n      selectedRows: _this.getSelectedRows(props.selectedRowKeys),\n      tableHeight: null\n    };\n    return _this;\n  } // 将值转成对像数组\n\n\n  _createClass(DataTable, [{\n    key: \"getSelectedRows\",\n    value: function getSelectedRows(value) {\n      var oldValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var rowKey = this.props.rowKey;\n\n      if (value) {\n        return value.map(function (item) {\n          var oldv = oldValue.filter(function (jtem) {\n            return jtem[rowKey] === item;\n          })[0];\n          return typeof item === 'object' ? item : oldv || _defineProperty({}, rowKey, item);\n        });\n      }\n\n      return [];\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var selectedRows = this.state.selectedRows;\n      var newState = {};\n\n      if (!isEqual(this.props.selectedRowKeys, nextProps.selectedRowKeys)) {\n        newState.selectedRowKeys = nextProps.selectedRowKeys;\n        newState.selectedRows = this.getSelectedRows(nextProps.selectedRowKeys, selectedRows);\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          prefixCls = _this$props.prefixCls,\n          className = _this$props.className,\n          columns = _this$props.columns,\n          dataItems = _this$props.dataItems,\n          showNum = _this$props.showNum,\n          alternateColor = _this$props.alternateColor,\n          onChange = _this$props.onChange,\n          selectType = _this$props.selectType,\n          rowSelection = _this$props.rowSelection,\n          isScroll = _this$props.isScroll,\n          pagination = _this$props.pagination,\n          rowKey = _this$props.rowKey,\n          otherProps = _objectWithoutProperties(_this$props, [\"prefixCls\", \"className\", \"columns\", \"dataItems\", \"showNum\", \"alternateColor\", \"onChange\", \"selectType\", \"rowSelection\", \"isScroll\", \"pagination\", \"rowKey\"]);\n\n      var classname = cx(prefixCls, className, {\n        'table-row-alternate-color': alternateColor\n      });\n      var colRowKey = ''; // 默认宽度\n\n      var cols = columns.filter(function (col) {\n        if (col.primary) colRowKey = col.name;\n\n        if (col.tableItem) {\n          return true;\n        } else {\n          return false;\n        }\n      }).map(function (col) {\n        var item = col.tableItem; // select 字典加强\n\n        if (col.dict && !item.render) {\n          item.render = function (text, record) {\n            return col.dict && col.dict.filter(function (dic) {\n              return dic.code === text;\n            }).map(function (dic) {\n              return dic.codeName;\n            })[0];\n          };\n        } // 如果指定了type字段，则使用指定类型渲染这个列\n\n\n        var myRender = item.render;\n\n        if (item.type) {\n          item.render = function (text, record, index) {\n            if ($$.isFunction(item.editing) && item.editing(text, record)) {\n              return React.createElement(EditableCell, {\n                text: text,\n                record: record,\n                index: index,\n                field: col,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 202\n                },\n                __self: this\n              });\n            } else {\n              return $$.isFunction(myRender) ? myRender(text, record, index) : text;\n            }\n          };\n        }\n\n        return _objectSpread({\n          title: col.title,\n          dataIndex: col.name\n        }, item);\n      }) // 保存rowkey在record\n      .concat({\n        dataIndex: '_rowkey',\n        width: 0,\n        render: function render(text, record, index) {\n          record.rowKey = record[rowKey || colRowKey];\n          return React.createElement(\"div\", {\n            style: {\n              display: 'none'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }, record.rowKey);\n        }\n      }); // 显示行号\n\n      if (showNum) {\n        cols.unshift({\n          title: '序号',\n          width: 50,\n          dataIndex: '_num',\n          render: function render(text, record, index) {\n            var pageNum = dataItems.pageNum,\n                pageSize = dataItems.pageSize;\n\n            if (pageNum && pageSize) {\n              return (pageNum - 1) * pageSize + index + 1;\n            } else {\n              // 没有分页\n              return index + 1;\n            }\n          }\n        });\n      } // 分页\n\n\n      var paging = objectAssign({\n        total: dataItems.total,\n        pageSize: dataItems.pageSize,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        showTotal: function showTotal(total) {\n          return \"\\u5171 \".concat(total, \" \\u6761\");\n        },\n        onShowSizeChange: this.onShowSizeChange\n      }, dataItems.pageNum && {\n        current: dataItems.pageNum\n      }, pagination);\n\n      var _rowSelection = _objectSpread({\n        type: selectType === 'radio' ? 'radio' : 'checkbox',\n        selectedRowKeys: this.state.selectedRowKeys,\n        onChange: this.onSelectChange\n      }, rowSelection);\n\n      this._rowKey = rowKey || colRowKey;\n      return React.createElement(\"div\", {\n        className: classname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(_Table, Object.assign({\n        size: \"small\",\n        rowSelection: selectType ? _rowSelection : null,\n        onRow: selectType ? function (record, index) {\n          return {\n            onClick: function onClick(_) {\n              return _this2.tableOnRow(record, index);\n            }\n          };\n        } : function () {},\n        scroll: isScroll ? objectAssign({\n          x: true\n        }) : {},\n        bodyStyle: {\n          overflowX: 'auto'\n        },\n        columns: cols,\n        pagination: pagination ? paging : false,\n        dataSource: dataItems.list,\n        onChange: this.handleTableChange,\n        rowKey: this._rowKey\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DataTable;\n}(Component);\n/**\n * 操作区 阻止向上冒泡\n */\n\n\nDataTable.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  rowKey: PropTypes.string,\n\n  /**\n   * 详见帮助文档 column.js 用法\n   */\n  columns: PropTypes.array.isRequired,\n\n  /**\n   * 数据对像list为必需,如需表格自带分页需要在此提供分页信息 {pageNum:1, list:[], filters:{}, pageSize:10, total:12}\n   */\n  dataItems: PropTypes.object.isRequired,\n\n  /**\n   * 是否显示行序号\n   */\n  showNum: PropTypes.bool,\n\n  /**\n   * 是否奇偶行不同颜色\n   */\n  alternateColor: PropTypes.bool,\n\n  /**\n   * 多选/单选，checkbox 或 radio\n   */\n  selectType: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n\n  /**\n   * 选择功能的配置 参考antd的rowSelection配置项\n   */\n  rowSelection: PropTypes.object,\n\n  /**\n   * 指定选中项的 key 数组\n   */\n  selectedRowKeys: PropTypes.array,\n\n  /**\n   * 是否带滚动条\n   */\n  isScroll: PropTypes.bool,\n\n  /**\n   * 是否增加表格内分页\n   */\n  pagination: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n\n  /**\n   * 选中表格行回调 function(selectedRowKeys, selectedRows)\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * 外部获取数据接口 {pageNum:1, filters:{}, pageSize:10}\n   */\n  onChange: PropTypes.func\n};\nDataTable.defaultProps = {\n  prefixCls: 'antui-datatable',\n  alternateColor: true\n};\nexport var Oper = function Oper(prop) {\n  return React.createElement(\"div\", {\n    className: \"table-row-button\",\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, prop.children);\n};\nexport var Tip = function Tip(prop) {\n  return React.createElement(_Tooltip, {\n    placement: \"topLeft\",\n    title: prop.children,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"nobr\",\n    style: prop.style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, prop.children));\n};\nexport var Paging = function Paging(_ref3) {\n  var dataItems = _ref3.dataItems,\n      _onChange = _ref3.onChange,\n      otherProps = _objectWithoutProperties(_ref3, [\"dataItems\", \"onChange\"]);\n\n  var total = dataItems.total,\n      pageSize = dataItems.pageSize,\n      pageNum = dataItems.pageNum;\n\n  var paging = _objectSpread({\n    total: total,\n    pageSize: pageSize,\n    current: pageNum,\n    showSizeChanger: true,\n    showQuickJumper: true,\n    showTotal: function showTotal(total) {\n      return \"\\u5171 \".concat(total, \" \\u6761\");\n    },\n    onShowSizeChange: function onShowSizeChange(pageNum, pageSize) {\n      return _onChange({\n        pageNum: pageNum,\n        pageSize: pageSize\n      });\n    },\n    onChange: function onChange(pageNum) {\n      return _onChange({\n        pageNum: pageNum\n      });\n    }\n  }, otherProps);\n\n  return React.createElement(_Pagination, Object.assign({}, paging, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }));\n};\nDataTable.Oper = Oper;\nDataTable.Pagination = Paging;\nDataTable.Tip = Tip;\nexport default DataTable;","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/DataTable/DataTable.js"],"names":["React","Component","PropTypes","objectAssign","isEqual","EditableCell","$$","cx","DataTable","props","tableOnRow","record","index","selectType","keys","state","selectedRowKeys","rows","selectedRows","i","indexOf","_rowKey","splice","push","onSelectChange","filter","item","setState","onSelect","handleTableChange","pagination","filters","sorter","pageNum","current","sortMap","field","order","onChange","onShowSizeChange","pageSize","getSelectedRows","tableHeight","value","oldValue","rowKey","map","oldv","jtem","nextProps","newState","prefixCls","className","columns","dataItems","showNum","alternateColor","rowSelection","isScroll","otherProps","classname","colRowKey","cols","col","primary","name","tableItem","dict","render","text","dic","code","codeName","myRender","type","isFunction","editing","title","dataIndex","concat","width","display","unshift","paging","total","showSizeChanger","showQuickJumper","showTotal","_rowSelection","onClick","_","x","overflowX","list","propTypes","string","array","isRequired","object","bool","oneOfType","func","defaultProps","Oper","prop","e","stopPropagation","children","Tip","style","Paging","Pagination"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Pagination, Tooltip } from 'antd';\nimport objectAssign from 'object-assign';\nimport isEqual from 'react-fast-compare';\nimport { EditableCell } from './Editable';\nimport $$ from 'cmn-utils';\nimport cx from 'classnames';\nimport './style/index.less';\n\n/**\n * 数据表格\n */\nclass DataTable extends Component {\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    rowKey: PropTypes.string,\n    /**\n     * 详见帮助文档 column.js 用法\n     */\n    columns: PropTypes.array.isRequired,\n    /**\n     * 数据对像list为必需,如需表格自带分页需要在此提供分页信息 {pageNum:1, list:[], filters:{}, pageSize:10, total:12}\n     */\n    dataItems: PropTypes.object.isRequired,\n    /**\n     * 是否显示行序号\n     */\n    showNum: PropTypes.bool,\n    /**\n     * 是否奇偶行不同颜色\n     */\n    alternateColor: PropTypes.bool,\n    /**\n     * 多选/单选，checkbox 或 radio\n     */\n    selectType: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    /**\n     * 选择功能的配置 参考antd的rowSelection配置项\n     */\n    rowSelection: PropTypes.object,\n    /**\n     * 指定选中项的 key 数组\n     */\n    selectedRowKeys: PropTypes.array,\n    /**\n     * 是否带滚动条\n     */\n    isScroll: PropTypes.bool,\n    /**\n     * 是否增加表格内分页\n     */\n    pagination: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    /**\n     * 选中表格行回调 function(selectedRowKeys, selectedRows)\n     */\n    onSelect: PropTypes.func,\n    /**\n     * 外部获取数据接口 {pageNum:1, filters:{}, pageSize:10}\n     */\n    onChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    prefixCls: 'antui-datatable',\n    alternateColor: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedRowKeys: props.selectedRowKeys,\n      selectedRows: this.getSelectedRows(props.selectedRowKeys),\n      tableHeight: null\n    };\n  }\n\n  // 将值转成对像数组\n  getSelectedRows(value, oldValue = []) {\n    const { rowKey } = this.props;\n    if (value) {\n      return value.map(item => {\n        const oldv = oldValue.filter(jtem => jtem[rowKey] === item)[0];\n        return typeof item === 'object' ? item : oldv || { [rowKey]: item };\n      });\n    }\n    return [];\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { selectedRows } = this.state;\n    const newState = {};\n    if (!isEqual(this.props.selectedRowKeys, nextProps.selectedRowKeys)) {\n      newState.selectedRowKeys = nextProps.selectedRowKeys;\n      newState.selectedRows = this.getSelectedRows(\n        nextProps.selectedRowKeys,\n        selectedRows\n      );\n      this.setState(newState);\n    }\n  }\n\n  tableOnRow = (record, index) => {\n    const { selectType } = this.props;\n\n    let keys = selectType === 'radio' ? [] : this.state.selectedRowKeys || [];\n    let rows = selectType === 'radio' ? [] : this.state.selectedRows || [];\n\n    let i = keys.indexOf(record[this._rowKey]);\n    if (i !== -1) {\n      keys.splice(i, 1);\n      rows.splice(i, 1);\n    } else {\n      keys.push(record[this._rowKey]);\n      rows.push(record);\n    }\n\n    this.onSelectChange(keys, rows);\n  };\n\n  onSelectChange = (selectedRowKeys, selectedRows) => {\n    // 使用keys重新过滤一遍rows以key为准，解决keys与rows不同步问题\n    // 并在每一行加一个rowKey字段\n    selectedRows = selectedRows.filter(\n      item => selectedRowKeys.indexOf(item[this._rowKey]) !== -1\n    );\n\n    this.setState({ selectedRowKeys, selectedRows }, () => {\n      this.props.onSelect && this.props.onSelect(selectedRowKeys, selectedRows);\n    });\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    let pageNum = pagination.current || pagination;\n\n    let sortMap = sorter.field\n      ? {\n          [sorter.field]: sorter.order === 'ascend' ? 'asc' : 'desc'\n        }\n      : sorter;\n    this.props.onChange &&\n      this.props.onChange({ pageNum, filters, sorter: sortMap });\n  };\n\n  onShowSizeChange = (pageNum, pageSize) => {\n    this.props.onChange && this.props.onChange({ pageNum, pageSize });\n  };\n\n  render() {\n    const {\n      prefixCls,\n      className,\n      columns,\n      dataItems,\n      showNum,\n      alternateColor,\n      onChange,\n      selectType,\n      rowSelection,\n      isScroll,\n      pagination,\n      rowKey,\n      ...otherProps\n    } = this.props;\n\n    let classname = cx(prefixCls, className, {\n      'table-row-alternate-color': alternateColor\n    });\n\n    let colRowKey = '';\n    // 默认宽度\n    let cols = columns\n      .filter(col => {\n        if (col.primary) colRowKey = col.name;\n        if (col.tableItem) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n      .map(col => {\n        let item = col.tableItem;\n        // select 字典加强\n        if (col.dict && !item.render) {\n          item.render = (text, record) => {\n            return (\n              col.dict &&\n              col.dict\n                .filter(dic => dic.code === text)\n                .map(dic => dic.codeName)[0]\n            );\n          };\n        }\n        // 如果指定了type字段，则使用指定类型渲染这个列\n        const myRender = item.render;\n        if (item.type) {\n          item.render = (text, record, index) => {\n            if ($$.isFunction(item.editing) && item.editing(text, record)) {\n              return (\n                <EditableCell\n                  text={text}\n                  record={record}\n                  index={index}\n                  field={col}\n                />\n              );\n            } else {\n              return $$.isFunction(myRender)\n                ? myRender(text, record, index)\n                : text;\n            }\n          };\n        }\n        return {\n          title: col.title,\n          dataIndex: col.name,\n          ...item\n        };\n      })\n      // 保存rowkey在record\n      .concat({\n        dataIndex: '_rowkey',\n        width: 0,\n        render(text, record, index) {\n          record.rowKey = record[rowKey || colRowKey];\n          return <div style={{ display: 'none' }}>{record.rowKey}</div>;\n        }\n      });\n\n    // 显示行号\n    if (showNum) {\n      cols.unshift({\n        title: '序号',\n        width: 50,\n        dataIndex: '_num',\n        render(text, record, index) {\n          const { pageNum, pageSize } = dataItems;\n          if (pageNum && pageSize) {\n            return (pageNum - 1) * pageSize + index + 1;\n          } else {\n            // 没有分页\n            return index + 1;\n          }\n        }\n      });\n    }\n\n    // 分页\n    const paging = objectAssign(\n      {\n        total: dataItems.total,\n        pageSize: dataItems.pageSize,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        showTotal: total => `共 ${total} 条`,\n        onShowSizeChange: this.onShowSizeChange\n      },\n      dataItems.pageNum && { current: dataItems.pageNum },\n      pagination\n    );\n\n    const _rowSelection = {\n      type: selectType === 'radio' ? 'radio' : 'checkbox',\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: this.onSelectChange,\n      ...rowSelection\n    };\n\n    this._rowKey = rowKey || colRowKey;\n\n    return (\n      <div className={classname}>\n        <Table\n          size=\"small\"\n          rowSelection={selectType ? _rowSelection : null}\n          onRow={\n            selectType\n              ? (record, index) => ({\n                  onClick: _ => this.tableOnRow(record, index)\n                })\n              : () => {}\n          }\n          scroll={isScroll ? objectAssign({ x: true }) : {}}\n          bodyStyle={{ overflowX: 'auto' }}\n          columns={cols}\n          pagination={pagination ? paging : false}\n          dataSource={dataItems.list}\n          onChange={this.handleTableChange}\n          rowKey={this._rowKey}\n          {...otherProps}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * 操作区 阻止向上冒泡\n */\nexport const Oper = prop => (\n  <div className=\"table-row-button\" onClick={e => e.stopPropagation()}>\n    {prop.children}\n  </div>\n);\n\nexport const Tip = prop => (\n  <Tooltip placement=\"topLeft\" title={prop.children}>\n    <div className=\"nobr\" style={prop.style}>\n      {prop.children}\n    </div>\n  </Tooltip>\n);\n\nexport const Paging = ({ dataItems, onChange, ...otherProps }) => {\n  const { total, pageSize, pageNum } = dataItems;\n  const paging = {\n    total: total,\n    pageSize: pageSize,\n    current: pageNum,\n    showSizeChanger: true,\n    showQuickJumper: true,\n    showTotal: total => `共 ${total} 条`,\n    onShowSizeChange: (pageNum, pageSize) => onChange({ pageNum, pageSize }),\n    onChange: pageNum => onChange({ pageNum }),\n    ...otherProps\n  };\n  return <Pagination {...paging} />;\n};\n\nDataTable.Oper = Oper;\nDataTable.Pagination = Paging;\nDataTable.Tip = Tip;\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}