{"ast":null,"code":"import _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport _objectWithoutProperties from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/SearchBar/SearchBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport $$ from 'cmn-utils';\nimport './style/index.less';\nvar createForm = _Form.create;\n\nvar PlainComp = function PlainComp(_ref) {\n  var className = _ref.className,\n      children = _ref.children;\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, children);\n};\n\nPlainComp.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n};\n/**\n * 搜索条\n */\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  function SearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.cols = {\n      xs: 8,\n      md: 6,\n      xl: 4\n    };\n    _this.width = {\n      date: 100,\n      month: 100,\n      'date~': 280,\n      datetime: 140,\n      select: 100,\n      default: 110,\n      treeSelect: 110,\n      cascade: 110,\n      cascader: 110\n    };\n    _this.rows = {\n      gutter: 8\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"resetForm\",\n    value: function resetForm(e) {\n      this.props.form.resetFields();\n      this.searchForm(true);\n    }\n  }, {\n    key: \"searchForm\",\n    value: function searchForm(isReset) {\n      var _this2 = this;\n\n      this.props.form.validateFields(function (errors, values) {\n        if (errors) {\n          var errs = [];\n          Object.keys(errors).forEach(function (fieldName) {\n            errs = errors[fieldName].errors || [];\n          });\n          if (errs && errs.length) _message.error(errs[0].message);\n          return;\n        }\n\n        _this2.props.onSearch && _this2.props.onSearch(values, isReset);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          prefixCls = _this$props.prefixCls,\n          type = _this$props.type,\n          rows = _this$props.rows,\n          cols = _this$props.cols,\n          columns = _this$props.columns,\n          group = _this$props.group,\n          children = _this$props.children,\n          form = _this$props.form,\n          appendTo = _this$props.appendTo,\n          record = _this$props.record,\n          otherProps = _objectWithoutProperties(_this$props, [\"className\", \"prefixCls\", \"type\", \"rows\", \"cols\", \"columns\", \"group\", \"children\", \"form\", \"appendTo\", \"record\"]);\n\n      var colopts = type === 'grid' ? cols || this.cols : {};\n      var rowopts = type === 'grid' ? rows || this.rows : {};\n      var ComponentRow = type === 'inline' ? PlainComp : _Row;\n      var ComponentCol = type === 'inline' ? PlainComp : _Col;\n      var ComponentItem = type === 'inline' ? PlainComp : _Form.Item;\n      var formItemLayout = type === 'grid' ? {\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        }\n      } : {};\n      var ComponentBtnGroup = type === 'inline' ? _Button.Group : PlainComp;\n      var searchFields = columns.filter(function (col) {\n        return col.searchItem;\n      });\n      searchFields = group ? searchFields.filter(function (col) {\n        return col.searchItem && col.searchItem.group === group;\n      }) : searchFields;\n      if (!searchFields.length) return null;\n      delete otherProps.onSearch;\n      var getPopupContainer = null;\n\n      if (appendTo) {\n        if ($$.isFunction(appendTo)) getPopupContainer = appendTo;else if (appendTo === true) getPopupContainer = function getPopupContainer(triggerNode) {\n          return triggerNode.parentNode;\n        };else getPopupContainer = function getPopupContainer(_) {\n          return appendTo;\n        };\n      }\n\n      return React.createElement(\"div\", Object.assign({\n        className: cx(prefixCls, className)\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(_Form, {\n        className: cx({\n          'form-inline': type === 'inline',\n          'form-grid': type === 'grid'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(ComponentRow, Object.assign({\n        className: \"row-item\"\n      }, rowopts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), searchFields.map(function (field, i) {\n        var col = _objectSpread({}, colopts);\n\n        if (type === 'grid' && field.searchItem.col) {\n          col = field.searchItem.col;\n        } else if (type !== 'grid') {\n          col = {};\n        }\n\n        var fieldType = field.searchItem.type || 'input';\n\n        var formProps = _objectSpread({\n          form: form,\n          name: field.name,\n          title: field.title,\n          record: record\n        }, field.searchItem);\n\n        if (type === 'inline') {\n          formProps.style = {\n            width: formProps.width || _this3.width[fieldType]\n          };\n        }\n\n        if (getPopupContainer) {\n          formProps.getPopupContainer = getPopupContainer;\n        }\n\n        if (field.dict) {\n          formProps.dict = field.dict;\n        }\n\n        var FieldComp;\n\n        switch (fieldType) {\n          case 'date~': // 日期范围\n\n          case 'datetime': // 日期时间\n\n          case 'date': // 日期\n\n          case 'month': // 月\n\n          case 'time':\n            // 时间\n            FieldComp = require(\"../Form/model/date\").default(formProps);\n            break;\n\n          case 'input': // 输入框\n\n          case 'textarea':\n            // 多行文本\n            formProps.formFieldOptions = {\n              rules: [{\n                pattern: /^[^'%&<>=?*!]*$/,\n                message: '查询条件中不能包含特殊字符'\n              }]\n            };\n            formProps.maxLength = field.searchItem.maxLength || 100;\n            formProps.autoComplete = 'off';\n            FieldComp = require(\"../Form/model/input\").default(formProps);\n            break;\n\n          case 'hidden':\n            // 隐藏域\n            return React.createElement(\"span\", {\n              key: \"col-\".concat(i),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 234\n              },\n              __self: this\n            }, require(\"../Form/model/input\").default(formProps));\n\n          case 'select':\n            formProps.optionFilterProp = 'children';\n          // eslint-disable-next-line no-fallthrough\n\n          case 'treeSelect':\n          case 'cascade':\n            formProps.allowClear = true;\n            formProps.showSearch = true;\n          // eslint-disable-next-line no-fallthrough\n\n          default:\n            // 通用\n            FieldComp = require(\"../Form/model/\".concat(fieldType.toLowerCase())).default(formProps);\n        }\n\n        return React.createElement(ComponentCol, Object.assign({\n          key: \"col-\".concat(i),\n          className: \"col-item\"\n        }, col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }), React.createElement(ComponentItem, Object.assign({}, formItemLayout, {\n          label: field.title,\n          className: \"col-item-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }), FieldComp));\n      }), children), React.createElement(ComponentBtnGroup, {\n        className: \"search-btns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        title: \"\\u67E5\\u8BE2\",\n        type: type === 'grid' ? 'primary' : 'default',\n        onClick: function onClick(e) {\n          return _this3.searchForm();\n        },\n        htmlType: \"submit\",\n        icon: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"\\u67E5\\u8BE2\"), React.createElement(_Button, {\n        title: \"\\u91CD\\u7F6E\",\n        onClick: function onClick(e) {\n          return _this3.resetForm();\n        },\n        icon: \"reload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"\\u91CD\\u7F6E\"))));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nSearchBar.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n\n  /**\n   * 详见帮助文档 column.js 用法\n   */\n  columns: PropTypes.array.isRequired,\n\n  /**\n   * 使用record的数据对表单进行赋值 {key:value, key1: value1}, 时间类型初始值需转成moment类型\n   */\n  record: PropTypes.object,\n\n  /**\n   * 搜索条类型 inline(行内)，grid(栅格)\n   */\n  type: PropTypes.string,\n\n  /**\n   * 搜索条件分组，设置这个属性后，会在column.js中过滤有相同group值的搜索项\n   */\n  group: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * 同antd中Grid组件中的Row配置\n   */\n  rows: PropTypes.object,\n\n  /**\n   * 同antd中Grid组件中的Col配置\n   */\n  cols: PropTypes.object,\n\n  /**\n   * 额外搜索项\n   */\n  children: PropTypes.node,\n\n  /**\n   * 如何处理表单里带弹出框的项，比如下拉框，下拉树，日期选择等\n   * 设置为true会自动依附到form上，或用function自已指定\n   * 用法见antd带弹窗组件的getPopupContainer属性http://ant-design.gitee.io/components/select-cn/\n   * appendTo={triggerNode => triggerNode.parentNode}\n   */\n  appendTo: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  form: PropTypes.object,\n\n  /**\n   * 点击查询按钮 onSearch(values, isReset) values 查询数据 isReset 是否是重置\n   */\n  onSearch: PropTypes.func\n};\nSearchBar.defaultProps = {\n  prefixCls: 'antui-searchbar',\n  type: 'inline'\n};\nexport default createForm()(SearchBar);","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/SearchBar/SearchBar.js"],"names":["React","PropTypes","cx","$$","createForm","create","PlainComp","className","children","propTypes","string","node","SearchBar","cols","xs","md","xl","width","date","month","datetime","select","default","treeSelect","cascade","cascader","rows","gutter","e","props","form","resetFields","searchForm","isReset","validateFields","errors","values","errs","Object","keys","forEach","fieldName","length","error","message","onSearch","prefixCls","type","columns","group","appendTo","record","otherProps","colopts","rowopts","ComponentRow","ComponentCol","ComponentItem","Item","formItemLayout","labelCol","span","wrapperCol","ComponentBtnGroup","Group","searchFields","filter","col","searchItem","getPopupContainer","isFunction","triggerNode","parentNode","_","map","field","i","fieldType","formProps","name","title","style","dict","FieldComp","require","formFieldOptions","rules","pattern","maxLength","autoComplete","optionFilterProp","allowClear","showSearch","toLowerCase","resetForm","Component","array","isRequired","object","oneOfType","number","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Row, Col, Button, message } from 'antd';\nimport cx from 'classnames';\nimport $$ from 'cmn-utils';\nimport './style/index.less';\nconst createForm = Form.create;\n\nconst PlainComp = ({ className, children }) => (\n  <div className={className}>{children}</div>\n);\nPlainComp.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n};\n/**\n * 搜索条\n */\nclass SearchBar extends React.Component {\n  static propTypes = {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    /**\n     * 详见帮助文档 column.js 用法\n     */\n    columns: PropTypes.array.isRequired,\n    /**\n     * 使用record的数据对表单进行赋值 {key:value, key1: value1}, 时间类型初始值需转成moment类型\n     */\n    record: PropTypes.object,\n    /**\n     * 搜索条类型 inline(行内)，grid(栅格)\n     */\n    type: PropTypes.string,\n    /**\n     * 搜索条件分组，设置这个属性后，会在column.js中过滤有相同group值的搜索项\n     */\n    group: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /**\n     * 同antd中Grid组件中的Row配置\n     */\n    rows: PropTypes.object,\n    /**\n     * 同antd中Grid组件中的Col配置\n     */\n    cols: PropTypes.object,\n    /**\n     * 额外搜索项\n     */\n    children: PropTypes.node,\n    /**\n     * 如何处理表单里带弹出框的项，比如下拉框，下拉树，日期选择等\n     * 设置为true会自动依附到form上，或用function自已指定\n     * 用法见antd带弹窗组件的getPopupContainer属性http://ant-design.gitee.io/components/select-cn/\n     * appendTo={triggerNode => triggerNode.parentNode}\n     */\n    appendTo: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n    form: PropTypes.object,\n\n    /**\n     * 点击查询按钮 onSearch(values, isReset) values 查询数据 isReset 是否是重置\n     */\n    onSearch: PropTypes.func\n  };\n\n  static defaultProps = {\n    prefixCls: 'antui-searchbar',\n    type: 'inline'\n  };\n\n  // 当type为grid时，指定每行元素个数\n  cols = {\n    xs: 8,\n    md: 6,\n    xl: 4\n  };\n\n  // 内联元素默认宽\n  width = {\n    date: 100,\n    month: 100,\n    'date~': 280,\n    datetime: 140,\n    select: 100,\n    default: 110,\n    treeSelect: 110,\n    cascade: 110,\n    cascader: 110\n  };\n\n  // 当type为grid时，指定每两个元素的间隔\n  rows = {\n    gutter: 8\n  };\n\n  resetForm(e) {\n    this.props.form.resetFields();\n    this.searchForm(true);\n  }\n\n  searchForm(isReset) {\n    this.props.form.validateFields((errors, values) => {\n      if (errors) {\n        let errs = [];\n        Object.keys(errors).forEach(fieldName => {\n          errs = errors[fieldName].errors || [];\n        });\n        if (errs && errs.length) message.error(errs[0].message);\n        return;\n      }\n\n      this.props.onSearch && this.props.onSearch(values, isReset);\n    });\n  }\n\n  render() {\n    const {\n      className,\n      prefixCls,\n      type,\n      rows,\n      cols,\n      columns,\n      group,\n      children,\n      form,\n      appendTo,\n      record,\n      ...otherProps\n    } = this.props;\n\n    const colopts = type === 'grid' ? cols || this.cols : {};\n    const rowopts = type === 'grid' ? rows || this.rows : {};\n\n    let ComponentRow = type === 'inline' ? PlainComp : Row;\n    let ComponentCol = type === 'inline' ? PlainComp : Col;\n    let ComponentItem = type === 'inline' ? PlainComp : Form.Item;\n    const formItemLayout =\n      type === 'grid'\n        ? {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 16 }\n          }\n        : {};\n\n    let ComponentBtnGroup = type === 'inline' ? Button.Group : PlainComp;\n\n    let searchFields = columns.filter(col => col.searchItem);\n    searchFields = group\n      ? searchFields.filter(\n          col => col.searchItem && col.searchItem.group === group\n        )\n      : searchFields;\n\n    if (!searchFields.length) return null;\n\n    delete otherProps.onSearch;\n\n    let getPopupContainer = null;\n    if (appendTo) {\n      if ($$.isFunction(appendTo)) getPopupContainer = appendTo;\n      else if (appendTo === true)\n        getPopupContainer = triggerNode => triggerNode.parentNode;\n      else getPopupContainer = _ => appendTo;\n    }\n\n    return (\n      <div className={cx(prefixCls, className)} {...otherProps}>\n        <Form\n          className={cx({\n            'form-inline': type === 'inline',\n            'form-grid': type === 'grid'\n          })}\n        >\n          <ComponentRow className=\"row-item\" {...rowopts}>\n            {searchFields.map((field, i) => {\n              let col = { ...colopts };\n              if (type === 'grid' && field.searchItem.col) {\n                col = field.searchItem.col;\n              } else if (type !== 'grid') {\n                col = {};\n              }\n\n              const fieldType = field.searchItem.type || 'input';\n\n              const formProps = {\n                form,\n                name: field.name,\n                title: field.title,\n                record,\n                ...field.searchItem\n              };\n\n              if (type === 'inline') {\n                formProps.style = {\n                  width: formProps.width || this.width[fieldType]\n                };\n              }\n\n              if (getPopupContainer) {\n                formProps.getPopupContainer = getPopupContainer;\n              }\n\n              if (field.dict) {\n                formProps.dict = field.dict;\n              }\n\n              let FieldComp;\n              switch (fieldType) {\n                case 'date~': // 日期范围\n                case 'datetime': // 日期时间\n                case 'date': // 日期\n                case 'month': // 月\n                case 'time': // 时间\n                  FieldComp = require(`../Form/model/date`).default(formProps);\n                  break;\n                case 'input': // 输入框\n                case 'textarea': // 多行文本\n                  formProps.formFieldOptions = {\n                    rules: [\n                      {\n                        pattern: /^[^'%&<>=?*!]*$/,\n                        message: '查询条件中不能包含特殊字符'\n                      }\n                    ]\n                  };\n                  formProps.maxLength = field.searchItem.maxLength || 100;\n                  formProps.autoComplete = 'off';\n                  FieldComp = require(`../Form/model/input`).default(formProps);\n                  break;\n                case 'hidden': // 隐藏域\n                  return (\n                    <span key={`col-${i}`}>\n                      {require(`../Form/model/input`).default(formProps)}\n                    </span>\n                  );\n                case 'select':\n                  formProps.optionFilterProp = 'children';\n                // eslint-disable-next-line no-fallthrough\n                case 'treeSelect':\n                case 'cascade':\n                  formProps.allowClear = true;\n                  formProps.showSearch = true;\n                // eslint-disable-next-line no-fallthrough\n                default:\n                  // 通用\n                  FieldComp = require(`../Form/model/${fieldType.toLowerCase()}`).default(\n                    formProps\n                  );\n              }\n\n              return (\n                <ComponentCol key={`col-${i}`} className=\"col-item\" {...col}>\n                  <ComponentItem\n                    {...formItemLayout}\n                    label={field.title}\n                    className=\"col-item-content\"\n                  >\n                    {FieldComp}\n                  </ComponentItem>\n                </ComponentCol>\n              );\n            })}\n            {children}\n          </ComponentRow>\n          <ComponentBtnGroup className=\"search-btns\">\n            <Button\n              title=\"查询\"\n              type={type === 'grid' ? 'primary' : 'default'}\n              onClick={e => this.searchForm()}\n              htmlType=\"submit\"\n              icon=\"search\"\n            >\n              查询\n            </Button>\n            <Button title=\"重置\" onClick={e => this.resetForm()} icon=\"reload\">\n              重置\n            </Button>\n          </ComponentBtnGroup>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default createForm()(SearchBar);\n"]},"metadata":{},"sourceType":"module"}