{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectSpread from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evan/progressMan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evan/progressMan/src/components/Modal/ModalTable.js\";\nimport React, { Component } from 'react';\nimport cx from 'classnames';\nimport DataTable from '../DataTable';\nimport isEqual from 'react-fast-compare';\nimport SearchBar from '../SearchBar';\nimport './style/index.less';\nvar Pagination = DataTable.Pagination;\n\nvar ModalTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalTable, _Component);\n\n  function ModalTable(props) {\n    var _this;\n\n    _classCallCheck(this, ModalTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalTable).call(this, props));\n\n    _this.onSelect = function (keys, rows) {\n      _this.setState({\n        value: keys,\n        selectedRows: rows\n      });\n    };\n\n    _this.onSearch = function (values, isReset) {\n      var dataItems = _this.state.dataItems;\n\n      _this.onChange({\n        pageNum: 1,\n        pageSize: dataItems.pageSize,\n        filters: values\n      });\n    };\n\n    _this.closeModal = function () {\n      if (_this.props.onCancel) {\n        _this.props.onCancel();\n\n        return;\n      }\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.onOk = function () {\n      var _this$state = _this.state,\n          value = _this$state.value,\n          selectedRows = _this$state.selectedRows;\n      var onSubmit = _this.props.onSubmit;\n\n      if (onSubmit) {\n        onSubmit(value, selectedRows);\n      }\n    };\n\n    var _value = props.value,\n        _dataItems = props.dataItems,\n        visible = props.visible,\n        loading = props.loading;\n    _this.state = {\n      value: _value,\n      dataItems: _dataItems,\n      visible: visible,\n      loading: loading,\n      selectedRows: []\n    };\n    return _this;\n  }\n\n  _createClass(ModalTable, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          dataItems = _this$props.dataItems,\n          visible = _this$props.visible;\n\n      if (visible) {\n        this.onChange({\n          pageNum: 1,\n          pageSize: dataItems.pageSize,\n          filters: dataItems.filters\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var dataItems = nextProps.dataItems,\n          value = nextProps.value,\n          visible = nextProps.visible,\n          loading = nextProps.loading;\n\n      if (!isEqual(this.props.dataItems, dataItems) || !isEqual(this.props.value, value) || !isEqual(this.props.loading, loading)) {\n        this.setState({\n          dataItems: dataItems,\n          value: value,\n          loading: loading\n        });\n      }\n\n      if ('visible' in nextProps) {\n        this.setState({\n          visible: visible\n        });\n\n        if (visible) {\n          this.onChange({\n            pageNum: 1,\n            pageSize: dataItems.pageSize,\n            filters: dataItems.filters\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function () {\n      var _onChange = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var pageNum, pageSize, filters, loadData, dataItems;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                pageNum = _ref.pageNum, pageSize = _ref.pageSize, filters = _ref.filters;\n                loadData = this.props.loadData;\n\n                if (!loadData) {\n                  _context.next = 8;\n                  break;\n                }\n\n                this.setState({\n                  loading: true\n                });\n                _context.next = 6;\n                return loadData({\n                  pageNum: pageNum,\n                  pageSize: pageSize,\n                  filters: filters\n                });\n\n              case 6:\n                dataItems = _context.sent;\n                this.setState({\n                  loading: false,\n                  dataItems: dataItems || this.props.dataItems\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onChange(_x) {\n        return _onChange.apply(this, arguments);\n      }\n\n      return onChange;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          className = _this$props2.className,\n          columns = _this$props2.columns,\n          modalOpts = _this$props2.modalOpts,\n          rowKey = _this$props2.rowKey,\n          full = _this$props2.full,\n          width = _this$props2.width,\n          selectType = _this$props2.selectType,\n          onCancel = _this$props2.onCancel,\n          onSubmit = _this$props2.onSubmit;\n      var _this$state2 = this.state,\n          dataItems = _this$state2.dataItems,\n          value = _this$state2.value,\n          loading = _this$state2.loading,\n          visible = _this$state2.visible;\n      var classname = cx(className, 'antui-table-modal', 'antui-modalform', {\n        'full-modal': full\n      });\n      var dataTableProps = {\n        loading: loading,\n        columns: columns,\n        rowKey: rowKey,\n        dataItems: dataItems,\n        selectedRowKeys: value,\n        selectType: selectType,\n        showNum: true,\n        isScroll: true,\n        onChange: function onChange(_ref2) {\n          var pageNum = _ref2.pageNum,\n              pageSize = _ref2.pageSize;\n          return _this2.onChange({\n            pageNum: pageNum,\n            pageSize: pageSize\n          });\n        },\n        onSelect: function onSelect(keys, rows) {\n          return _this2.onSelect(keys, rows);\n        }\n      };\n      var searchBarProps = {\n        columns: columns,\n        onSearch: this.onSearch\n      };\n      var comp = React.createElement(DataTable, Object.assign({}, dataTableProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }));\n      var titleComp = React.createElement(\"div\", {\n        className: \"with-search-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, title), React.createElement(SearchBar, Object.assign({}, searchBarProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })));\n\n      var modalProps = _objectSpread({\n        className: classname,\n        confirmLoading: loading,\n        visible: visible,\n        width: width || 600,\n        style: {\n          top: 20\n        },\n        title: titleComp,\n        destroyOnClose: true,\n        onCancel: this.closeModal,\n        onOk: this.onOk,\n        footer: [React.createElement(Pagination, Object.assign({\n          key: \"paging\",\n          size: \"small\",\n          showSizeChanger: false,\n          showQuickJumper: false\n        }, dataTableProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        })), onCancel && React.createElement(_Button, {\n          key: \"back\",\n          onClick: this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \"\\u53D6\\u6D88\"), onSubmit && React.createElement(_Button, {\n          key: \"submit\",\n          type: \"primary\",\n          onClick: this.onOk,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"\\u786E\\u5B9A\")]\n      }, modalOpts);\n\n      return React.createElement(_Modal, Object.assign({}, modalProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), comp);\n    }\n  }]);\n\n  return ModalTable;\n}(Component);\n\nexport default ModalTable;","map":{"version":3,"sources":["/Users/evan/progressMan/src/components/Modal/ModalTable.js"],"names":["React","Component","cx","DataTable","isEqual","SearchBar","Pagination","ModalTable","props","onSelect","keys","rows","setState","value","selectedRows","onSearch","values","isReset","dataItems","state","onChange","pageNum","pageSize","filters","closeModal","onCancel","visible","onOk","onSubmit","loading","nextProps","loadData","title","className","columns","modalOpts","rowKey","full","width","selectType","classname","dataTableProps","selectedRowKeys","showNum","isScroll","searchBarProps","comp","titleComp","modalProps","confirmLoading","style","top","destroyOnClose","footer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button } from 'antd';\nimport cx from 'classnames';\nimport DataTable from '../DataTable';\nimport isEqual from 'react-fast-compare';\nimport SearchBar from '../SearchBar';\nimport './style/index.less';\nconst Pagination = DataTable.Pagination;\n\nclass ModalTable extends Component {\n  constructor(props) {\n    super(props);\n    const { value, dataItems, visible, loading } = props;\n    this.state = {\n      value,\n      dataItems,\n      visible,\n      loading,\n      selectedRows: [],\n    };\n  }\n\n  componentWillMount() {\n    const { dataItems, visible } = this.props;\n\n    if (visible) {\n      this.onChange({\n        pageNum: 1,\n        pageSize: dataItems.pageSize,\n        filters: dataItems.filters\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { dataItems, value, visible, loading } = nextProps;\n    if (\n      !isEqual(this.props.dataItems, dataItems) ||\n      !isEqual(this.props.value, value) ||\n      !isEqual(this.props.loading, loading)\n    ) {\n      this.setState({\n        dataItems,\n        value,\n        loading\n      });\n    }\n    if ('visible' in nextProps) {\n      this.setState({\n        visible: visible\n      });\n\n      if (visible) {\n        this.onChange({\n          pageNum: 1,\n          pageSize: dataItems.pageSize,\n          filters: dataItems.filters\n        });\n      }\n    }\n  }\n\n  onSelect = (keys, rows) => {\n    this.setState({ value: keys, selectedRows: rows });\n  };\n\n  onSearch = (values, isReset) => {\n    const { dataItems } = this.state;\n    this.onChange({\n      pageNum: 1,\n      pageSize: dataItems.pageSize,\n      filters: values\n    });\n  };\n\n  async onChange({ pageNum, pageSize, filters }) {\n    const loadData = this.props.loadData;\n\n    if (loadData) {\n      this.setState({\n        loading: true\n      });\n\n      const dataItems = await loadData({ pageNum, pageSize, filters });\n\n      this.setState({\n        loading: false,\n        dataItems: dataItems || this.props.dataItems\n      });\n    }\n  }\n\n  closeModal = () => {\n    if (this.props.onCancel) {\n      this.props.onCancel();\n      return;\n    }\n    this.setState({\n      visible: false\n    });\n  };\n\n  onOk = () => {\n    const { value, selectedRows } = this.state;\n    const onSubmit = this.props.onSubmit;\n    if (onSubmit) {\n      onSubmit(value, selectedRows);\n    }\n  };\n\n  render() {\n    const {\n      title,\n      className,\n      columns,\n      modalOpts,\n      rowKey,\n      full,\n      width,\n      selectType,\n      onCancel,\n      onSubmit\n    } = this.props;\n\n    const { dataItems, value, loading, visible } = this.state;\n\n    const classname = cx(className, 'antui-table-modal', 'antui-modalform', {\n      'full-modal': full\n    });\n\n    const dataTableProps = {\n      loading,\n      columns,\n      rowKey,\n      dataItems,\n      selectedRowKeys: value,\n      selectType: selectType,\n      showNum: true,\n      isScroll: true,\n      onChange: ({ pageNum, pageSize }) => this.onChange({ pageNum, pageSize }),\n      onSelect: (keys, rows) => this.onSelect(keys, rows)\n    };\n\n    const searchBarProps = {\n      columns,\n      onSearch: this.onSearch\n    };\n\n    const comp = <DataTable {...dataTableProps} />;\n\n    const titleComp = (\n      <div className=\"with-search-title\">\n        <div className=\"left-title\">{title}</div>\n        <SearchBar {...searchBarProps} />\n      </div>\n    );\n\n    const modalProps = {\n      className: classname,\n      confirmLoading: loading,\n      visible,\n      width: width || 600,\n      style: { top: 20 },\n      title: titleComp,\n      destroyOnClose: true,\n      onCancel: this.closeModal,\n      onOk: this.onOk,\n      footer: [\n        <Pagination\n          key=\"paging\"\n          size=\"small\"\n          showSizeChanger={false}\n          showQuickJumper={false}\n          {...dataTableProps}\n        />,\n        onCancel && (\n          <Button key=\"back\" onClick={this.closeModal}>\n            取消\n          </Button>\n        ),\n        onSubmit && (\n          <Button key=\"submit\" type=\"primary\" onClick={this.onOk}>\n            确定\n          </Button>\n        )\n      ],\n      ...modalOpts\n    };\n\n    return <Modal {...modalProps}>{comp}</Modal>;\n  }\n}\n\nexport default ModalTable;\n"]},"metadata":{},"sourceType":"module"}