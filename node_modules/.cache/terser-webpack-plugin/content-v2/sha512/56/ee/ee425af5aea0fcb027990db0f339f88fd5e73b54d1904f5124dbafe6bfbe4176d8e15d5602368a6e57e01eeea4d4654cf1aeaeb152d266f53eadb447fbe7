{"map":"{\"version\":3,\"sources\":[\"/Users/evan/progressMan/src/routes/Register/service/index.js\",\"/Users/evan/progressMan/src/routes/Register/model/index.js\"],\"names\":[\"register\",\"_x\",\"_register\",\"apply\",\"this\",\"arguments\",\"_callee\",\"payload\",\"regenerator_default\",\"a\",\"wrap\",\"_context\",\"prev\",\"next\",\"abrupt\",\"$$\",\"post\",\"stop\",\"modelEnhance\",\"namespace\",\"state\",\"status\",\"undefined\",\"effects\",\"submit\",\"mark\",\"_ref\",\"_ref2\",\"call\",\"put\",\"response\",\"console\",\"log\",\"sent\",\"type\",\"reducers\",\"registerHandle\",\"_ref3\",\"Object\",\"objectSpread\"],\"mappings\":\"kKAEO,SAAeA,EAAtBC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAAwBC,GAAxB,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAG,OAAA,SACEC,EAAAA,EAAGC,KAAK,iBAAkBT,IAD5B,KAAA,EAAA,IAAA,MAAA,OAAAI,EAAAM,SAAAX,6BCCQY,EAAAA,QAAAA,OAAAA,EAAAA,EAAAA,CAAa,CAC1BC,UAAW,WAEXC,MAAO,CACLC,YAAQC,GAGVC,QAAS,CACNC,OADMhB,EAAAC,EAAAgB,KAAA,SAAAD,EAAAE,EAAAC,GAAA,IAAApB,EAAAqB,EAAAC,EAAAC,EAAA,OAAAtB,EAAAC,EAAAC,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAGY,OAFTN,EADHmB,EACGnB,QAAaqB,EADhBD,EACgBC,KAAMC,EADtBF,EACsBE,IAC3BE,QAAQC,IAAIzB,GAFPI,EAAAE,KAAA,EAGkBe,EAAK5B,EAAUO,GAHjC,KAAA,EAIL,OADMuB,EAHDnB,EAAAsB,KAAAtB,EAAAE,KAAA,EAICgB,EAAI,CACRK,KAAM,iBACN3B,QAASuB,IANN,KAAA,EAAA,IAAA,MAAA,OAAAnB,EAAAM,SAAAO,MAWTW,SAAU,CACRC,eADQ,SACOhB,EADPiB,GAC2B,IAAX9B,EAAW8B,EAAX9B,QACtB,OAAO+B,OAAAC,EAAA,EAAAD,CAAA,GACFlB,EADL,CAEEC,OAAQd,EAAQc\",\"sourcesContent\":[\"import $$ from 'cmn-utils';\\n\\nexport async function register(payload) {\\n  return $$.post('/user/register', payload);\\n}\",\"import modelEnhance from '@/utils/modelEnhance';\\nimport { register } from '../service';\\n\\nexport default modelEnhance({\\n  namespace: 'register',\\n\\n  state: {\\n    status: undefined,\\n  },\\n\\n  effects: {\\n    *submit({ payload }, { call, put }) {\\n      console.log(payload)\\n      const response = yield call(register, payload);\\n      yield put({\\n        type: 'registerHandle',\\n        payload: response,\\n      });\\n    },\\n  },\\n\\n  reducers: {\\n    registerHandle(state, { payload }) {\\n      return {\\n        ...state,\\n        status: payload.status,\\n      };\\n    },\\n  },\\n});\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{1774:function(e,t,r){\"use strict\";r.r(t);var n=r(26),a=r(49),s=r.n(a),u=r(258),c=r(155),o=r(9),p=r.n(o);function i(e){return f.apply(this,arguments)}function f(){return(f=Object(c.a)(s.a.mark(function e(t){return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",p.a.post(\"/user/register\",t));case 1:case\"end\":return e.stop()}},e)}))).apply(this,arguments)}t.default=Object(u.a)({namespace:\"register\",state:{status:void 0},effects:{submit:s.a.mark(function e(t,r){var n,a,u,c;return s.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.payload,a=r.call,u=r.put,console.log(n),e.next=5,a(i,n);case 5:return c=e.sent,e.next=8,u({type:\"registerHandle\",payload:c});case 8:case\"end\":return e.stop()}},e)})},reducers:{registerHandle:function(e,t){var r=t.payload;return Object(n.a)({},e,{status:r.status})}}})}}]);","extractedComments":[]}