{"version":3,"sources":["routes/Business/CRUD/model/index.js"],"names":["LOADED","modelEnhance","namespace","state","pageData","PageHelper","create","employees","subscriptions","setup","_ref","dispatch","history","listen","_ref2","pathname","type","effects","init","_Users_evan_progressMan_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_ref3","_ref4","put","select","_ref5","wrap","_context","prev","next","payload","call","crud","sent","startPage","stop","getPageInfo","_ref6","_ref7","_context2","valueField","url","pageInfo","save","_ref8","_ref9","take","values","success","_ref10","_context3","notice","data","update","_ref11","_ref12","_context4","remove","_ref13","_ref14","records","_ref15","_context5","map","item","rowKey","getEmployees","_ref16","_ref17","_context6","afterResponse","resp","reducers"],"mappings":"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","file":"static/js/39.40ccdb18.chunk.js","sourcesContent":["import modelEnhance from '@/utils/modelEnhance';\nimport PageHelper from '@/utils/pageHelper';\n/**\n * 当第一次加载完页面时为true\n * 可以用这个值阻止切换页面时\n * 多次初始化数据\n */\nlet LOADED = false;\nexport default modelEnhance({\n  namespace: 'crud',\n\n  state: {\n    pageData: PageHelper.create(),\n    employees: []\n  },\n\n  subscriptions: {\n    setup({ dispatch, history }) {\n      history.listen(({ pathname }) => {\n        if (pathname === '/crud' && !LOADED) {\n          LOADED = true;\n          dispatch({\n            type: 'init'\n          });\n        }\n      });\n    }\n  },\n\n  effects: {\n    // 进入页面加载\n    *init({ payload }, { call, put, select }) {\n      const { pageData } = yield select(state => state.crud);\n      yield put({\n        type: 'getPageInfo',\n        payload: {\n          pageData: pageData.startPage(1, 10)\n        }\n      });\n      yield put({\n        type: 'getEmployees'\n      });\n    },\n    // 获取分页数据\n    *getPageInfo({ payload }, { call, put }) {\n      const { pageData } = payload;\n      yield put({\n        type: '@request',\n        payload: {\n          valueField: 'pageData',\n          url: '/crud/getList',\n          pageInfo: pageData\n        }\n      });\n    },\n    // 保存 之后查询分页\n    *save({ payload }, { call, put, select, take }) {\n      const { values, success } = payload;\n      const { pageData } = yield select(state => state.crud);\n      yield put({\n        type: '@request',\n        payload: {\n          notice: true,\n          url: '/crud/save',\n          data: values\n        }\n      });\n      // 等待@request结束\n      yield take('@request/@@end');\n      yield put({\n        type: 'getPageInfo',\n        payload: { pageData }\n      });\n      success();\n    },\n    // 修改\n    *update({ payload }, { call, put }) {},\n    // 删除 之后查询分页\n    *remove({ payload }, { call, put, select }) {\n      const { records, success } = payload;\n      const { pageData } = yield select(state => state.crud);\n      yield put({\n        type: '@request',\n        payload: {\n          notice: true,\n          url: '/crud/bathDelete',\n          data: records.map(item => item.rowKey)\n        }\n      });\n      yield put({\n        type: 'getPageInfo',\n        payload: { pageData }\n      });\n      success();\n    },\n    // 获取员工列表\n    *getEmployees({ payload }, { call, put }) {\n      yield put({\n        type: '@request',\n        afterResponse: resp => resp.data,\n        payload: {\n          valueField: 'employees',\n          url: '/crud/getWorkEmployee'\n        }\n      });\n    }\n  },\n\n  reducers: {}\n});\n"],"sourceRoot":""}