{"version":3,"sources":["../node_modules/antd/lib/message/style/index.js","../node_modules/antd/lib/message/index.js","../node_modules/antd/lib/popconfirm/style/index.js","../node_modules/antd/lib/popconfirm/index.js","../node_modules/wangeditor/release/wangEditor.js"],"names":["__webpack_require__","Object","defineProperty","exports","value","React","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","_rcNotification","_interopRequireDefault","_icon","default","defaultTop","messageInstance","getContainer","maxCount","defaultDuration","prefixCls","transitionName","api","open","args","duration","undefined","iconType","info","success","error","warning","loading","type","target","closePromise","Promise","resolve","callback","onClose","newInstance","style","top","instance","getMessageInstance","iconNode","createElement","theme","notice","content","className","concat","icon","result","removeNotice","then","filled","rejected","promise","config","options","destroy","forEach","warn","_default","_reactLifecyclesCompat","_tooltip","_button","_LocaleReceiver","_default2","_configProvider","_typeof","Symbol","iterator","constructor","_extends","assign","i","arguments","length","source","apply","this","_defineProperties","props","descriptor","enumerable","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","__rest","s","e","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Popconfirm","_React$Component","_this","Constructor","TypeError","_classCallCheck","onConfirm","setVisible","onCancel","onVisibleChange","visible","disabled","saveTooltip","node","tooltip","renderOverlay","popconfirmLocale","_this$props","okButtonProps","cancelButtonProps","title","cancelText","okText","okType","onClick","size","renderConfirm","_ref","getPrefixCls","_a","customizePrefixCls","placement","restProps","overlay","componentName","defaultLocale","state","ref","protoProps","staticProps","subClass","superClass","create","_inherits","Component","nextProps","defaultVisible","getPopupDomNode","setState","ConfigConsumer","defaultProps","trigger","polyfill","module","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","nodeType","selectorResult","Array","replace","trim","html","div","document","innerHTML","children","createElemByHTML","querySelectorAll","$","fn","elem","clone","deep","cloneList","push","cloneNode","index","first","last","on","types","split","addEventListener","matches","off","removeEventListener","attr","val","getAttribute","setAttribute","addClass","arr","filter","item","join","removeClass","css","currentStyle","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","menus","fontNames","colors","emotions","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","fail","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","test","isIE","window","objForEach","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","needToHide","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","$selectionELem","selectionText","checkResult","alert","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$trParent","$currentTd","name","toLowerCase","newTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","configMenus","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","attrs","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","pHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","$document","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","img","onload","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","_offAllEvent","varArgs","to","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","getElementsByTagName","wangEditor","factory"],"mappings":"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","file":"static/js/28.57e096ed.chunk.js","sourcesContent":["\"use strict\";\n\nrequire(\"../../style/index.less\");\n\nrequire(\"./index.less\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _rcNotification = _interopRequireDefault(require(\"rc-notification\"));\n\nvar _icon = _interopRequireDefault(require(\"../icon\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n/* global Promise */\n\n\nvar defaultDuration = 3;\nvar defaultTop;\nvar messageInstance;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\n\nfunction getMessageInstance(callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n\n  _rcNotification[\"default\"].newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n\n    messageInstance = instance;\n    callback(instance);\n  });\n}\n\nfunction notice(args) {\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var iconType = {\n    info: 'info-circle',\n    success: 'check-circle',\n    error: 'close-circle',\n    warning: 'exclamation-circle',\n    loading: 'loading'\n  }[args.type];\n  var target = key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getMessageInstance(function (instance) {\n      var iconNode = React.createElement(_icon[\"default\"], {\n        type: iconType,\n        theme: iconType === 'loading' ? 'outlined' : 'filled'\n      });\n      instance.notice({\n        key: target,\n        duration: duration,\n        style: {},\n        content: React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-custom-content\").concat(args.type ? \" \".concat(prefixCls, \"-\").concat(args.type) : '')\n        }, args.icon ? args.icon : iconType ? iconNode : '', React.createElement(\"span\", null, args.content)),\n        onClose: callback\n      });\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nvar api = {\n  open: notice,\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n\n    if (options.transitionName !== undefined) {\n      transitionName = options.transitionName;\n      messageInstance = null; // delete messageInstance for new transitionName\n    }\n\n    if (options.maxCount !== undefined) {\n      maxCount = options.maxCount;\n      messageInstance = null;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  api[type] = function (content, duration, onClose) {\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return api.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n});\napi.warn = api.warning;\nvar _default = api;\nexports[\"default\"] = _default;","\"use strict\";\n\nrequire(\"../../style/index.less\");\n\nrequire(\"../../popover/style\");\n\nrequire(\"../../button/style\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _tooltip = _interopRequireDefault(require(\"../tooltip\"));\n\nvar _icon = _interopRequireDefault(require(\"../icon\"));\n\nvar _button = _interopRequireDefault(require(\"../button\"));\n\nvar _LocaleReceiver = _interopRequireDefault(require(\"../locale-provider/LocaleReceiver\"));\n\nvar _default2 = _interopRequireDefault(require(\"../locale-provider/default\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar Popconfirm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popconfirm, _React$Component);\n\n  function Popconfirm(props) {\n    var _this;\n\n    _classCallCheck(this, Popconfirm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popconfirm).call(this, props));\n\n    _this.onConfirm = function (e) {\n      _this.setVisible(false, e);\n\n      var onConfirm = _this.props.onConfirm;\n\n      if (onConfirm) {\n        onConfirm.call(_assertThisInitialized(_this), e);\n      }\n    };\n\n    _this.onCancel = function (e) {\n      _this.setVisible(false, e);\n\n      var onCancel = _this.props.onCancel;\n\n      if (onCancel) {\n        onCancel.call(_assertThisInitialized(_this), e);\n      }\n    };\n\n    _this.onVisibleChange = function (visible) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        return;\n      }\n\n      _this.setVisible(visible);\n    };\n\n    _this.saveTooltip = function (node) {\n      _this.tooltip = node;\n    };\n\n    _this.renderOverlay = function (prefixCls, popconfirmLocale) {\n      var _this$props = _this.props,\n          okButtonProps = _this$props.okButtonProps,\n          cancelButtonProps = _this$props.cancelButtonProps,\n          title = _this$props.title,\n          cancelText = _this$props.cancelText,\n          okText = _this$props.okText,\n          okType = _this$props.okType,\n          icon = _this$props.icon;\n      return React.createElement(\"div\", null, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-inner-content\")\n      }, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-message\")\n      }, icon, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-message-title\")\n      }, title)), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-buttons\")\n      }, React.createElement(_button[\"default\"], _extends({\n        onClick: _this.onCancel,\n        size: \"small\"\n      }, cancelButtonProps), cancelText || popconfirmLocale.cancelText), React.createElement(_button[\"default\"], _extends({\n        onClick: _this.onConfirm,\n        type: okType,\n        size: \"small\"\n      }, okButtonProps), okText || popconfirmLocale.okText))));\n    };\n\n    _this.renderConfirm = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          placement = _a.placement,\n          restProps = __rest(_a, [\"prefixCls\", \"placement\"]);\n\n      var prefixCls = getPrefixCls('popover', customizePrefixCls);\n      var overlay = React.createElement(_LocaleReceiver[\"default\"], {\n        componentName: \"Popconfirm\",\n        defaultLocale: _default2[\"default\"].Popconfirm\n      }, function (popconfirmLocale) {\n        return _this.renderOverlay(prefixCls, popconfirmLocale);\n      });\n      return React.createElement(_tooltip[\"default\"], _extends({}, restProps, {\n        prefixCls: prefixCls,\n        placement: placement,\n        onVisibleChange: _this.onVisibleChange,\n        visible: _this.state.visible,\n        overlay: overlay,\n        ref: _this.saveTooltip\n      }));\n    };\n\n    _this.state = {\n      visible: props.visible\n    };\n    return _this;\n  }\n\n  _createClass(Popconfirm, [{\n    key: \"getPopupDomNode\",\n    value: function getPopupDomNode() {\n      return this.tooltip.getPopupDomNode();\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible, e) {\n      var props = this.props;\n\n      if (!('visible' in props)) {\n        this.setState({\n          visible: visible\n        });\n      }\n\n      var onVisibleChange = props.onVisibleChange;\n\n      if (onVisibleChange) {\n        onVisibleChange(visible, e);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_configProvider.ConfigConsumer, null, this.renderConfirm);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('visible' in nextProps) {\n        return {\n          visible: nextProps.visible\n        };\n      } else if ('defaultVisible' in nextProps) {\n        return {\n          visible: nextProps.defaultVisible\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Popconfirm;\n}(React.Component);\n\nPopconfirm.defaultProps = {\n  transitionName: 'zoom-big',\n  placement: 'top',\n  trigger: 'click',\n  okType: 'primary',\n  icon: React.createElement(_icon[\"default\"], {\n    type: \"exclamation-circle\",\n    theme: \"filled\"\n  }),\n  disabled: false\n};\n(0, _reactLifecyclesCompat.polyfill)(Popconfirm);\nvar _default = Popconfirm;\nexports[\"default\"] = _default;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.wangEditor = factory();\n})(this, function () {\n  'use strict';\n  /*\n      poly-fill\n  */\n\n  var polyfill = function polyfill() {\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n      Object.assign = function (target, varArgs) {\n        // .length of function is 2\n        if (target == null) {\n          // TypeError if undefined or null\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource != null) {\n            // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n\n        return to;\n      };\n    } // IE 中兼容 Element.prototype.matches\n\n\n    if (!Element.prototype.matches) {\n      Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n        var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n            i = matches.length;\n\n        while (--i >= 0 && matches.item(i) !== this) {}\n\n        return i > -1;\n      };\n    }\n  };\n  /*\n      DOM 操作 API\n  */\n  // 根据 html 代码片段创建 dom 对象\n\n\n  function createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n  } // 是否是 DOM List\n\n\n  function isDOMList(selector) {\n    if (!selector) {\n      return false;\n    }\n\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n      return true;\n    }\n\n    return false;\n  } // 封装 document.querySelectorAll\n\n\n  function querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n\n    if (isDOMList(result)) {\n      return result;\n    } else {\n      return [result];\n    }\n  } // 记录所有的事件绑定\n\n\n  var eventList = []; // 创建构造函数\n\n  function DomElement(selector) {\n    if (!selector) {\n      return;\n    } // selector 本来就是 DomElement 对象，直接返回\n\n\n    if (selector instanceof DomElement) {\n      return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType; // 根据 selector 得出的结果（如 DOM，DOM List）\n\n    var selectorResult = [];\n\n    if (nodeType === 9) {\n      // document 节点\n      selectorResult = [selector];\n    } else if (nodeType === 1) {\n      // 单个 DOM 节点\n      selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n      // DOM List 或者数组\n      selectorResult = selector;\n    } else if (typeof selector === 'string') {\n      // 字符串\n      selector = selector.replace('/\\n/mg', '').trim();\n\n      if (selector.indexOf('<') === 0) {\n        // 如 <div>\n        selectorResult = createElemByHTML(selector);\n      } else {\n        // 如 #id .class\n        selectorResult = querySelectorAll(selector);\n      }\n    }\n\n    var length = selectorResult.length;\n\n    if (!length) {\n      // 空数组\n      return this;\n    } // 加入 DOM 节点\n\n\n    var i = void 0;\n\n    for (i = 0; i < length; i++) {\n      this[i] = selectorResult[i];\n    }\n\n    this.length = length;\n  } // 修改原型\n\n\n  DomElement.prototype = {\n    constructor: DomElement,\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n      var i = void 0;\n\n      for (i = 0; i < this.length; i++) {\n        var elem = this[i];\n        var result = fn.call(elem, elem, i);\n\n        if (result === false) {\n          break;\n        }\n      }\n\n      return this;\n    },\n    // clone\n    clone: function clone(deep) {\n      var cloneList = [];\n      this.forEach(function (elem) {\n        cloneList.push(elem.cloneNode(!!deep));\n      });\n      return $(cloneList);\n    },\n    // 获取第几个元素\n    get: function get(index) {\n      var length = this.length;\n\n      if (index >= length) {\n        index = index % length;\n      }\n\n      return $(this[index]);\n    },\n    // 第一个\n    first: function first() {\n      return this.get(0);\n    },\n    // 最后一个\n    last: function last() {\n      var length = this.length;\n      return this.get(length - 1);\n    },\n    // 绑定事件\n    on: function on(type, selector, fn) {\n      // selector 不为空，证明绑定事件要加代理\n      if (!fn) {\n        fn = selector;\n        selector = null;\n      } // type 是否有多个\n\n\n      var types = [];\n      types = type.split(/\\s+/);\n      return this.forEach(function (elem) {\n        types.forEach(function (type) {\n          if (!type) {\n            return;\n          } // 记录下，方便后面解绑\n\n\n          eventList.push({\n            elem: elem,\n            type: type,\n            fn: fn\n          });\n\n          if (!selector) {\n            // 无代理\n            elem.addEventListener(type, fn);\n            return;\n          } // 有代理\n\n\n          elem.addEventListener(type, function (e) {\n            var target = e.target;\n\n            if (target.matches(selector)) {\n              fn.call(target, e);\n            }\n          });\n        });\n      });\n    },\n    // 取消事件绑定\n    off: function off(type, fn) {\n      return this.forEach(function (elem) {\n        elem.removeEventListener(type, fn);\n      });\n    },\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n      if (val == null) {\n        // 获取值\n        return this[0].getAttribute(key);\n      } else {\n        // 设置值\n        return this.forEach(function (elem) {\n          elem.setAttribute(key, val);\n        });\n      }\n    },\n    // 添加 class\n    addClass: function addClass(className) {\n      if (!className) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var arr = void 0;\n\n        if (elem.className) {\n          // 解析当前 className 转换为数组\n          arr = elem.className.split(/\\s/);\n          arr = arr.filter(function (item) {\n            return !!item.trim();\n          }); // 添加 class\n\n          if (arr.indexOf(className) < 0) {\n            arr.push(className);\n          } // 修改 elem.class\n\n\n          elem.className = arr.join(' ');\n        } else {\n          elem.className = className;\n        }\n      });\n    },\n    // 删除 class\n    removeClass: function removeClass(className) {\n      if (!className) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var arr = void 0;\n\n        if (elem.className) {\n          // 解析当前 className 转换为数组\n          arr = elem.className.split(/\\s/);\n          arr = arr.filter(function (item) {\n            item = item.trim(); // 删除 class\n\n            if (!item || item === className) {\n              return false;\n            }\n\n            return true;\n          }); // 修改 elem.class\n\n          elem.className = arr.join(' ');\n        }\n      });\n    },\n    // 修改 css\n    css: function css(key, val) {\n      var currentStyle = key + ':' + val + ';';\n      return this.forEach(function (elem) {\n        var style = (elem.getAttribute('style') || '').trim();\n        var styleArr = void 0,\n            resultArr = [];\n\n        if (style) {\n          // 将 style 按照 ; 拆分为数组\n          styleArr = style.split(';');\n          styleArr.forEach(function (item) {\n            // 对每项样式，按照 : 拆分为 key 和 value\n            var arr = item.split(':').map(function (i) {\n              return i.trim();\n            });\n\n            if (arr.length === 2) {\n              resultArr.push(arr[0] + ':' + arr[1]);\n            }\n          }); // 替换或者新增\n\n          resultArr = resultArr.map(function (item) {\n            if (item.indexOf(key) === 0) {\n              return currentStyle;\n            } else {\n              return item;\n            }\n          });\n\n          if (resultArr.indexOf(currentStyle) < 0) {\n            resultArr.push(currentStyle);\n          } // 结果\n\n\n          elem.setAttribute('style', resultArr.join('; '));\n        } else {\n          // style 无值\n          elem.setAttribute('style', currentStyle);\n        }\n      });\n    },\n    // 显示\n    show: function show() {\n      return this.css('display', 'block');\n    },\n    // 隐藏\n    hide: function hide() {\n      return this.css('display', 'none');\n    },\n    // 获取子节点\n    children: function children() {\n      var elem = this[0];\n\n      if (!elem) {\n        return null;\n      }\n\n      return $(elem.children);\n    },\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n      var elem = this[0];\n\n      if (!elem) {\n        return null;\n      }\n\n      return $(elem.childNodes);\n    },\n    // 增加子节点\n    append: function append($children) {\n      return this.forEach(function (elem) {\n        $children.forEach(function (child) {\n          elem.appendChild(child);\n        });\n      });\n    },\n    // 移除当前节点\n    remove: function remove() {\n      return this.forEach(function (elem) {\n        if (elem.remove) {\n          elem.remove();\n        } else {\n          var parent = elem.parentElement;\n          parent && parent.removeChild(elem);\n        }\n      });\n    },\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n      var elem = this[0];\n      var child = $child[0];\n      return elem.contains(child);\n    },\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n      var elem = this[0];\n      return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n      var elem = this[0];\n      return elem.nodeName;\n    },\n    // 从当前元素查找\n    find: function find(selector) {\n      var elem = this[0];\n      return $(elem.querySelectorAll(selector));\n    },\n    // 获取当前元素的 text\n    text: function text(val) {\n      if (!val) {\n        // 获取 text\n        var elem = this[0];\n        return elem.innerHTML.replace(/<.*?>/g, function () {\n          return '';\n        });\n      } else {\n        // 设置 text\n        return this.forEach(function (elem) {\n          elem.innerHTML = val;\n        });\n      }\n    },\n    // 获取 html\n    html: function html(value) {\n      var elem = this[0];\n\n      if (value == null) {\n        return elem.innerHTML;\n      } else {\n        elem.innerHTML = value;\n        return this;\n      }\n    },\n    // 获取 value\n    val: function val() {\n      var elem = this[0];\n      return elem.value.trim();\n    },\n    // focus\n    focus: function focus() {\n      return this.forEach(function (elem) {\n        elem.focus();\n      });\n    },\n    // parent\n    parent: function parent() {\n      var elem = this[0];\n      return $(elem.parentElement);\n    },\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n      var results = document.querySelectorAll(selector);\n      var length = results.length;\n\n      if (!length) {\n        // 传入的 selector 无效\n        return null;\n      }\n\n      var elem = _currentElem || this[0];\n\n      if (elem.nodeName === 'BODY') {\n        return null;\n      }\n\n      var parent = elem.parentElement;\n      var i = void 0;\n\n      for (i = 0; i < length; i++) {\n        if (parent === results[i]) {\n          // 找到，并返回\n          return $(parent);\n        }\n      } // 继续查找\n\n\n      return this.parentUntil(selector, parent);\n    },\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n      if ($elem.nodeType === 1) {\n        return this[0] === $elem;\n      } else {\n        return this[0] === $elem[0];\n      }\n    },\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n      var $referenceNode = $(selector);\n      var referenceNode = $referenceNode[0];\n\n      if (!referenceNode) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var parent = referenceNode.parentNode;\n        parent.insertBefore(elem, referenceNode);\n      });\n    },\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n      var $referenceNode = $(selector);\n      var referenceNode = $referenceNode[0];\n\n      if (!referenceNode) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var parent = referenceNode.parentNode;\n\n        if (parent.lastChild === referenceNode) {\n          // 最后一个元素\n          parent.appendChild(elem);\n        } else {\n          // 不是最后一个元素\n          parent.insertBefore(elem, referenceNode.nextSibling);\n        }\n      });\n    }\n  }; // new 一个对象\n\n  function $(selector) {\n    return new DomElement(selector);\n  } // 解绑所有事件，用于销毁编辑器\n\n\n  $.offAll = function () {\n    eventList.forEach(function (item) {\n      var elem = item.elem;\n      var type = item.type;\n      var fn = item.fn; // 解绑\n\n      elem.removeEventListener(type, fn);\n    });\n  };\n  /*\n      配置信息\n  */\n\n\n  var config = {\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n    // 表情\n    emotions: [{\n      // tab 的标题\n      title: '默认',\n      // type -> 'emoji' / 'image'\n      type: 'image',\n      // content -> 数组\n      content: [{\n        alt: '[坏笑]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n      }, {\n        alt: '[舔屏]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n      }, {\n        alt: '[污]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n      }]\n    }, {\n      // tab 的标题\n      title: '新浪',\n      // type -> 'emoji' / 'image'\n      type: 'image',\n      // content -> 数组\n      content: [{\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n        alt: '[草泥马]'\n      }, {\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n        alt: '[神马]'\n      }, {\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n        alt: '[浮云]'\n      }]\n    }, {\n      // tab 的标题\n      title: 'emoji',\n      // type -> 'emoji' / 'image'\n      type: 'emoji',\n      // content -> 数组\n      content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n    // 编辑区域的 z-index\n    zIndex: 10000,\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n      // text 是插入的文字\n      // link 是插入的链接\n      return true; // 返回 true 即表示成功\n      // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n      // src 即图片的地址\n      return true; // 返回 true 即表示成功\n      // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n      // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n      return content;\n    },\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {// console.log(url)  // url 即插入图片的地址\n    },\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n    // 自定义配置 filename\n    uploadFileName: '',\n    // 上传图片的自定义参数\n    uploadImgParams: {// token: 'abcdef12345'\n    },\n    // 上传图片的自定义header\n    uploadImgHeaders: {// 'Accept': 'text/x-json'\n    },\n    // 配置 XHR withCredentials\n    withCredentials: false,\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n    // 上传图片 hook \n    uploadImgHooks: {\n      // customInsert: function (insertLinkImg, result, editor) {\n      //     console.log('customInsert')\n      //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n      //     const data = result.data1 || []\n      //     data.forEach(link => {\n      //         insertLinkImg(link)\n      //     })\n      // },\n      before: function before(xhr, editor, files) {// 图片上传之前触发\n        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n        // return {\n        //     prevent: true,\n        //     msg: '放弃上传'\n        // }\n      },\n      success: function success(xhr, editor, result) {// 图片上传并返回结果，图片插入成功之后触发\n      },\n      fail: function fail(xhr, editor, result) {// 图片上传并返回结果，但图片插入错误时触发\n      },\n      error: function error(xhr, editor) {// 图片上传出错时触发\n      },\n      timeout: function timeout(xhr, editor) {// 图片上传超时时触发\n      }\n    },\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n  };\n  /*\n      工具\n  */\n  // 和 UA 相关的属性\n\n  var UA = {\n    _ua: navigator.userAgent,\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n      var reg = /webkit/i;\n      return reg.test(this._ua);\n    },\n    // 是否 IE\n    isIE: function isIE() {\n      return 'ActiveXObject' in window;\n    }\n  }; // 遍历对象\n\n  function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        result = fn.call(obj, key, obj[key]);\n\n        if (result === false) {\n          break;\n        }\n      }\n    }\n  } // 遍历类数组\n\n\n  function arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n\n    for (i = 0; i < length; i++) {\n      item = fakeArr[i];\n      result = fn.call(fakeArr, item, i);\n\n      if (result === false) {\n        break;\n      }\n    }\n  } // 获取随机数\n\n\n  function getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n  } // 替换 html 特殊字符\n\n\n  function replaceHtmlSymbol(html) {\n    if (html == null) {\n      return '';\n    }\n\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n  } // 返回百分比的格式\n  // 判断是不是 function\n\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n  /*\n      bold-menu\n  */\n  // 构造函数\n\n\n  function Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Bold.prototype = {\n    constructor: Bold,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 bold 命令\n\n\n      editor.cmd.do('bold');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('bold')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      替换多语言\n   */\n\n  var replaceLang = function replaceLang(editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n    langArgs.forEach(function (item) {\n      var reg = item.reg;\n      var val = item.val;\n\n      if (reg.test(result)) {\n        result = result.replace(reg, function () {\n          return val;\n        });\n      }\n    });\n    return result;\n  };\n  /*\n      droplist\n  */\n\n\n  var _emptyFn = function _emptyFn() {}; // 构造函数\n\n\n  function DropList(menu, opt) {\n    var _this = this; // droplist 所依附的菜单\n\n\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt; // 容器\n\n    var $container = $('<div class=\"w-e-droplist\"></div>'); // 标题\n\n    var $title = opt.$title;\n    var titleHtml = void 0;\n\n    if ($title) {\n      // 替换多语言\n      titleHtml = $title.html();\n      titleHtml = replaceLang(editor, titleHtml);\n      $title.html(titleHtml);\n      $title.addClass('w-e-dp-title');\n      $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n\n    var onClick = opt.onClick || _emptyFn; // 加入 DOM 并绑定事件\n\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n      var $elem = item.$elem; // 替换多语言\n\n      var elemHtml = $elem.html();\n      elemHtml = replaceLang(editor, elemHtml);\n      $elem.html(elemHtml);\n      var value = item.value;\n      var $li = $('<li class=\"w-e-item\"></li>');\n\n      if ($elem) {\n        $li.append($elem);\n        $list.append($li);\n        $li.on('click', function (e) {\n          onClick(value); // 隐藏\n\n          _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n          }, 0);\n        });\n      }\n    }); // 绑定隐藏事件\n\n    $container.on('mouseleave', function (e) {\n      _this.hideTimeoutId = setTimeout(function () {\n        _this.hide();\n      }, 0);\n    }); // 记录属性\n\n    this.$container = $container; // 基本属性\n\n    this._rendered = false;\n    this._show = false;\n  } // 原型\n\n\n  DropList.prototype = {\n    constructor: DropList,\n    // 显示（插入DOM）\n    show: function show() {\n      if (this.hideTimeoutId) {\n        // 清除之前的定时隐藏\n        clearTimeout(this.hideTimeoutId);\n      }\n\n      var menu = this.menu;\n      var $menuELem = menu.$elem;\n      var $container = this.$container;\n\n      if (this._show) {\n        return;\n      }\n\n      if (this._rendered) {\n        // 显示\n        $container.show();\n      } else {\n        // 加入 DOM 之前先定位位置\n        var menuHeight = $menuELem.getSizeData().height || 0;\n        var width = this.opt.width || 100; // 默认为 100\n\n        $container.css('margin-top', menuHeight + 'px').css('width', width + 'px'); // 加入到 DOM\n\n        $menuELem.append($container);\n        this._rendered = true;\n      } // 修改属性\n\n\n      this._show = true;\n    },\n    // 隐藏（移除DOM）\n    hide: function hide() {\n      if (this.showTimeoutId) {\n        // 清除之前的定时显示\n        clearTimeout(this.showTimeoutId);\n      }\n\n      var $container = this.$container;\n\n      if (!this._show) {\n        return;\n      } // 隐藏并需改属性\n\n\n      $container.hide();\n      this._show = false;\n    }\n  };\n  /*\n      menu - header\n  */\n  // 构造函数\n\n  function Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>设置标题</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<h1>H1</h1>'),\n        value: '<h1>'\n      }, {\n        $elem: $('<h2>H2</h2>'),\n        value: '<h2>'\n      }, {\n        $elem: $('<h3>H3</h3>'),\n        value: '<h3>'\n      }, {\n        $elem: $('<h4>H4</h4>'),\n        value: '<h4>'\n      }, {\n        $elem: $('<h5>H5</h5>'),\n        value: '<h5>'\n      }, {\n        $elem: $('<p>正文</p>'),\n        value: '<p>'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 Head 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  Head.prototype = {\n    constructor: Head,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n\n      if (editor.$textElem.equal($selectionElem)) {\n        // 不能选中多行来设置标题，否则会出现问题\n        // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n        return;\n      }\n\n      editor.cmd.do('formatBlock', value);\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var reg = /^h/i;\n      var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n      if (reg.test(cmdValue)) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - fontSize\n  */\n  // 构造函数\n\n  function FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 160,\n      $title: $('<p>字号</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span style=\"font-size: x-small;\">x-small</span>'),\n        value: '1'\n      }, {\n        $elem: $('<span style=\"font-size: small;\">small</span>'),\n        value: '2'\n      }, {\n        $elem: $('<span>normal</span>'),\n        value: '3'\n      }, {\n        $elem: $('<span style=\"font-size: large;\">large</span>'),\n        value: '4'\n      }, {\n        $elem: $('<span style=\"font-size: x-large;\">x-large</span>'),\n        value: '5'\n      }, {\n        $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'),\n        value: '6'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 FontSize 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  FontSize.prototype = {\n    constructor: FontSize,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('fontSize', value);\n    }\n  };\n  /*\n      menu - fontName\n  */\n  // 构造函数\n\n  function FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 获取配置的字体\n\n    var config = editor.config;\n    var fontNames = config.fontNames || []; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>字体</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: fontNames.map(function (fontName) {\n        return {\n          $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'),\n          value: fontName\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 FontName 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  FontName.prototype = {\n    constructor: FontName,\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('fontName', value);\n    }\n  };\n  /*\n      panel\n  */\n\n  var emptyFn = function emptyFn() {}; // 记录已经显示 panel 的菜单\n\n\n  var _isCreatedPanelMenus = []; // 构造函数\n\n  function Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n  } // 原型\n\n\n  Panel.prototype = {\n    constructor: Panel,\n    // 显示（插入DOM）\n    show: function show() {\n      var _this = this;\n\n      var menu = this.menu;\n\n      if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n        // 该菜单已经创建了 panel 不能再创建\n        return;\n      }\n\n      var editor = menu.editor;\n      var $body = $('body');\n      var $textContainerElem = editor.$textContainerElem;\n      var opt = this.opt; // panel 的容器\n\n      var $container = $('<div class=\"w-e-panel-container\"></div>');\n      var width = opt.width || 300; // 默认 300px\n\n      $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px'); // 添加关闭按钮\n\n      var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n      $container.append($closeBtn);\n      $closeBtn.on('click', function () {\n        _this.hide();\n      }); // 准备 tabs 容器\n\n      var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n      var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n      $container.append($tabTitleContainer).append($tabContentContainer); // 设置高度\n\n      var height = opt.height;\n\n      if (height) {\n        $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n      } // tabs\n\n\n      var tabs = opt.tabs || [];\n      var tabTitleArr = [];\n      var tabContentArr = [];\n      tabs.forEach(function (tab, tabIndex) {\n        if (!tab) {\n          return;\n        }\n\n        var title = tab.title || '';\n        var tpl = tab.tpl || ''; // 替换多语言\n\n        title = replaceLang(editor, title);\n        tpl = replaceLang(editor, tpl); // 添加到 DOM\n\n        var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n        $tabTitleContainer.append($title);\n        var $content = $(tpl);\n        $tabContentContainer.append($content); // 记录到内存\n\n        $title._index = tabIndex;\n        tabTitleArr.push($title);\n        tabContentArr.push($content); // 设置 active 项\n\n        if (tabIndex === 0) {\n          $title._active = true;\n          $title.addClass('w-e-active');\n        } else {\n          $content.hide();\n        } // 绑定 tab 的事件\n\n\n        $title.on('click', function (e) {\n          if ($title._active) {\n            return;\n          } // 隐藏所有的 tab\n\n\n          tabTitleArr.forEach(function ($title) {\n            $title._active = false;\n            $title.removeClass('w-e-active');\n          });\n          tabContentArr.forEach(function ($content) {\n            $content.hide();\n          }); // 显示当前的 tab\n\n          $title._active = true;\n          $title.addClass('w-e-active');\n          $content.show();\n        });\n      }); // 绑定关闭事件\n\n      $container.on('click', function (e) {\n        // 点击时阻止冒泡\n        e.stopPropagation();\n      });\n      $body.on('click', function (e) {\n        _this.hide();\n      }); // 添加到 DOM\n\n      $textContainerElem.append($container); // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n\n      tabs.forEach(function (tab, index) {\n        if (!tab) {\n          return;\n        }\n\n        var events = tab.events || [];\n        events.forEach(function (event) {\n          var selector = event.selector;\n          var type = event.type;\n          var fn = event.fn || emptyFn;\n          var $content = tabContentArr[index];\n          $content.find(selector).on(type, function (e) {\n            e.stopPropagation();\n            var needToHide = fn(e); // 执行完事件之后，是否要关闭 panel\n\n            if (needToHide) {\n              _this.hide();\n            }\n          });\n        });\n      }); // focus 第一个 elem\n\n      var $inputs = $container.find('input[type=text],textarea');\n\n      if ($inputs.length) {\n        $inputs.get(0).focus();\n      } // 添加到属性\n\n\n      this.$container = $container; // 隐藏其他 panel\n\n      this._hideOtherPanels(); // 记录该 menu 已经创建了 panel\n\n\n      _isCreatedPanelMenus.push(menu);\n    },\n    // 隐藏（移除DOM）\n    hide: function hide() {\n      var menu = this.menu;\n      var $container = this.$container;\n\n      if ($container) {\n        $container.remove();\n      } // 将该 menu 记录中移除\n\n\n      _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n        if (item === menu) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n    },\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n      if (!_isCreatedPanelMenus.length) {\n        return;\n      }\n\n      _isCreatedPanelMenus.forEach(function (menu) {\n        var panel = menu.panel || {};\n\n        if (panel.hide) {\n          panel.hide();\n        }\n      });\n    }\n  };\n  /*\n      menu - link\n  */\n  // 构造函数\n\n  function Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Link.prototype = {\n    constructor: Link,\n    // 点击事件\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $linkelem = void 0;\n\n      if (this._active) {\n        // 当前选区在链接里面\n        $linkelem = editor.selection.getSelectionContainerElem();\n\n        if (!$linkelem) {\n          return;\n        } // 将该元素都包含在选取之内，以便后面整体替换\n\n\n        editor.selection.createRangeByElem($linkelem);\n        editor.selection.restoreSelection(); // 显示 panel\n\n        this._createPanel($linkelem.text(), $linkelem.attr('href'));\n      } else {\n        // 当前选区不在链接里面\n        if (editor.selection.isSelectionEmpty()) {\n          // 选区是空的，未选中内容\n          this._createPanel('', '');\n        } else {\n          // 选中内容了\n          this._createPanel(editor.selection.getSelectionText(), '');\n        }\n      }\n    },\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n      var _this = this; // panel 中需要用到的id\n\n\n      var inputLinkId = getRandom('input-link');\n      var inputTextId = getRandom('input-text');\n      var btnOkId = getRandom('btn-ok');\n      var btnDelId = getRandom('btn-del'); // 是否显示“删除链接”\n\n      var delBtnDisplay = this._active ? 'inline-block' : 'none'; // 初始化并显示 panel\n\n      var panel = new Panel(this, {\n        width: 300,\n        // panel 中可包含多个 tab\n        tabs: [{\n          // tab 的标题\n          title: '链接',\n          // 模板\n          tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + \"\\\" placeholder=\\\"\\u94FE\\u63A5\\u6587\\u5B57\\\"/></td>\\n                            <input id=\\\"\" + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                                <button id=\\\"\" + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + \"\\\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>\",\n          // 事件绑定\n          events: [// 插入链接\n          {\n            selector: '#' + btnOkId,\n            type: 'click',\n            fn: function fn() {\n              // 执行插入链接\n              var $link = $('#' + inputLinkId);\n              var $text = $('#' + inputTextId);\n              var link = $link.val();\n              var text = $text.val();\n\n              _this._insertLink(text, link); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, // 删除链接\n          {\n            selector: '#' + btnDelId,\n            type: 'click',\n            fn: function fn() {\n              // 执行删除链接\n              _this._delLink(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // tab end\n\n        }] // tabs end\n\n      }); // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 删除当前链接\n    _delLink: function _delLink() {\n      if (!this._active) {\n        return;\n      }\n\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var selectionText = editor.selection.getSelectionText();\n      editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n      var editor = this.editor;\n      var config = editor.config;\n      var linkCheck = config.linkCheck;\n      var checkResult = true; // 默认为 true\n\n      if (linkCheck && typeof linkCheck === 'function') {\n        checkResult = linkCheck(text, link);\n      }\n\n      if (checkResult === true) {\n        editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n      } else {\n        alert(checkResult);\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      if ($selectionELem.getNodeName() === 'A') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      italic-menu\n  */\n  // 构造函数\n\n  function Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Italic.prototype = {\n    constructor: Italic,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 italic 命令\n\n\n      editor.cmd.do('italic');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('italic')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      redo-menu\n  */\n  // 构造函数\n\n  function Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Redo.prototype = {\n    constructor: Redo,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor; // 执行 redo 命令\n\n      editor.cmd.do('redo');\n    }\n  };\n  /*\n      strikeThrough-menu\n  */\n  // 构造函数\n\n  function StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  StrikeThrough.prototype = {\n    constructor: StrikeThrough,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 strikeThrough 命令\n\n\n      editor.cmd.do('strikeThrough');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('strikeThrough')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      underline-menu\n  */\n  // 构造函数\n\n  function Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Underline.prototype = {\n    constructor: Underline,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 underline 命令\n\n\n      editor.cmd.do('underline');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('underline')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      undo-menu\n  */\n  // 构造函数\n\n  function Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Undo.prototype = {\n    constructor: Undo,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor; // 执行 undo 命令\n\n      editor.cmd.do('undo');\n    }\n  };\n  /*\n      menu - list\n  */\n  // 构造函数\n\n  function List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>设置列表</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'),\n        value: 'insertOrderedList'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'),\n        value: 'insertUnorderedList'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 List 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  List.prototype = {\n    constructor: List,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      editor.selection.restoreSelection();\n\n      if (editor.cmd.queryCommandState(value)) {\n        return;\n      }\n\n      editor.cmd.do(value); // 验证列表是否被包裹在 <p> 之内\n\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n\n      if ($selectionElem.getNodeName() === 'LI') {\n        $selectionElem = $selectionElem.parent();\n      }\n\n      if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n        return;\n      }\n\n      if ($selectionElem.equal($textElem)) {\n        // 证明是顶级标签，没有被 <p> 包裹\n        return;\n      }\n\n      var $parent = $selectionElem.parent();\n\n      if ($parent.equal($textElem)) {\n        // $parent 是顶级标签，不能删除\n        return;\n      }\n\n      $selectionElem.insertAfter($parent);\n      $parent.remove();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - justify\n  */\n  // 构造函数\n\n  function Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>对齐方式</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'),\n        value: 'justifyLeft'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'),\n        value: 'justifyCenter'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'),\n        value: 'justifyRight'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 List 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  Justify.prototype = {\n    constructor: Justify,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do(value);\n    }\n  };\n  /*\n      menu - Forecolor\n  */\n  // 构造函数\n\n  function ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist'; // 获取配置的颜色\n\n    var config = editor.config;\n    var colors = config.colors || []; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>文字颜色</p>'),\n      type: 'inline-block',\n      // droplist 内容以 block 形式展示\n      list: colors.map(function (color) {\n        return {\n          $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'),\n          value: color\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 ForeColor 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  ForeColor.prototype = {\n    constructor: ForeColor,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('foreColor', value);\n    }\n  };\n  /*\n      menu - BackColor\n  */\n  // 构造函数\n\n  function BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist'; // 获取配置的颜色\n\n    var config = editor.config;\n    var colors = config.colors || []; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>背景色</p>'),\n      type: 'inline-block',\n      // droplist 内容以 block 形式展示\n      list: colors.map(function (color) {\n        return {\n          $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'),\n          value: color\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 BackColor 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  BackColor.prototype = {\n    constructor: BackColor,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('backColor', value);\n    }\n  };\n  /*\n      menu - quote\n  */\n  // 构造函数\n\n  function Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Quote.prototype = {\n    constructor: Quote,\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n      var nodeName = $selectionElem.getNodeName();\n\n      if (!UA.isIE()) {\n        if (nodeName === 'BLOCKQUOTE') {\n          // 撤销 quote\n          editor.cmd.do('formatBlock', '<P>');\n        } else {\n          // 转换为 quote\n          editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n        }\n\n        return;\n      } // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n\n\n      var content = void 0,\n          $targetELem = void 0;\n\n      if (nodeName === 'P') {\n        // 将 P 转换为 quote\n        content = $selectionElem.text();\n        $targetELem = $('<blockquote>' + content + '</blockquote>');\n        $targetELem.insertAfter($selectionElem);\n        $selectionElem.remove();\n        return;\n      }\n\n      if (nodeName === 'BLOCKQUOTE') {\n        // 撤销 quote\n        content = $selectionElem.text();\n        $targetELem = $('<p>' + content + '</p>');\n        $targetELem.insertAfter($selectionElem);\n        $selectionElem.remove();\n      }\n    },\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var reg = /^BLOCKQUOTE$/i;\n      var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n      if (reg.test(cmdValue)) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - code\n  */\n  // 构造函数\n\n  function Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Code.prototype = {\n    constructor: Code,\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $startElem = editor.selection.getSelectionStartElem();\n      var $endElem = editor.selection.getSelectionEndElem();\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n      var selectionText = editor.selection.getSelectionText();\n      var $code = void 0;\n\n      if (!$startElem.equal($endElem)) {\n        // 跨元素选择，不做处理\n        editor.selection.restoreSelection();\n        return;\n      }\n\n      if (!isSeleEmpty) {\n        // 选取不是空，用 <code> 包裹即可\n        $code = $('<code>' + selectionText + '</code>');\n        editor.cmd.do('insertElem', $code);\n        editor.selection.createRangeByElem($code, false);\n        editor.selection.restoreSelection();\n        return;\n      } // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n\n\n      if (this._active) {\n        // 选中状态，将编辑内容\n        this._createPanel($startElem.html());\n      } else {\n        // 未选中状态，将创建内容\n        this._createPanel();\n      }\n    },\n    _createPanel: function _createPanel(value) {\n      var _this = this; // value - 要编辑的内容\n\n\n      value = value || '';\n      var type = !value ? 'new' : 'edit';\n      var textId = getRandom('texxt');\n      var btnId = getRandom('btn');\n      var panel = new Panel(this, {\n        width: 500,\n        // 一个 Panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '插入代码',\n          // 模板\n          tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>\",\n          // 事件绑定\n          events: [// 插入代码\n          {\n            selector: '#' + btnId,\n            type: 'click',\n            fn: function fn() {\n              var $text = $('#' + textId);\n              var text = $text.val() || $text.html();\n              text = replaceHtmlSymbol(text);\n\n              if (type === 'new') {\n                // 新插入\n                _this._insertCode(text);\n              } else {\n                // 编辑更新\n                _this._updateCode(text);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // new Panel end\n      // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      $selectionELem.html(value);\n      editor.selection.restoreSelection();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var $parentElem = $selectionELem.parent();\n\n      if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - emoticon\n  */\n  // 构造函数\n\n  function Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Emoticon.prototype = {\n    constructor: Emoticon,\n    onClick: function onClick() {\n      this._createPanel();\n    },\n    _createPanel: function _createPanel() {\n      var _this = this;\n\n      var editor = this.editor;\n      var config = editor.config; // 获取表情配置\n\n      var emotions = config.emotions || []; // 创建表情 dropPanel 的配置\n\n      var tabConfig = [];\n      emotions.forEach(function (emotData) {\n        var emotType = emotData.type;\n        var content = emotData.content || []; // 这一组表情最终拼接出来的 html\n\n        var faceHtml = ''; // emoji 表情\n\n        if (emotType === 'emoji') {\n          content.forEach(function (item) {\n            if (item) {\n              faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n          });\n        } // 图片表情\n\n\n        if (emotType === 'image') {\n          content.forEach(function (item) {\n            var src = item.src;\n            var alt = item.alt;\n\n            if (src) {\n              // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n              faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n            }\n          });\n        }\n\n        tabConfig.push({\n          title: emotData.title,\n          tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n          events: [{\n            selector: 'span.w-e-item',\n            type: 'click',\n            fn: function fn(e) {\n              var target = e.target;\n              var $target = $(target);\n              var nodeName = $target.getNodeName();\n              var insertHtml = void 0;\n\n              if (nodeName === 'IMG') {\n                // 插入图片\n                insertHtml = $target.parent().html();\n              } else {\n                // 插入 emoji\n                insertHtml = '<span>' + $target.html() + '</span>';\n              }\n\n              _this._insert(insertHtml); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        });\n      });\n      var panel = new Panel(this, {\n        width: 300,\n        height: 200,\n        // 一个 Panel 包含多个 tab\n        tabs: tabConfig\n      }); // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', emotHtml);\n    }\n  };\n  /*\n      menu - table\n  */\n  // 构造函数\n\n  function Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Table.prototype = {\n    constructor: Table,\n    onClick: function onClick() {\n      if (this._active) {\n        // 编辑现有表格\n        this._createEditPanel();\n      } else {\n        // 插入新表格\n        this._createInsertPanel();\n      }\n    },\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n      var _this = this; // 用到的 id\n\n\n      var btnInsertId = getRandom('btn');\n      var textRowNum = getRandom('row');\n      var textColNum = getRandom('col');\n      var panel = new Panel(this, {\n        width: 250,\n        // panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '插入表格',\n          // 模板\n          tpl: \"<div>\\n                        <p style=\\\"text-align:left; padding:5px 0;\\\">\\n                            \\u521B\\u5EFA\\n                            <input id=\\\"\" + textRowNum + \"\\\" type=\\\"text\\\" value=\\\"5\\\" style=\\\"width:40px;text-align:center;\\\"/>\\n                            \\u884C\\n                            <input id=\\\"\" + textColNum + \"\\\" type=\\\"text\\\" value=\\\"5\\\" style=\\\"width:40px;text-align:center;\\\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + btnInsertId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            // 点击按钮，插入表格\n            selector: '#' + btnInsertId,\n            type: 'click',\n            fn: function fn() {\n              var rowNum = parseInt($('#' + textRowNum).val());\n              var colNum = parseInt($('#' + textColNum).val());\n\n              if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                // form 数据有效\n                _this._insert(rowNum, colNum);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // panel end\n      // 展示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n      // 拼接 table 模板\n      var r = void 0,\n          c = void 0;\n      var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n\n      for (r = 0; r < rowNum; r++) {\n        html += '<tr>';\n\n        if (r === 0) {\n          for (c = 0; c < colNum; c++) {\n            html += '<th>&nbsp;</th>';\n          }\n        } else {\n          for (c = 0; c < colNum; c++) {\n            html += '<td>&nbsp;</td>';\n          }\n        }\n\n        html += '</tr>';\n      }\n\n      html += '</table><p><br></p>'; // 执行命令\n\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', html); // 防止 firefox 下出现 resize 的控制点\n\n      editor.cmd.do('enableObjectResizing', false);\n      editor.cmd.do('enableInlineTableEditing', false);\n    },\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n      var _this2 = this; // 可用的 id\n\n\n      var addRowBtnId = getRandom('add-row');\n      var addColBtnId = getRandom('add-col');\n      var delRowBtnId = getRandom('del-row');\n      var delColBtnId = getRandom('del-col');\n      var delTableBtnId = getRandom('del-table'); // 创建 panel 对象\n\n      var panel = new Panel(this, {\n        width: 320,\n        // panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '编辑表格',\n          // 模板\n          tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + \"\\\" class=\\\"left\\\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\\\"\" + delRowBtnId + \"\\\" class=\\\"red left\\\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\\\"\" + addColBtnId + \"\\\" class=\\\"left\\\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\\\"\" + delColBtnId + \"\\\" class=\\\"red left\\\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + delTableBtnId + \"\\\" class=\\\"gray left\\\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            // 增加行\n            selector: '#' + addRowBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._addRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 增加列\n            selector: '#' + addColBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._addCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除行\n            selector: '#' + delRowBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除列\n            selector: '#' + delColBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除表格\n            selector: '#' + delTableBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delTable(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        }]\n      }); // 显示 panel\n\n      panel.show();\n    },\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n      var result = {};\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var nodeName = $selectionELem.getNodeName();\n\n      if (nodeName !== 'TD' && nodeName !== 'TH') {\n        return;\n      } // 获取 td index\n\n\n      var $tr = $selectionELem.parent();\n      var $tds = $tr.children();\n      var tdLength = $tds.length;\n      $tds.forEach(function (td, index) {\n        if (td === $selectionELem[0]) {\n          // 记录并跳出循环\n          result.td = {\n            index: index,\n            elem: td,\n            length: tdLength\n          };\n          return false;\n        }\n      }); // 获取 tr index\n\n      var $tbody = $tr.parent();\n      var $trs = $tbody.children();\n      var trLength = $trs.length;\n      $trs.forEach(function (tr, index) {\n        if (tr === $tr[0]) {\n          // 记录并跳出循环\n          result.tr = {\n            index: index,\n            elem: tr,\n            length: trLength\n          };\n          return false;\n        }\n      }); // 返回结果\n\n      return result;\n    },\n    // 增加行\n    _addRow: function _addRow() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var $currentTr = $(trData.elem);\n      var tdData = locationData.td;\n      var tdLength = tdData.length; // 拼接即将插入的字符串\n\n      var newTr = document.createElement('tr');\n      var tpl = '',\n          i = void 0;\n\n      for (i = 0; i < tdLength; i++) {\n        tpl += '<td>&nbsp;</td>';\n      }\n\n      newTr.innerHTML = tpl; // 插入\n\n      $(newTr).insertAfter($currentTr);\n    },\n    // 增加列\n    _addCol: function _addCol() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var tdData = locationData.td;\n      var tdIndex = tdData.index;\n      var $currentTr = $(trData.elem);\n      var $trParent = $currentTr.parent();\n      var $trs = $trParent.children(); // 遍历所有行\n\n      $trs.forEach(function (tr) {\n        var $tr = $(tr);\n        var $tds = $tr.children();\n        var $currentTd = $tds.get(tdIndex);\n        var name = $currentTd.getNodeName().toLowerCase(); // new 一个 td，并插入\n\n        var newTd = document.createElement(name);\n        $(newTd).insertAfter($currentTd);\n      });\n    },\n    // 删除行\n    _delRow: function _delRow() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var $currentTr = $(trData.elem);\n      $currentTr.remove();\n    },\n    // 删除列\n    _delCol: function _delCol() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var tdData = locationData.td;\n      var tdIndex = tdData.index;\n      var $currentTr = $(trData.elem);\n      var $trParent = $currentTr.parent();\n      var $trs = $trParent.children(); // 遍历所有行\n\n      $trs.forEach(function (tr) {\n        var $tr = $(tr);\n        var $tds = $tr.children();\n        var $currentTd = $tds.get(tdIndex); // 删除\n\n        $currentTd.remove();\n      });\n    },\n    // 删除表格\n    _delTable: function _delTable() {\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var $table = $selectionELem.parentUntil('table');\n\n      if (!$table) {\n        return;\n      }\n\n      $table.remove();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var nodeName = $selectionELem.getNodeName();\n\n      if (nodeName === 'TD' || nodeName === 'TH') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - video\n  */\n  // 构造函数\n\n  function Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Video.prototype = {\n    constructor: Video,\n    onClick: function onClick() {\n      this._createPanel();\n    },\n    _createPanel: function _createPanel() {\n      var _this = this; // 创建 id\n\n\n      var textValId = getRandom('text-val');\n      var btnId = getRandom('btn'); // 创建 panel\n\n      var panel = new Panel(this, {\n        width: 350,\n        // 一个 panel 多个 tab\n        tabs: [{\n          // 标题\n          title: '插入视频',\n          // 模板\n          tpl: '<div>\\n                        <input id=\"' + textValId + \"\\\" type=\\\"text\\\" class=\\\"block\\\" placeholder=\\\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\\\"/>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + btnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            selector: '#' + btnId,\n            type: 'click',\n            fn: function fn() {\n              var $text = $('#' + textValId);\n              var val = $text.val().trim(); // 测试用视频地址\n              // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n              if (val) {\n                // 插入视频\n                _this._insert(val);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // panel end\n      // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入视频\n    _insert: function _insert(val) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n  };\n  /*\n      menu - img\n  */\n  // 构造函数\n\n  function Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Image.prototype = {\n    constructor: Image,\n    onClick: function onClick() {\n      var editor = this.editor;\n      var config = editor.config;\n\n      if (config.qiniu) {\n        return;\n      }\n\n      if (this._active) {\n        this._createEditPanel();\n      } else {\n        this._createInsertPanel();\n      }\n    },\n    _createEditPanel: function _createEditPanel() {\n      var editor = this.editor; // id\n\n      var width30 = getRandom('width-30');\n      var width50 = getRandom('width-50');\n      var width100 = getRandom('width-100');\n      var delBtn = getRandom('del-btn'); // tab 配置\n\n      var tabsConfig = [{\n        title: '编辑图片',\n        tpl: \"<div>\\n                    <div class=\\\"w-e-button-container\\\" style=\\\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\\\">\\n                        <span style=\\\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\\\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\\\"\" + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + \"\\\" class=\\\"gray left\\\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>\",\n        events: [{\n          selector: '#' + width30,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '30%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + width50,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '50%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + width100,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '100%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + delBtn,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.remove();\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }]\n      }]; // 创建 panel 并显示\n\n      var panel = new Panel(this, {\n        width: 300,\n        tabs: tabsConfig\n      });\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    _createInsertPanel: function _createInsertPanel() {\n      var editor = this.editor;\n      var uploadImg = editor.uploadImg;\n      var config = editor.config; // id\n\n      var upTriggerId = getRandom('up-trigger');\n      var upFileId = getRandom('up-file');\n      var linkUrlId = getRandom('link-url');\n      var linkBtnId = getRandom('link-btn'); // tabs 的配置\n\n      var tabsConfig = [{\n        title: '上传图片',\n        tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n        events: [{\n          // 触发选择图片\n          selector: '#' + upTriggerId,\n          type: 'click',\n          fn: function fn() {\n            var $file = $('#' + upFileId);\n            var fileElem = $file[0];\n\n            if (fileElem) {\n              fileElem.click();\n            } else {\n              // 返回 true 可关闭 panel\n              return true;\n            }\n          }\n        }, {\n          // 选择图片完毕\n          selector: '#' + upFileId,\n          type: 'change',\n          fn: function fn() {\n            var $file = $('#' + upFileId);\n            var fileElem = $file[0];\n\n            if (!fileElem) {\n              // 返回 true 可关闭 panel\n              return true;\n            } // 获取选中的 file 对象列表\n\n\n            var fileList = fileElem.files;\n\n            if (fileList.length) {\n              uploadImg.uploadImg(fileList);\n            } // 返回 true 可关闭 panel\n\n\n            return true;\n          }\n        }]\n      }, // first tab end\n      {\n        title: '网络图片',\n        tpl: '<div>\\n                    <input id=\"' + linkUrlId + \"\\\" type=\\\"text\\\" class=\\\"block\\\" placeholder=\\\"\\u56FE\\u7247\\u94FE\\u63A5\\\"/></td>\\n                    <div class=\\\"w-e-button-container\\\">\\n                        <button id=\\\"\" + linkBtnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>\",\n        events: [{\n          selector: '#' + linkBtnId,\n          type: 'click',\n          fn: function fn() {\n            var $linkUrl = $('#' + linkUrlId);\n            var url = $linkUrl.val().trim();\n\n            if (url) {\n              uploadImg.insertLinkImg(url);\n            } // 返回 true 表示函数执行结束之后关闭 panel\n\n\n            return true;\n          }\n        }] // second tab end\n\n      }]; // tabs end\n      // 判断 tabs 的显示\n\n      var tabsConfigResult = [];\n\n      if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n        // 显示“上传图片”\n        tabsConfigResult.push(tabsConfig[0]);\n      }\n\n      if (config.showLinkImg) {\n        // 显示“网络图片”\n        tabsConfigResult.push(tabsConfig[1]);\n      } // 创建 panel 并显示\n\n\n      var panel = new Panel(this, {\n        width: 300,\n        tabs: tabsConfigResult\n      });\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor._selectedImg) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      所有菜单的汇总\n  */\n  // 存储菜单的构造函数\n\n  var MenuConstructors = {};\n  MenuConstructors.bold = Bold;\n  MenuConstructors.head = Head;\n  MenuConstructors.fontSize = FontSize;\n  MenuConstructors.fontName = FontName;\n  MenuConstructors.link = Link;\n  MenuConstructors.italic = Italic;\n  MenuConstructors.redo = Redo;\n  MenuConstructors.strikeThrough = StrikeThrough;\n  MenuConstructors.underline = Underline;\n  MenuConstructors.undo = Undo;\n  MenuConstructors.list = List;\n  MenuConstructors.justify = Justify;\n  MenuConstructors.foreColor = ForeColor;\n  MenuConstructors.backColor = BackColor;\n  MenuConstructors.quote = Quote;\n  MenuConstructors.code = Code;\n  MenuConstructors.emoticon = Emoticon;\n  MenuConstructors.table = Table;\n  MenuConstructors.video = Video;\n  MenuConstructors.image = Image;\n  /*\n      菜单集合\n  */\n  // 构造函数\n\n  function Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n  } // 修改原型\n\n\n  Menus.prototype = {\n    constructor: Menus,\n    // 初始化菜单\n    init: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var config = editor.config || {};\n      var configMenus = config.menus || []; // 获取配置中的菜单\n      // 根据配置信息，创建菜单\n\n      configMenus.forEach(function (menuKey) {\n        var MenuConstructor = MenuConstructors[menuKey];\n\n        if (MenuConstructor && typeof MenuConstructor === 'function') {\n          // 创建单个菜单\n          _this.menus[menuKey] = new MenuConstructor(editor);\n        }\n      }); // 添加到菜单栏\n\n      this._addToToolbar(); // 绑定事件\n\n\n      this._bindEvent();\n    },\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n      var editor = this.editor;\n      var $toolbarElem = editor.$toolbarElem;\n      var menus = this.menus;\n      var config = editor.config; // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n\n      var zIndex = config.zIndex + 1;\n      objForEach(menus, function (key, menu) {\n        var $elem = menu.$elem;\n\n        if ($elem) {\n          // 设置 z-index\n          $elem.css('z-index', zIndex);\n          $toolbarElem.append($elem);\n        }\n      });\n    },\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n      var menus = this.menus;\n      var editor = this.editor;\n      objForEach(menus, function (key, menu) {\n        var type = menu.type;\n\n        if (!type) {\n          return;\n        }\n\n        var $elem = menu.$elem;\n        var droplist = menu.droplist;\n        var panel = menu.panel; // 点击类型，例如 bold\n\n        if (type === 'click' && menu.onClick) {\n          $elem.on('click', function (e) {\n            if (editor.selection.getRange() == null) {\n              return;\n            }\n\n            menu.onClick(e);\n          });\n        } // 下拉框，例如 head\n\n\n        if (type === 'droplist' && droplist) {\n          $elem.on('mouseenter', function (e) {\n            if (editor.selection.getRange() == null) {\n              return;\n            } // 显示\n\n\n            droplist.showTimeoutId = setTimeout(function () {\n              droplist.show();\n            }, 200);\n          }).on('mouseleave', function (e) {\n            // 隐藏\n            droplist.hideTimeoutId = setTimeout(function () {\n              droplist.hide();\n            }, 0);\n          });\n        } // 弹框类型，例如 link\n\n\n        if (type === 'panel' && menu.onClick) {\n          $elem.on('click', function (e) {\n            e.stopPropagation();\n\n            if (editor.selection.getRange() == null) {\n              return;\n            } // 在自定义事件中显示 panel\n\n\n            menu.onClick(e);\n          });\n        }\n      });\n    },\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n      var menus = this.menus;\n      objForEach(menus, function (key, menu) {\n        if (menu.tryChangeActive) {\n          setTimeout(function () {\n            menu.tryChangeActive();\n          }, 100);\n        }\n      });\n    }\n  };\n  /*\n      粘贴信息的处理\n  */\n  // 获取粘贴的纯文本\n\n  function getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n\n    if (clipboardData == null) {\n      pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n      pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n  } // 获取粘贴的html\n\n\n  function getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n\n    if (clipboardData == null) {\n      pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n      pasteText = clipboardData.getData('text/plain');\n      pasteHtml = clipboardData.getData('text/html');\n    }\n\n    if (!pasteHtml && pasteText) {\n      pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n\n    if (!pasteHtml) {\n      return;\n    } // 过滤word中状态过来的无用字符\n\n\n    var docSplitHtml = pasteHtml.split('</html>');\n\n    if (docSplitHtml.length === 2) {\n      pasteHtml = docSplitHtml[0];\n    } // 过滤无用标签\n\n\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, ''); // 去掉注释\n\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, ''); // 过滤 data-xxx 属性\n\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n      // 忽略图片\n      pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n      // 过滤样式\n      pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n      // 保留样式\n      pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n  } // 获取粘贴的图片文件\n\n\n  function getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n\n    if (txt) {\n      // 有文字，就忽略图片\n      return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n\n    if (!items) {\n      return result;\n    }\n\n    objForEach(items, function (key, value) {\n      var type = value.type;\n\n      if (/image/i.test(type)) {\n        result.push(value.getAsFile());\n      }\n    });\n    return result;\n  }\n  /*\n      编辑区域\n  */\n  // 获取一个 elem.childNodes 的 JSON 数据\n\n\n  function getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n\n    $children.forEach(function (curElem) {\n      var elemResult = void 0;\n      var nodeType = curElem.nodeType; // 文本节点\n\n      if (nodeType === 3) {\n        elemResult = curElem.textContent;\n        elemResult = replaceHtmlSymbol(elemResult);\n      } // 普通 DOM 节点\n\n\n      if (nodeType === 1) {\n        elemResult = {}; // tag\n\n        elemResult.tag = curElem.nodeName.toLowerCase(); // attr\n\n        var attrData = [];\n        var attrList = curElem.attributes || {};\n        var attrListLength = attrList.length || 0;\n\n        for (var i = 0; i < attrListLength; i++) {\n          var attr = attrList[i];\n          attrData.push({\n            name: attr.name,\n            value: attr.value\n          });\n        }\n\n        elemResult.attrs = attrData; // children（递归）\n\n        elemResult.children = getChildrenJSON($(curElem));\n      }\n\n      result.push(elemResult);\n    });\n    return result;\n  } // 构造函数\n\n\n  function Text(editor) {\n    this.editor = editor;\n  } // 修改原型\n\n\n  Text.prototype = {\n    constructor: Text,\n    // 初始化\n    init: function init() {\n      // 绑定事件\n      this._bindEvent();\n    },\n    // 清空内容\n    clear: function clear() {\n      this.html('<p><br></p>');\n    },\n    // 获取 设置 html\n    html: function html(val) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      var html = void 0;\n\n      if (val == null) {\n        html = $textElem.html(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n        html = html.replace(/\\u200b/gm, '');\n        return html;\n      } else {\n        $textElem.html(val); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      }\n    },\n    // 获取 JSON\n    getJSON: function getJSON() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      return getChildrenJSON($textElem);\n    },\n    // 获取 设置 text\n    text: function text(val) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      var text = void 0;\n\n      if (val == null) {\n        text = $textElem.text(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n        text = text.replace(/\\u200b/gm, '');\n        return text;\n      } else {\n        $textElem.text('<p>' + val + '</p>'); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      }\n    },\n    // 追加内容\n    append: function append(html) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.append($(html)); // 初始化选取，将光标定位到内容尾部\n\n      editor.initSelection();\n    },\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n      // 实时保存选取\n      this._saveRangeRealTime(); // 按回车建时的特殊处理\n\n\n      this._enterKeyHandle(); // 清空时保留 <p><br></p>\n\n\n      this._clearHandle(); // 粘贴事件（粘贴文字，粘贴图片）\n\n\n      this._pasteHandle(); // tab 特殊处理\n\n\n      this._tabHandle(); // img 点击\n\n\n      this._imgHandle(); // 拖拽事件\n\n\n      this._dragHandle();\n    },\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem; // 保存当前的选区\n\n      function saveRange(e) {\n        // 随时保存选区\n        editor.selection.saveRange(); // 更新按钮 ative 状态\n\n        editor.menus.changeActive();\n      } // 按键后保存\n\n\n      $textElem.on('keyup', saveRange);\n      $textElem.on('mousedown', function (e) {\n        // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n        $textElem.on('mouseleave', saveRange);\n      });\n      $textElem.on('mouseup', function (e) {\n        saveRange(); // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n\n        $textElem.off('mouseleave', saveRange);\n      });\n    },\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n\n      function insertEmptyP($selectionElem) {\n        var $p = $('<p><br></p>');\n        $p.insertBefore($selectionElem);\n        editor.selection.createRangeByElem($p, true);\n        editor.selection.restoreSelection();\n        $selectionElem.remove();\n      } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n      function pHandle(e) {\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var $parentElem = $selectionElem.parent();\n\n        if ($parentElem.html() === '<code><br></code>') {\n          // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n          // 而且继续回车跳不出去，因此只能特殊处理\n          insertEmptyP($selectionElem);\n          return;\n        }\n\n        if (!$parentElem.equal($textElem)) {\n          // 不是顶级标签\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName();\n\n        if (nodeName === 'P') {\n          // 当前的标签是 P ，不用做处理\n          return;\n        }\n\n        if ($selectionElem.text()) {\n          // 有内容，不做处理\n          return;\n        } // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n\n\n        insertEmptyP($selectionElem);\n      }\n\n      $textElem.on('keyup', function (e) {\n        if (e.keyCode !== 13) {\n          // 不是回车键\n          return;\n        } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n        pHandle(e);\n      }); // <pre><code></code></pre> 回车时 特殊处理\n\n      function codeHandle(e) {\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var $parentElem = $selectionElem.parent();\n        var selectionNodeName = $selectionElem.getNodeName();\n        var parentNodeName = $parentElem.getNodeName();\n\n        if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n          // 不符合要求 忽略\n          return;\n        }\n\n        if (!editor.cmd.queryCommandSupported('insertHTML')) {\n          // 必须原生支持 insertHTML 命令\n          return;\n        } // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n\n\n        if (editor._willBreakCode === true) {\n          // 此时可以跳出代码块\n          // 插入 <p> ，并将选取定位到 <p>\n          var $p = $('<p><br></p>');\n          $p.insertAfter($parentElem);\n          editor.selection.createRangeByElem($p, true);\n          editor.selection.restoreSelection(); // 修改状态\n\n          editor._willBreakCode = false;\n          e.preventDefault();\n          return;\n        }\n\n        var _startOffset = editor.selection.getRange().startOffset; // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n\n        editor.cmd.do('insertHTML', '\\n');\n        editor.selection.saveRange();\n\n        if (editor.selection.getRange().startOffset === _startOffset) {\n          // 没起作用，再来一遍\n          editor.cmd.do('insertHTML', '\\n');\n        }\n\n        var codeLength = $selectionElem.html().length;\n\n        if (editor.selection.getRange().startOffset + 1 === codeLength) {\n          // 说明光标在代码最后的位置，执行了回车操作\n          // 记录下来，以便下次回车时候跳出 code\n          editor._willBreakCode = true;\n        } // 阻止默认行为\n\n\n        e.preventDefault();\n      }\n\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 13) {\n          // 不是回车键\n          // 取消即将跳转代码块的记录\n          editor._willBreakCode = false;\n          return;\n        } // <pre><code></code></pre> 回车时 特殊处理\n\n\n        codeHandle(e);\n      });\n    },\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 8) {\n          return;\n        }\n\n        var txtHtml = $textElem.html().toLowerCase().trim();\n\n        if (txtHtml === '<p><br></p>') {\n          // 最后剩下一个空行，就不再删除了\n          e.preventDefault();\n          return;\n        }\n      });\n      $textElem.on('keyup', function (e) {\n        if (e.keyCode !== 8) {\n          return;\n        }\n\n        var $p = void 0;\n        var txtHtml = $textElem.html().toLowerCase().trim(); // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n\n        if (!txtHtml || txtHtml === '<br>') {\n          // 内容空了\n          $p = $('<p><br/></p>');\n          $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n\n          $textElem.append($p);\n          editor.selection.createRangeByElem($p, false, true);\n          editor.selection.restoreSelection();\n        }\n      });\n    },\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n      var editor = this.editor;\n      var config = editor.config;\n      var pasteFilterStyle = config.pasteFilterStyle;\n      var pasteTextHandle = config.pasteTextHandle;\n      var ignoreImg = config.pasteIgnoreImg;\n      var $textElem = editor.$textElem; // 粘贴图片、文本的事件，每次只能执行一个\n      // 判断该次粘贴事件是否可以执行\n\n      var pasteTime = 0;\n\n      function canDo() {\n        var now = Date.now();\n        var flag = false;\n\n        if (now - pasteTime >= 100) {\n          // 间隔大于 100 ms ，可以执行\n          flag = true;\n        }\n\n        pasteTime = now;\n        return flag;\n      }\n\n      function resetTime() {\n        pasteTime = 0;\n      } // 粘贴文字\n\n\n      $textElem.on('paste', function (e) {\n        if (UA.isIE()) {\n          return;\n        } else {\n          // 阻止默认行为，使用 execCommand 的粘贴命令\n          e.preventDefault();\n        } // 粘贴图片和文本，只能同时使用一个\n\n\n        if (!canDo()) {\n          return;\n        } // 获取粘贴的文字\n\n\n        var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n        var pasteText = getPasteText(e);\n        pasteText = pasteText.replace(/\\n/gm, '<br>');\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName(); // code 中只能粘贴纯文本\n\n        if (nodeName === 'CODE' || nodeName === 'PRE') {\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteText = '' + (pasteTextHandle(pasteText) || '');\n          }\n\n          editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n          return;\n        } // 先放开注释，有问题再追查 ————\n        // // 表格中忽略，可能会出现异常问题\n        // if (nodeName === 'TD' || nodeName === 'TH') {\n        //     return\n        // }\n\n\n        if (!pasteHtml) {\n          // 没有内容，可继续执行下面的图片粘贴\n          resetTime();\n          return;\n        }\n\n        try {\n          // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n          // 因此执行 insertHTML 会报错\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n          }\n\n          editor.cmd.do('insertHTML', pasteHtml);\n        } catch (ex) {\n          // 此时使用 pasteText 来兼容一下\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteText = '' + (pasteTextHandle(pasteText) || '');\n          }\n\n          editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n        }\n      }); // 粘贴图片\n\n      $textElem.on('paste', function (e) {\n        if (UA.isIE()) {\n          return;\n        } else {\n          e.preventDefault();\n        } // 粘贴图片和文本，只能同时使用一个\n\n\n        if (!canDo()) {\n          return;\n        } // 获取粘贴的图片\n\n\n        var pasteFiles = getPasteImgs(e);\n\n        if (!pasteFiles || !pasteFiles.length) {\n          return;\n        } // 获取当前的元素\n\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName(); // code 中粘贴忽略\n\n        if (nodeName === 'CODE' || nodeName === 'PRE') {\n          return;\n        } // 上传图片\n\n\n        var uploadImg = editor.uploadImg;\n        uploadImg.uploadImg(pasteFiles);\n      });\n    },\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 9) {\n          return;\n        }\n\n        if (!editor.cmd.queryCommandSupported('insertHTML')) {\n          // 必须原生支持 insertHTML 命令\n          return;\n        }\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var $parentElem = $selectionElem.parent();\n        var selectionNodeName = $selectionElem.getNodeName();\n        var parentNodeName = $parentElem.getNodeName();\n\n        if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n          // <pre><code> 里面\n          editor.cmd.do('insertHTML', '    ');\n        } else {\n          // 普通文字\n          editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n        }\n\n        e.preventDefault();\n      });\n    },\n    // img 点击\n    _imgHandle: function _imgHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem; // 为图片增加 selected 样式\n\n      $textElem.on('click', 'img', function (e) {\n        var img = this;\n        var $img = $(img);\n\n        if ($img.attr('data-w-e') === '1') {\n          // 是表情图片，忽略\n          return;\n        } // 记录当前点击过的图片\n\n\n        editor._selectedImg = $img; // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n\n        editor.selection.createRangeByElem($img);\n        editor.selection.restoreSelection();\n      }); // 去掉图片的 selected 样式\n\n      $textElem.on('click  keyup', function (e) {\n        if (e.target.matches('img')) {\n          // 点击的是图片，忽略\n          return;\n        } // 删除记录\n\n\n        editor._selectedImg = null;\n      });\n    },\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n      var editor = this.editor; // 禁用 document 拖拽事件\n\n      var $document = $(document);\n      $document.on('dragleave drop dragenter dragover', function (e) {\n        e.preventDefault();\n      }); // 添加编辑区域拖拽事件\n\n      var $textElem = editor.$textElem;\n      $textElem.on('drop', function (e) {\n        e.preventDefault();\n        var files = e.dataTransfer && e.dataTransfer.files;\n\n        if (!files || !files.length) {\n          return;\n        } // 上传图片\n\n\n        var uploadImg = editor.uploadImg;\n        uploadImg.uploadImg(files);\n      });\n    }\n  };\n  /*\n      命令，封装 document.execCommand\n  */\n  // 构造函数\n\n  function Command(editor) {\n    this.editor = editor;\n  } // 修改原型\n\n\n  Command.prototype = {\n    constructor: Command,\n    // 执行命令\n    do: function _do(name, value) {\n      var editor = this.editor; // 使用 styleWithCSS\n\n      if (!editor._useStyleWithCSS) {\n        document.execCommand('styleWithCSS', null, true);\n        editor._useStyleWithCSS = true;\n      } // 如果无选区，忽略\n\n\n      if (!editor.selection.getRange()) {\n        return;\n      } // 恢复选取\n\n\n      editor.selection.restoreSelection(); // 执行\n\n      var _name = '_' + name;\n\n      if (this[_name]) {\n        // 有自定义事件\n        this[_name](value);\n      } else {\n        // 默认 command\n        this._execCommand(name, value);\n      } // 修改菜单状态\n\n\n      editor.menus.changeActive(); // 最后，恢复选取保证光标在原来的位置闪烁\n\n      editor.selection.saveRange();\n      editor.selection.restoreSelection(); // 触发 onchange\n\n      editor.change && editor.change();\n    },\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n      var editor = this.editor;\n      var range = editor.selection.getRange();\n\n      if (this.queryCommandSupported('insertHTML')) {\n        // W3C\n        this._execCommand('insertHTML', html);\n      } else if (range.insertNode) {\n        // IE\n        range.deleteContents();\n        range.insertNode($(html)[0]);\n      } else if (range.pasteHTML) {\n        // IE <= 10\n        range.pasteHTML(html);\n      }\n    },\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n      var editor = this.editor;\n      var range = editor.selection.getRange();\n\n      if (range.insertNode) {\n        range.deleteContents();\n        range.insertNode($elem[0]);\n      }\n    },\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n      document.execCommand(name, false, value);\n    },\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n      return document.queryCommandValue(name);\n    },\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n      return document.queryCommandState(name);\n    },\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n      return document.queryCommandSupported(name);\n    }\n  };\n  /*\n      selection range API\n  */\n  // 构造函数\n\n  function API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n  } // 修改原型\n\n\n  API.prototype = {\n    constructor: API,\n    // 获取 range 对象\n    getRange: function getRange() {\n      return this._currentRange;\n    },\n    // 保存选区\n    saveRange: function saveRange(_range) {\n      if (_range) {\n        // 保存已有选区\n        this._currentRange = _range;\n        return;\n      } // 获取当前的选区\n\n\n      var selection = window.getSelection();\n\n      if (selection.rangeCount === 0) {\n        return;\n      }\n\n      var range = selection.getRangeAt(0); // 判断选区内容是否在编辑内容之内\n\n      var $containerElem = this.getSelectionContainerElem(range);\n\n      if (!$containerElem) {\n        return;\n      } // 判断选区内容是否在不可编辑区域之内\n\n\n      if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n        return;\n      }\n\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n\n      if ($textElem.isContain($containerElem)) {\n        // 是编辑内容之内的\n        this._currentRange = range;\n      }\n    },\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n      if (toStart == null) {\n        // 默认为 false\n        toStart = false;\n      }\n\n      var range = this._currentRange;\n\n      if (range) {\n        range.collapse(toStart);\n      }\n    },\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n      var range = this._currentRange;\n\n      if (range) {\n        return this._currentRange.toString();\n      } else {\n        return '';\n      }\n    },\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.commonAncestorContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.startContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.endContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n      var range = this._currentRange;\n\n      if (range && range.startContainer) {\n        if (range.startContainer === range.endContainer) {\n          if (range.startOffset === range.endOffset) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(this._currentRange);\n    },\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n      var editor = this.editor;\n      var range = this.getRange();\n      var $elem = void 0;\n\n      if (!range) {\n        // 当前无 range\n        return;\n      }\n\n      if (!this.isSelectionEmpty()) {\n        // 当前选区必须没有内容才可以\n        return;\n      }\n\n      try {\n        // 目前只支持 webkit 内核\n        if (UA.isWebkit()) {\n          // 插入 &#8203\n          editor.cmd.do('insertHTML', '&#8203;'); // 修改 offset 位置\n\n          range.setEnd(range.endContainer, range.endOffset + 1); // 存储\n\n          this.saveRange(range);\n        } else {\n          $elem = $('<strong>&#8203;</strong>');\n          editor.cmd.do('insertElem', $elem);\n          this.createRangeByElem($elem, true);\n        }\n      } catch (ex) {// 部分情况下会报错，兼容一下\n      }\n    },\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n      // $elem - 经过封装的 elem\n      // toStart - true 开始位置，false 结束位置\n      // isContent - 是否选中Elem的内容\n      if (!$elem.length) {\n        return;\n      }\n\n      var elem = $elem[0];\n      var range = document.createRange();\n\n      if (isContent) {\n        range.selectNodeContents(elem);\n      } else {\n        range.selectNode(elem);\n      }\n\n      if (typeof toStart === 'boolean') {\n        range.collapse(toStart);\n      } // 存储 range\n\n\n      this.saveRange(range);\n    }\n  };\n  /*\n      上传进度条\n  */\n\n  function Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n  }\n\n  Progress.prototype = {\n    constructor: Progress,\n    show: function show(progress) {\n      var _this = this; // 状态处理\n\n\n      if (this._isShow) {\n        return;\n      }\n\n      this._isShow = true; // 渲染\n\n      var $bar = this.$bar;\n\n      if (!this._isRender) {\n        var $textContainer = this.$textContainer;\n        $textContainer.append($bar);\n      } else {\n        this._isRender = true;\n      } // 改变进度（节流，100ms 渲染一次）\n\n\n      if (Date.now() - this._time > 100) {\n        if (progress <= 1) {\n          $bar.css('width', progress * 100 + '%');\n          this._time = Date.now();\n        }\n      } // 隐藏\n\n\n      var timeoutId = this._timeoutId;\n\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(function () {\n        _this._hide();\n      }, 500);\n    },\n    _hide: function _hide() {\n      var $bar = this.$bar;\n      $bar.remove(); // 修改状态\n\n      this._time = 0;\n      this._isShow = false;\n      this._isRender = false;\n    }\n  };\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  /*\n      上传图片\n  */\n  // 构造函数\n\n\n  function UploadImg(editor) {\n    this.editor = editor;\n  } // 原型\n\n\n  UploadImg.prototype = {\n    constructor: UploadImg,\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n      var editor = this.editor;\n      var debug = editor.config.debug;\n      var customAlert = editor.config.customAlert;\n\n      if (debug) {\n        throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n      } else {\n        if (customAlert && typeof customAlert === 'function') {\n          customAlert(alertInfo);\n        } else {\n          alert(alertInfo);\n        }\n      }\n    },\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n      var _this2 = this;\n\n      if (!link) {\n        return;\n      }\n\n      var editor = this.editor;\n      var config = editor.config; // 校验格式\n\n      var linkImgCheck = config.linkImgCheck;\n      var checkResult = void 0;\n\n      if (linkImgCheck && typeof linkImgCheck === 'function') {\n        checkResult = linkImgCheck(link);\n\n        if (typeof checkResult === 'string') {\n          // 校验失败，提示信息\n          alert(checkResult);\n          return;\n        }\n      }\n\n      editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>'); // 验证图片 url 是否有效，无效的话给出提示\n\n      var img = document.createElement('img');\n\n      img.onload = function () {\n        var callback = config.linkImgCallback;\n\n        if (callback && typeof callback === 'function') {\n          callback(link);\n        }\n\n        img = null;\n      };\n\n      img.onerror = function () {\n        img = null; // 无法成功下载图片\n\n        _this2._alert('插入图片错误', \"wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \\\"\" + link + \"\\\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25\");\n\n        return;\n      };\n\n      img.onabort = function () {\n        img = null;\n      };\n\n      img.src = link;\n    },\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n      var _this3 = this;\n\n      if (!files || !files.length) {\n        return;\n      } // ------------------------------ 获取配置信息 ------------------------------\n\n\n      var editor = this.editor;\n      var config = editor.config;\n      var uploadImgServer = config.uploadImgServer;\n      var uploadImgShowBase64 = config.uploadImgShowBase64;\n      var maxSize = config.uploadImgMaxSize;\n      var maxSizeM = maxSize / 1024 / 1024;\n      var maxLength = config.uploadImgMaxLength || 10000;\n      var uploadFileName = config.uploadFileName || '';\n      var uploadImgParams = config.uploadImgParams || {};\n      var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n      var uploadImgHeaders = config.uploadImgHeaders || {};\n      var hooks = config.uploadImgHooks || {};\n      var timeout = config.uploadImgTimeout || 3000;\n      var withCredentials = config.withCredentials;\n\n      if (withCredentials == null) {\n        withCredentials = false;\n      }\n\n      var customUploadImg = config.customUploadImg;\n\n      if (!customUploadImg) {\n        // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n        if (!uploadImgServer && !uploadImgShowBase64) {\n          return;\n        }\n      } // ------------------------------ 验证文件信息 ------------------------------\n\n\n      var resultFiles = [];\n      var errInfo = [];\n      arrForEach(files, function (file) {\n        var name = file.name;\n        var size = file.size; // chrome 低版本 name === undefined\n\n        if (!name || !size) {\n          return;\n        }\n\n        if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n          // 后缀名不合法，不是图片\n          errInfo.push(\"\\u3010\" + name + \"\\u3011\\u4E0D\\u662F\\u56FE\\u7247\");\n          return;\n        }\n\n        if (maxSize < size) {\n          // 上传图片过大\n          errInfo.push(\"\\u3010\" + name + \"\\u3011\\u5927\\u4E8E \" + maxSizeM + 'M');\n          return;\n        } // 验证通过的加入结果列表\n\n\n        resultFiles.push(file);\n      }); // 抛出验证信息\n\n      if (errInfo.length) {\n        this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n\n        return;\n      }\n\n      if (resultFiles.length > maxLength) {\n        this._alert('一次最多上传' + maxLength + '张图片');\n\n        return;\n      } // ------------------------------ 自定义上传 ------------------------------\n\n\n      if (customUploadImg && typeof customUploadImg === 'function') {\n        customUploadImg(resultFiles, this.insertLinkImg.bind(this)); // 阻止以下代码执行\n\n        return;\n      } // 添加图片数据\n\n\n      var formdata = new FormData();\n      arrForEach(resultFiles, function (file) {\n        var name = uploadFileName || file.name;\n        formdata.append(name, file);\n      }); // ------------------------------ 上传图片 ------------------------------\n\n      if (uploadImgServer && typeof uploadImgServer === 'string') {\n        // 添加参数\n        var uploadImgServerArr = uploadImgServer.split('#');\n        uploadImgServer = uploadImgServerArr[0];\n        var uploadImgServerHash = uploadImgServerArr[1] || '';\n        objForEach(uploadImgParams, function (key, val) {\n          // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n          // val = encodeURIComponent(val)\n          // 第一，将参数拼接到 url 中\n          if (uploadImgParamsWithUrl) {\n            if (uploadImgServer.indexOf('?') > 0) {\n              uploadImgServer += '&';\n            } else {\n              uploadImgServer += '?';\n            }\n\n            uploadImgServer = uploadImgServer + key + '=' + val;\n          } // 第二，将参数添加到 formdata 中\n\n\n          formdata.append(key, val);\n        });\n\n        if (uploadImgServerHash) {\n          uploadImgServer += '#' + uploadImgServerHash;\n        } // 定义 xhr\n\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', uploadImgServer); // 设置超时\n\n        xhr.timeout = timeout;\n\n        xhr.ontimeout = function () {\n          // hook - timeout\n          if (hooks.timeout && typeof hooks.timeout === 'function') {\n            hooks.timeout(xhr, editor);\n          }\n\n          _this3._alert('上传图片超时');\n        }; // 监控 progress\n\n\n        if (xhr.upload) {\n          xhr.upload.onprogress = function (e) {\n            var percent = void 0; // 进度条\n\n            var progressBar = new Progress(editor);\n\n            if (e.lengthComputable) {\n              percent = e.loaded / e.total;\n              progressBar.show(percent);\n            }\n          };\n        } // 返回数据\n\n\n        xhr.onreadystatechange = function () {\n          var result = void 0;\n\n          if (xhr.readyState === 4) {\n            if (xhr.status < 200 || xhr.status >= 300) {\n              // hook - error\n              if (hooks.error && typeof hooks.error === 'function') {\n                hooks.error(xhr, editor);\n              } // xhr 返回状态错误\n\n\n              _this3._alert('上传图片发生错误', \"\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F \" + xhr.status);\n\n              return;\n            }\n\n            result = xhr.responseText;\n\n            if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n              try {\n                result = JSON.parse(result);\n              } catch (ex) {\n                // hook - fail\n                if (hooks.fail && typeof hooks.fail === 'function') {\n                  hooks.fail(xhr, editor, result);\n                }\n\n                _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n\n                return;\n              }\n            }\n\n            if (!hooks.customInsert && result.errno != '0') {\n              // hook - fail\n              if (hooks.fail && typeof hooks.fail === 'function') {\n                hooks.fail(xhr, editor, result);\n              } // 数据错误\n\n\n              _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n            } else {\n              if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                // 使用者自定义插入方法\n                hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n              } else {\n                // 将图片插入编辑器\n                var data = result.data || [];\n                data.forEach(function (link) {\n                  _this3.insertLinkImg(link);\n                });\n              } // hook - success\n\n\n              if (hooks.success && typeof hooks.success === 'function') {\n                hooks.success(xhr, editor, result);\n              }\n            }\n          }\n        }; // hook - before\n\n\n        if (hooks.before && typeof hooks.before === 'function') {\n          var beforeResult = hooks.before(xhr, editor, resultFiles);\n\n          if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n            if (beforeResult.prevent) {\n              // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n              this._alert(beforeResult.msg);\n\n              return;\n            }\n          }\n        } // 自定义 headers\n\n\n        objForEach(uploadImgHeaders, function (key, val) {\n          xhr.setRequestHeader(key, val);\n        }); // 跨域传 cookie\n\n        xhr.withCredentials = withCredentials; // 发送请求\n\n        xhr.send(formdata); // 注意，要 return 。不去操作接下来的 base64 显示方式\n\n        return;\n      } // ------------------------------ 显示 base64 格式 ------------------------------\n\n\n      if (uploadImgShowBase64) {\n        arrForEach(files, function (file) {\n          var _this = _this3;\n          var reader = new FileReader();\n          reader.readAsDataURL(file);\n\n          reader.onload = function () {\n            _this.insertLinkImg(this.result);\n          };\n        });\n      }\n    }\n  };\n  /*\n      编辑器构造函数\n  */\n  // id，累加\n\n  var editorId = 1; // 构造函数\n\n  function Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n      // 没有传入任何参数，报错\n      throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    } // id，用以区分单个页面不同的编辑器对象\n\n\n    this.id = 'wangEditor-' + editorId++;\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector; // 自定义配置\n\n    this.customConfig = {};\n  } // 修改原型\n\n\n  Editor.prototype = {\n    constructor: Editor,\n    // 初始化配置\n    _initConfig: function _initConfig() {\n      // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n      var target = {};\n      this.config = Object.assign(target, config, this.customConfig); // 将语言配置，生成正则表达式\n\n      var langConfig = this.config.lang || {};\n      var langArgs = [];\n      objForEach(langConfig, function (key, val) {\n        // key 即需要生成正则表达式的规则，如“插入链接”\n        // val 即需要被替换成的语言，如“insert link”\n        langArgs.push({\n          reg: new RegExp(key, 'img'),\n          val: val\n        });\n      });\n      this.config.langArgs = langArgs;\n    },\n    // 初始化 DOM\n    _initDom: function _initDom() {\n      var _this = this;\n\n      var toolbarSelector = this.toolbarSelector;\n      var $toolbarSelector = $(toolbarSelector);\n      var textSelector = this.textSelector;\n      var config$$1 = this.config;\n      var zIndex = config$$1.zIndex; // 定义变量\n\n      var $toolbarElem = void 0,\n          $textContainerElem = void 0,\n          $textElem = void 0,\n          $children = void 0;\n\n      if (textSelector == null) {\n        // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n        $toolbarElem = $('<div></div>');\n        $textContainerElem = $('<div></div>'); // 将编辑器区域原有的内容，暂存起来\n\n        $children = $toolbarSelector.children(); // 添加到 DOM 结构中\n\n        $toolbarSelector.append($toolbarElem).append($textContainerElem); // 自行创建的，需要配置默认的样式\n\n        $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n        $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n      } else {\n        // toolbar 和 text 的选择器都有值，记录属性\n        $toolbarElem = $toolbarSelector;\n        $textContainerElem = $(textSelector); // 将编辑器区域原有的内容，暂存起来\n\n        $children = $textContainerElem.children();\n      } // 编辑区域\n\n\n      $textElem = $('<div></div>');\n      $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%'); // 初始化编辑区域内容\n\n      if ($children && $children.length) {\n        $textElem.append($children);\n      } else {\n        $textElem.append($('<p><br></p>'));\n      } // 编辑区域加入DOM\n\n\n      $textContainerElem.append($textElem); // 设置通用的 class\n\n      $toolbarElem.addClass('w-e-toolbar');\n      $textContainerElem.addClass('w-e-text-container');\n      $textContainerElem.css('z-index', zIndex);\n      $textElem.addClass('w-e-text'); // 添加 ID\n\n      var toolbarElemId = getRandom('toolbar-elem');\n      $toolbarElem.attr('id', toolbarElemId);\n      var textElemId = getRandom('text-elem');\n      $textElem.attr('id', textElemId); // 记录属性\n\n      this.$toolbarElem = $toolbarElem;\n      this.$textContainerElem = $textContainerElem;\n      this.$textElem = $textElem;\n      this.toolbarElemId = toolbarElemId;\n      this.textElemId = textElemId; // 记录输入法的开始和结束\n\n      var compositionEnd = true;\n      $textContainerElem.on('compositionstart', function () {\n        // 输入法开始输入\n        compositionEnd = false;\n      });\n      $textContainerElem.on('compositionend', function () {\n        // 输入法结束输入\n        compositionEnd = true;\n      }); // 绑定 onchange\n\n      $textContainerElem.on('click keyup', function () {\n        // 输入法结束才出发 onchange\n        compositionEnd && _this.change && _this.change();\n      });\n      $toolbarElem.on('click', function () {\n        this.change && this.change();\n      }); //绑定 onfocus 与 onblur 事件\n\n      if (config$$1.onfocus || config$$1.onblur) {\n        // 当前编辑器是否是焦点状态\n        this.isFocus = false;\n        $(document).on('click', function (e) {\n          //判断当前点击元素是否在编辑器内\n          var isChild = $textElem.isContain($(e.target)); //判断当前点击元素是否为工具栏\n\n          var isToolbar = $toolbarElem.isContain($(e.target));\n          var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n          if (!isChild) {\n            //若为选择工具栏中的功能，则不视为成blur操作\n            if (isToolbar && !isMenu) {\n              return;\n            }\n\n            if (_this.isFocus) {\n              _this.onblur && _this.onblur();\n            }\n\n            _this.isFocus = false;\n          } else {\n            if (!_this.isFocus) {\n              _this.onfocus && _this.onfocus();\n            }\n\n            _this.isFocus = true;\n          }\n        });\n      }\n    },\n    // 封装 command\n    _initCommand: function _initCommand() {\n      this.cmd = new Command(this);\n    },\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n      this.selection = new API(this);\n    },\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n      this.uploadImg = new UploadImg(this);\n    },\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n      this.menus = new Menus(this);\n      this.menus.init();\n    },\n    // 添加 text 区域\n    _initText: function _initText() {\n      this.txt = new Text(this);\n      this.txt.init();\n    },\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n      var $textElem = this.$textElem;\n      var $children = $textElem.children();\n\n      if (!$children.length) {\n        // 如果编辑器区域无内容，添加一个空行，重新设置选区\n        $textElem.append($('<p><br></p>'));\n        this.initSelection();\n        return;\n      }\n\n      var $last = $children.last();\n\n      if (newLine) {\n        // 新增一个空行\n        var html = $last.html().toLowerCase();\n        var nodeName = $last.getNodeName();\n\n        if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n          // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n          $textElem.append($('<p><br></p>'));\n          this.initSelection();\n          return;\n        }\n      }\n\n      this.selection.createRangeByElem($last, false, true);\n      this.selection.restoreSelection();\n    },\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n      // -------- 绑定 onchange 事件 --------\n      var onChangeTimeoutId = 0;\n      var beforeChangeHtml = this.txt.html();\n      var config$$1 = this.config; // onchange 触发延迟时间\n\n      var onchangeTimeout = config$$1.onchangeTimeout;\n      onchangeTimeout = parseInt(onchangeTimeout, 10);\n\n      if (!onchangeTimeout || onchangeTimeout <= 0) {\n        onchangeTimeout = 200;\n      }\n\n      var onchange = config$$1.onchange;\n\n      if (onchange && typeof onchange === 'function') {\n        // 触发 change 的有三个场景：\n        // 1. $textContainerElem.on('click keyup')\n        // 2. $toolbarElem.on('click')\n        // 3. editor.cmd.do()\n        this.change = function () {\n          // 判断是否有变化\n          var currentHtml = this.txt.html();\n\n          if (currentHtml.length === beforeChangeHtml.length) {\n            // 需要比较每一个字符\n            if (currentHtml === beforeChangeHtml) {\n              return;\n            }\n          } // 执行，使用节流\n\n\n          if (onChangeTimeoutId) {\n            clearTimeout(onChangeTimeoutId);\n          }\n\n          onChangeTimeoutId = setTimeout(function () {\n            // 触发配置的 onchange 函数\n            onchange(currentHtml);\n            beforeChangeHtml = currentHtml;\n          }, onchangeTimeout);\n        };\n      } // -------- 绑定 onblur 事件 --------\n\n\n      var onblur = config$$1.onblur;\n\n      if (onblur && typeof onblur === 'function') {\n        this.onblur = function () {\n          var currentHtml = this.txt.html();\n          onblur(currentHtml);\n        };\n      } // -------- 绑定 onfocus 事件 --------\n\n\n      var onfocus = config$$1.onfocus;\n\n      if (onfocus && typeof onfocus === 'function') {\n        this.onfocus = function () {\n          onfocus();\n        };\n      }\n    },\n    // 创建编辑器\n    create: function create() {\n      // 初始化配置信息\n      this._initConfig(); // 初始化 DOM\n\n\n      this._initDom(); // 封装 command API\n\n\n      this._initCommand(); // 封装 selection range API\n\n\n      this._initSelectionAPI(); // 添加 text\n\n\n      this._initText(); // 初始化菜单\n\n\n      this._initMenus(); // 添加 图片上传\n\n\n      this._initUploadImg(); // 初始化选区，将光标定位到内容尾部\n\n\n      this.initSelection(true); // 绑定事件\n\n      this._bindEvent();\n    },\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n      $.offAll();\n    }\n  }; // 检验是否浏览器环境\n\n  try {\n    document;\n  } catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n  } // polyfill\n\n\n  polyfill(); // 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\n\n  var inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}'; // 将 css 代码添加到 <style> 中\n\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  style.innerHTML = inlinecss;\n  document.getElementsByTagName('HEAD').item(0).appendChild(style); // 返回\n\n  var index = window.wangEditor || Editor;\n  return index;\n});"],"sourceRoot":""}