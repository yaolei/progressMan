{"version":3,"sources":["components/Charts/G2/G2.js","components/Charts/G2/index.js","decorator/resizeMe.js","routes/Dashboard/components/index.js","components/Panel/Panel.js","components/Panel/index.js"],"names":["Chart","BizCharts","Charts","resizeMe","refreshRate","onGetG2Instance","chart","_this","_this2","this","_this$props","props","size","children","otherProps","Object","objectWithoutProperties","width","height","react_default","a","createElement","assign","padding","PureComponent","track","setTheme","defaultColor","shape","interval","fillOpacity","G2","debounce","$$","throttle","defaultConfig","refreshMode","config","arguments","length","undefined","refreshFunc","WrappedComponent","_PureComponent","_temp","_Users_evan_progressMan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_evan_progressMan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_evan_progressMan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onResize","element","parentNode","_getComputedStyle","getComputedStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","parseInt","setState","onResizeStrategy","state","position","_Users_evan_progressMan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_evan_progressMan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","resizeSensor","ResizeSensor","detach","_this$state","className","_Users_evan_progressMan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7___default","ref","node","style","_Users_evan_progressMan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","Content","Axis","Geom","Tooltip","Legend","Coord","Label","rankingListData","i","push","title","concat","total","Dashboard","connect","_ref","dashboard","bar1","bar2","react__WEBPACK_IMPORTED_MODULE_11___default","antd_lib_layout__WEBPACK_IMPORTED_MODULE_10___default","antd_lib_row__WEBPACK_IMPORTED_MODULE_1___default","gutter","antd_lib_col__WEBPACK_IMPORTED_MODULE_3___default","md","components_Panel__WEBPACK_IMPORTED_MODULE_15__","header","cover","components_Icon__WEBPACK_IMPORTED_MODULE_13__","type","antd","Bar2","data","map","item","Line1","Pie1","Bar1","BaseComponent","scale","sales","tickInterval","name","crosshairs","color","dv","DataSet","createView","source","transform","fields","adjust","marginRatio","DataView","count","field","dimension","as","percent","formatter","val","radius","innerRadius","offsetY","window","innerHeight","offsetX","showTitle","itemTpl","tooltip","lineWidth","stroke","content","point","month","Tokyo","London","range","label","confirm","modal_default","noop","_","Panel","classCallCheck","possibleConstructorReturn","getPrototypeOf","onExpand","expand","e","onChange","collapse","onCollapse","onRefresh","refresh","animationName","onClose","onOk","nextProps","st","keys","theme","prefix","scroll","classnames","cx","panel-fullscreen","panel-collapsed","styles","objectSpread","bodyStyles","overflow","Header","onClick","Icon","popconfirm_default","onConfirm","placement","CSSAnimate","callback","Component","defaultProps"],"mappings":"sLAGQA,EAAUC,QAQZC,EADLC,YAAS,CAAEC,YAAa,kNAEvBC,gBAAkB,SAAAC,GAChBC,EAAKD,MAAQA,2EAGN,IAAAE,EAAAC,KAAAC,EACmCD,KAAKE,MAAvCC,EADDF,EACCE,KAAMC,EADPH,EACOG,SAAaC,EADpBC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,qBAECO,EAAkBL,EAAlBK,MAAOC,EAAWN,EAAXM,OAEf,OACEC,EAAAC,EAAAC,cAACrB,EAADe,OAAAO,OAAA,CACEJ,OAAQA,EACRD,MAAOA,EACPM,QAAS,QACLT,EAJN,CAKET,gBAAiB,SAACC,GAChBE,EAAKF,MAAQA,KAGdO,UAnBYW,qBAyBrBvB,QAAkBC,EACHD,QCxBfwB,iBAAM,GACNC,mBAVe,CACbC,aAAc,UACdC,MAAO,CACLC,SAAU,CACRC,YAAa,MAOJC,wJCZPC,EAAuBC,IAAvBD,SAAUE,EAAaD,IAAbC,SAQZC,EAAgB,CACpB/B,YAAa,GACbgC,YAAa,YAkFAjC,IA/EE,WAA4B,IAA3BkC,EAA2BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlBH,EACnBM,EAAqC,aAAvBJ,EAAOD,YAA6BF,EAAWF,EAEnE,OAAO,SAAAU,GACL,gBAAAC,GACE,SAAAC,EAAYjC,GAAO,IAAAJ,EAAA,OAAAQ,OAAA8B,EAAA,EAAA9B,CAAAN,KAAAmC,IACjBrC,EAAAQ,OAAA+B,EAAA,EAAA/B,CAAAN,KAAAM,OAAAgC,EAAA,EAAAhC,CAAA6B,GAAAI,KAAAvC,KAAME,KAoBRsC,SAAW,WACT,GAAK1C,EAAK2C,QAAV,CAEA,IAAMA,EAAU3C,EAAK2C,QAAQC,WACrBF,EAAa1C,EAAKI,MAAlBsC,SAJOG,EAYXC,iBAAiBH,GANnBjC,EANamC,EAMbnC,MACAC,EAPakC,EAOblC,OACAoC,EARaF,EAQbE,YACAC,EATaH,EASbG,aACAC,EAVaJ,EAUbI,WACAC,EAXaL,EAWbK,cAGI7C,EAAO,CACXK,MACEyC,SAASzC,EAAO,IAChByC,SAASJ,EAAa,IACtBI,SAASH,EAAc,IACzBrC,OACEwC,SAASxC,EAAQ,IACjBwC,SAASF,EAAY,IACrBE,SAASD,EAAe,KAE5BlD,EAAKoD,SAAS/C,GAEdqC,GAAYA,EAASrC,KA7CrBL,EAAKqD,iBAAmBnB,EAAYlC,EAAK0C,SAAUZ,EAAOjC,aAC1DG,EAAKsD,MAAQ,CACX5C,WAAOuB,EACPtB,YAAQsB,EACRsB,cAAUtB,GANKjC,EADrB,OAAAQ,OAAAgD,EAAA,EAAAhD,CAAA6B,EAAAD,GAAA5B,OAAAiD,EAAA,EAAAjD,CAAA6B,EAAA,EAAAqB,IAAA,oBAAAC,MAAA,WAYI,IAAMhB,EAAUzC,KAAKyC,QAAQC,WAC7B1C,KAAK0D,aAAe,IAAIC,IAAalB,EAASzC,KAAKmD,kBACnDnD,KAAKmD,qBAdT,CAAAK,IAAA,uBAAAC,MAAA,WAkBI,IAAMhB,EAAUzC,KAAKyC,QAAQC,WAC7B1C,KAAK0D,aAAaE,OAAOnB,EAASzC,KAAKmD,oBAnB3C,CAAAK,IAAA,SAAAC,MAAA,WAmDW,IAAA1D,EAAAC,KAAA6D,EACmB7D,KAAKoD,MAAvB5C,EADDqD,EACCrD,MAAOC,EADRoD,EACQpD,OADRR,EAE8BD,KAAKE,MAAlC4D,EAFD7D,EAEC6D,UAAczD,EAFfC,OAAAyD,EAAA,EAAAzD,CAAAL,EAAA,eAQP,OACE+D,EAAArD,EAAAC,cAAA,OACEqD,IAAK,SAAAC,GAAI,OAAKnE,EAAK0C,QAAUyB,GAC7BC,MARW,CACbd,SAAU,WACV7C,MAAO,OACPC,OAAQ,QAMNqD,UAAWA,GAEVtD,GAASC,EACRuD,EAAArD,EAAAC,cAACqB,EAAD3B,OAAAO,OAAA,GAAsBR,EAAtB,CAAkCF,KAAIG,OAAA8D,EAAA,EAAA9D,CAAA,GAAON,KAAKoD,UAChD,UAnEZjB,EAAA,CAAqBpB,iICPzB,sMAJQsD,wBACA9E,EAAqD+B,IAArD/B,MAAO+E,EAA8ChD,IAA9CgD,KAAMC,EAAwCjD,IAAxCiD,KAAMC,EAAkClD,IAAlCkD,QAASC,EAAyBnD,IAAzBmD,OAAQC,EAAiBpD,IAAjBoD,MAAOC,EAAUrD,IAAVqD,MAE7CC,EAAkB,GACfC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BD,EAAgBE,KAAK,CACnBC,MAAK,sBAAAC,OAASH,EAAT,iBACLI,MAAO,aAOUC,EAHpBC,kBAAQ,SAAAC,GAAA,MAAoB,CAC3BC,UADOD,EAAGC,gMAID,IACCA,EAAcrF,KAAKE,MAAnBmF,UACAC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACd,OACEC,EAAA7E,EAAAC,cAAA6E,EAAA9E,EAAA,CAAQmD,UAAU,mCAChB0B,EAAA7E,EAAAC,cAACyD,EAAD,KACEmB,EAAA7E,EAAAC,cAAA8E,EAAA/E,EAAA,CAAKgF,OAAQ,IACXH,EAAA7E,EAAAC,cAAAgF,EAAAjF,EAAA,CAAKkF,GAAI,GACPL,EAAA7E,EAAAC,cAACkF,EAAA,EAAD,CAAOhC,UAAU,KAAKiC,QAAQ,EAAOC,OAAK,GACxCR,EAAA7E,EAAAC,cAACqF,EAAA,EAAD,CAAMC,KAAK,KAAKC,MAAI,IACpBX,EAAA7E,EAAAC,cAAA,UACE4E,EAAA7E,EAAAC,cAAA,iBAEF4E,EAAA7E,EAAAC,cAAA,MAAIkD,UAAU,cAAd,QAGJ0B,EAAA7E,EAAAC,cAAAgF,EAAAjF,EAAA,CAAKkF,GAAI,GACPL,EAAA7E,EAAAC,cAACkF,EAAA,EAAD,CAAOhC,UAAU,SAASiC,QAAQ,EAAOC,OAAK,GAC5CR,EAAA7E,EAAAC,cAACqF,EAAA,EAAD,CAAMC,KAAK,SAASC,MAAI,IACxBX,EAAA7E,EAAAC,cAAA,UACE4E,EAAA7E,EAAAC,cAAA,iBAEF4E,EAAA7E,EAAAC,cAAA,MAAIkD,UAAU,cAAd,kBAGJ0B,EAAA7E,EAAAC,cAAAgF,EAAAjF,EAAA,CAAKkF,GAAI,GACPL,EAAA7E,EAAAC,cAACkF,EAAA,EAAD,CAAOhC,UAAU,QAAQiC,QAAQ,EAAOC,OAAK,GAC3CR,EAAA7E,EAAAC,cAACqF,EAAA,EAAD,CAAMC,KAAK,QAAQC,MAAI,IACvBX,EAAA7E,EAAAC,cAAA,UACE4E,EAAA7E,EAAAC,cAAA,eAEF4E,EAAA7E,EAAAC,cAAA,MAAIkD,UAAU,cAAd,WAGJ0B,EAAA7E,EAAAC,cAAAgF,EAAAjF,EAAA,CAAKkF,GAAI,GACPL,EAAA7E,EAAAC,cAACkF,EAAA,EAAD,CAAOhC,UAAU,SAASiC,QAAQ,EAAOC,OAAK,GAC5CR,EAAA7E,EAAAC,cAACqF,EAAA,EAAD,CAAMC,KAAK,SAASC,MAAI,IACxBX,EAAA7E,EAAAC,cAAA,UACE4E,EAAA7E,EAAAC,cAAA,iBAEF4E,EAAA7E,EAAAC,cAAA,MAAIkD,UAAU,cAAd,aAIN0B,EAAA7E,EAAAC,cAAA8E,EAAA/E,EAAA,KACE6E,EAAA7E,EAAAC,cAAAgF,EAAAjF,EAAA,KACE6E,EAAA7E,EAAAC,cAACkF,EAAA,EAAD,CAAOf,MAAM,uCAAStE,OAAQ,KAC5B+E,EAAA7E,EAAAC,cAAA,OAAKkD,UAAU,QACb0B,EAAA7E,EAAAC,cAAA,OAAKkD,UAAU,qCACb0B,EAAA7E,EAAAC,cAAA,MAAIkD,UAAU,aAAd,kCACA0B,EAAA7E,EAAAC,cAAA,OAAKkD,UAAU,oBACb0B,EAAA7E,EAAAC,cAACwF,EAAD,CAAMC,KAAMd,MAGhBC,EAAA7E,EAAAC,cAAA,OAAKkD,UAAU,yBACb0B,EAAA7E,EAAAC,cAAA,wDACA4E,EAAA7E,EAAAC,cAAA,UACGgE,EAAgB0B,IAAI,SAACC,EAAM1B,GAAP,OACnBW,EAAA7E,EAAAC,cAAA,MAAI4C,IAAK+C,EAAKxB,OACZS,EAAA7E,EAAAC,cAAA,YAAOiE,EAAI,GACXW,EAAA7E,EAAAC,cAAA,YAAO2F,EAAKxB,OACZS,EAAA7E,EAAAC,cAAA,YAAO2F,EAAKtB,gBAS5BO,EAAA7E,EAAAC,cAAA8E,EAAA/E,EAAA,CAAKgF,OAAQ,IACXH,EAAA7E,EAAAC,cAAAgF,EAAAjF,EAAA,CAAKkF,GAAI,GACPL,EAAA7E,EAAAC,cAACkF,EAAA,EAAD,CAAOf,MAAM,qBAAMtE,OAAQ,KACzB+E,EAAA7E,EAAAC,cAAC4F,EAAD,QAGJhB,EAAA7E,EAAAC,cAAAgF,EAAAjF,EAAA,CAAKkF,GAAI,GACPL,EAAA7E,EAAAC,cAACkF,EAAA,EAAD,CAAOf,MAAM,eAAKtE,OAAQ,KACxB+E,EAAA7E,EAAAC,cAAC6F,EAAD,QAGJjB,EAAA7E,EAAAC,cAAAgF,EAAAjF,EAAA,CAAKkF,GAAI,GACPL,EAAA7E,EAAAC,cAACkF,EAAA,EAAD,CAAOf,MAAM,qBAAMtE,OAAQ,KACzB+E,EAAA7E,EAAAC,cAAC8F,EAAD,CAAML,KAAMf,gBApFWqB,SA+FjCD,EAAO,SAAAxG,GACX,OACEsF,EAAA7E,EAAAC,cAACrB,EAAD,CAAO8G,KAAMnG,EAAMmG,KAAMO,MAAO,CAAEC,MAAO,CAAEC,aAAc,MACvDtB,EAAA7E,EAAAC,cAAC0D,EAAD,CAAMyC,KAAK,SACXvB,EAAA7E,EAAAC,cAAC0D,EAAD,CAAMyC,KAAK,UACXvB,EAAA7E,EAAAC,cAAC4D,EAAD,CAASwC,WAAY,CAAEd,KAAM,OAC7BV,EAAA7E,EAAAC,cAAC2D,EAAD,CACE2B,KAAK,WACL7C,SAAS,aACT4D,MAAO,CACL,OACA,CAAC,UAAW,UAAW,UAAW,UAAW,gBAQjDb,EAAO,SAAAlG,GACX,IACMgH,GADK,IAAIC,KACDC,aAAaC,OAAOnH,EAAMmG,MAOxC,OANAa,EAAGI,UAAU,CACXpB,KAAM,OACNqB,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACjE/D,IAAK,eACLC,MAAO,mCAGP+B,EAAA7E,EAAAC,cAACrB,EAAD,CAAO8G,KAAMa,GACX1B,EAAA7E,EAAAC,cAAC0D,EAAD,CAAMyC,KAAK,iBACXvB,EAAA7E,EAAAC,cAAC0D,EAAD,CAAMyC,KAAK,mCACXvB,EAAA7E,EAAAC,cAAC6D,EAAD,MACAe,EAAA7E,EAAAC,cAAC4D,EAAD,CAASwC,WAAY,CAAEd,KAAM,OAC7BV,EAAA7E,EAAAC,cAAC2D,EAAD,CACE2B,KAAK,WACL7C,SAAS,8CACT4D,MAAO,OACPO,OAAQ,CAAC,CAAEtB,KAAM,QAASuB,YAAa,EAAI,SAM7ChB,EAAO,SAAAvG,GACX,IAQMgH,EAAK,IAAIC,IAAQO,SACvBR,EAAGG,OATU,CACX,CAAEd,KAAM,qBAAOoB,MAAO,IACtB,CAAEpB,KAAM,qBAAOoB,MAAO,IACtB,CAAEpB,KAAM,qBAAOoB,MAAO,IACtB,CAAEpB,KAAM,qBAAOoB,MAAO,IACtB,CAAEpB,KAAM,qBAAOoB,MAAO,KAIRL,UAAU,CACxBpB,KAAM,UACN0B,MAAO,QACPC,UAAW,OACXC,GAAI,YAUN,OACEtC,EAAA7E,EAAAC,cAACrB,EAAD,CAAO8G,KAAMa,EAAIN,MATN,CACXmB,QAAS,CACPC,UAAW,SAAAC,GAET,OADAA,EAAY,IAANA,EAAY,OAMQnH,QAAS,IACrC0E,EAAA7E,EAAAC,cAAC8D,EAAD,CAAOwB,KAAM,QAASgC,OAAQ,IAAMC,YAAa,KACjD3C,EAAA7E,EAAAC,cAAC0D,EAAD,CAAMyC,KAAK,YACXvB,EAAA7E,EAAAC,cAAC6D,EAAD,CACEpB,SAAS,QACT+E,SAAUC,OAAOC,YAAc,EAAI,IACnCC,SAAU,MAEZ/C,EAAA7E,EAAAC,cAAC4D,EAAD,CACEgE,WAAW,EACXC,QAAQ,sGAEVjD,EAAA7E,EAAAC,cAAC2D,EAAD,CACE2B,KAAK,gBACL7C,SAAS,UACT4D,MAAM,OACNyB,QAAS,CACP,eACA,SAACnC,EAAMwB,GAEL,MAAO,CACLhB,KAAMR,EACN9C,MAHFsE,EAAoB,IAAVA,EAAgB,OAO9B5D,MAAO,CAAEwE,UAAW,EAAGC,OAAQ,SAE/BpD,EAAA7E,EAAAC,cAAC+D,EAAD,CACEkE,QAAQ,UACRb,UAAW,SAACC,EAAK1B,GACf,OAAOA,EAAKuC,MAAMvC,KAAO,KAAO0B,QAStCzB,EAAQ,SAAAtG,GACZ,IAeMgH,GADK,IAAIC,KACDC,aAAaC,OAfd,CACX,CAAE0B,MAAO,MAAOC,MAAO,EAAKC,OAAQ,KACpC,CAAEF,MAAO,MAAOC,MAAO,IAAKC,OAAQ,KACpC,CAAEF,MAAO,MAAOC,MAAO,IAAKC,OAAQ,KACpC,CAAEF,MAAO,MAAOC,MAAO,KAAMC,OAAQ,KACrC,CAAEF,MAAO,MAAOC,MAAO,KAAMC,OAAQ,MACrC,CAAEF,MAAO,MAAOC,MAAO,KAAMC,OAAQ,MACrC,CAAEF,MAAO,MAAOC,MAAO,KAAMC,OAAQ,IACrC,CAAEF,MAAO,MAAOC,MAAO,KAAMC,OAAQ,MACrC,CAAEF,MAAO,MAAOC,MAAO,KAAMC,OAAQ,MACrC,CAAEF,MAAO,MAAOC,MAAO,KAAMC,OAAQ,MACrC,CAAEF,MAAO,MAAOC,MAAO,KAAMC,OAAQ,KACrC,CAAEF,MAAO,MAAOC,MAAO,IAAKC,OAAQ,OAItC/B,EAAGI,UAAU,CACXpB,KAAM,OACNqB,OAAQ,CAAC,QAAS,UAClB/D,IAAK,OACLC,MAAO,gBAQT,OACE+B,EAAA7E,EAAAC,cAACrB,EAAD,CAAO8G,KAAMa,EAAIN,MANN,CACXmC,MAAO,CACLG,MAAO,CAAC,EAAG,MAKX1D,EAAA7E,EAAAC,cAAC6D,EAAD,MACAe,EAAA7E,EAAAC,cAAC0D,EAAD,CAAMyC,KAAK,UACXvB,EAAA7E,EAAAC,cAAC0D,EAAD,CAAMyC,KAAK,cAAcoC,MAAO,CAAEnB,UAAW,SAAAC,GAAG,SAAAjD,OAAOiD,EAAP,aAChDzC,EAAA7E,EAAAC,cAAC4D,EAAD,CAASwC,WAAY,CAAEd,KAAM,OAC7BV,EAAA7E,EAAAC,cAAC2D,EAAD,CAAM2B,KAAK,OAAO7C,SAAS,oBAAoBlD,KAAM,EAAG8G,MAAO,SAC/DzB,EAAA7E,EAAAC,cAAC2D,EAAD,CACE2B,KAAK,QACL7C,SAAS,oBACTlD,KAAM,EACNgB,MAAO,SACP8F,MAAO,OACP9C,MAAO,CAAEyE,OAAQ,OAAQD,UAAW,uNCvQtCS,UAAUC,EAAA1I,EAAMyI,SAChBE,EAAO,SAAAC,KAIPC,cAKJ,SAAAA,EAAYtJ,GAAO,IAAAJ,EAAA,OAAAQ,OAAAmJ,EAAA,EAAAnJ,CAAAN,KAAAwJ,IACjB1J,EAAAQ,OAAAoJ,EAAA,EAAApJ,CAAAN,KAAAM,OAAAqJ,EAAA,EAAArJ,CAAAkJ,GAAAjH,KAAAvC,KAAME,KAqBR0J,SAAW,SAAAC,GAAM,OAAI,SAAAC,GAAK,IAChBC,EAAajK,EAAKI,MAAlB6J,SAERjK,EAAKoD,SAAS,CACZ2G,SACAG,UAAU,IAGRD,GACFA,EAAS,CACPF,SACAG,UAAU,MAjCGlK,EAsCnBmK,WAAa,SAAAD,GAAQ,OAAI,SAAAF,GAAK,IACpBC,EAAajK,EAAKI,MAAlB6J,SAERjK,EAAKoD,SAAS,CACZ8G,WACAH,QAAQ,IAGNE,GACFA,EAAS,CACPC,WACAH,QAAQ,MAjDK/J,EAsDnBoK,UAAY,WACVpK,EAAKoD,SAAS,CACZiH,QAASrK,EAAKsD,MAAM+G,QAAU,EAC9BC,cAAe,WAEjBtK,EAAKI,MAAMgK,WAAapK,EAAKI,MAAMgK,aA3DlBpK,EA8DnBuK,QAAU,WACWvK,EAAKsD,MAAhByG,OAENT,EAAQ,CACNrE,MAAO,eACP8D,QAAS,qEACTyB,KAAM,WACJxK,EAAKI,MAAMmK,SAAWvK,EAAKI,MAAMmK,aAIrCvK,EAAKI,MAAMmK,SAAWvK,EAAKI,MAAMmK,WAvEnCvK,EAAKsD,MAAQ,CACX4G,SAAU9J,EAAM8J,WAAY,EAC5BH,OAAQ3J,EAAM2J,SAAU,EACxBM,QAAS,EACTC,cAAe,IANAtK,yFAUOyK,GACxB,IAAMC,EAAK,GACP,aAAcD,EAChBC,EAAGR,UAAW,EACL,WAAYO,IACrBC,EAAGX,QAAS,GAEVvJ,OAAOmK,KAAKD,GAAI1I,QAClB9B,KAAKkD,SAASsH,oCA2DT,IAAAzK,EAAAC,KAAA6D,EAC8C7D,KAAKoD,MAAlDyG,EADDhG,EACCgG,OAAQG,EADTnG,EACSmG,SAAUG,EADnBtG,EACmBsG,QAASC,EAD5BvG,EAC4BuG,cAD5BnK,EAcHD,KAAKE,MAXPwK,EAHKzK,EAGLyK,MACAC,EAJK1K,EAIL0K,OACA7G,EALK7D,EAKL6D,UACAiB,EANK9E,EAML8E,MACAvE,EAPKP,EAOLO,MACAC,EARKR,EAQLQ,OACA0D,EATKlE,EASLkE,MACA/D,EAVKH,EAULG,SACA2F,EAXK9F,EAWL8F,OACAC,EAZK/F,EAYL+F,MACA4E,EAbK3K,EAaL2K,OAGIC,EAAaC,IAAGH,EAAQ7G,EAAW,CACvC4G,QAASA,EACTK,qBAAsBlB,EACtBmB,oBAAqBhB,EACrBhE,QAASA,IAGLiF,EAAM3K,OAAA4K,EAAA,EAAA5K,CAAA,GACP6D,EADO,CAEV3D,UAEI2K,EAAa,GACdtB,IACHsB,EAAW1K,OAASA,GAElBmK,IACFO,EAAWC,SAAW,QAGxB,IAAMC,EACc,qBAAXtF,EACLrF,EAAAC,EAAAC,cAAA,OAAKkD,UAAS,GAAAkB,OAAK2F,EAAL,YACZjK,EAAAC,EAAAC,cAAA,QAAMkD,UAAS,GAAAkB,OAAK2F,EAAL,kBAA6B5F,GAC5CrE,EAAAC,EAAAC,cAAA,QAAMkD,UAAS,GAAAkB,OAAK2F,EAAL,qBACbjK,EAAAC,EAAAC,cAAA,KAAGkD,UAAU,uBAAuBwH,QAAStL,KAAKkK,WAChDxJ,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMrF,KAAK,aAEbxF,EAAAC,EAAAC,cAAA,KACEkD,UAAU,2BACVwH,QAAStL,KAAK4J,UAASC,IAEvBnJ,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMrF,KAAI,GAAAlB,OAAK6E,EAAS,SAAW,cAErCnJ,EAAAC,EAAAC,cAAA,KACEkD,UAAU,0BACVwH,QAAStL,KAAKiK,YAAWD,IAEzBtJ,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMrF,KAAI,GAAAlB,OAAKgF,EAAW,OAAS,YAErCtJ,EAAAC,EAAAC,cAAA4K,EAAA7K,EAAA,CACEoE,MAAM,qEACN0G,UAAWzL,KAAKqK,QAChBqB,UAAU,YAEVhL,EAAAC,EAAAC,cAAA,KACEkD,UAAU,uBACVwH,QAASzB,EAAS7J,KAAKqK,QAAUf,GAEjC5I,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMrF,KAAK,cAMnBH,EAGJ,OACErF,EAAAC,EAAAC,cAAA,OAAKkD,UAAW+G,EAAY1G,MAAO8G,GAChCI,EACD3K,EAAAC,EAAAC,cAAA,OAAKkD,UAAS,GAAAkB,OAAK2F,EAAL,SAAoBxG,MAAOgH,GACvCzK,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CACE7H,UAAU,gBACVoC,KAAMkE,EACNwB,SAAU,SAAArC,GAAC,OAAIxJ,EAAKmD,SAAS,CAAEkH,cAAe,MAC9C5G,IAAK2G,GAEJ/J,YArKOyL,aAAdrC,EACGsC,aAAe,CACpBnB,OAAQ,eA2KGnB,QCtLAA","file":"static/js/24.937ab19a.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport * as BizCharts from 'bizcharts';\nimport resizeMe from '@/decorator/resizeMe';\nconst { Chart } = BizCharts;\n\n/**\n * 重写BizCharts的Chart，主要目地是传入外部size\n * BizCharts已经很好的封装了g2，最好的使用方式不是重造轮子，而是快速使用官网中的例子，并完美展现在我们的框架中\n * 所以我们没有新建Bar,Line,Pie这些组件，增加使用和学习的成本：）\n */\n@resizeMe({ refreshRate: 50 })\nclass Charts extends PureComponent {\n  onGetG2Instance = chart => {\n    this.chart = chart;\n  }\n\n  render() {\n    const { size, children, ...otherProps } = this.props;\n    const { width, height } = size;\n\n    return (\n      <Chart \n        height={height} \n        width={width} \n        padding={'auto'} \n        {...otherProps}\n        onGetG2Instance={(chart) => {\n          this.chart = chart;\n        }}\n      >\n        {children}\n      </Chart>\n    );\n  }\n}\n\nBizCharts.Chart = Charts;\nexport default BizCharts;\n","// 全局 G2 设置\nimport { track, setTheme } from 'bizcharts';\nimport G2 from './G2';\n\nconst config = {\n  defaultColor: '#1089ff',\n  shape: {\n    interval: {\n      fillOpacity: 1\n    }\n  }\n};\n\ntrack(false);\nsetTheme(config);\nexport default G2;\n","import React, { PureComponent } from 'react';\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor';\nimport $$ from 'cmn-utils';\nconst { debounce, throttle } = $$;\n\n/**\n * 在一个类上增加这个装饰器，可以监听组件的大小变化，\n * 被包装的类在porps中将注入组件的width和height，并且\n * 在上级函组件中可以使用onResize函数\n * @param {*} config\n */\nconst defaultConfig = {\n  refreshRate: 16, // 调用频率\n  refreshMode: 'throttle' // 使用函数，只能是节流或防抖函数[throttle | debounce]\n};\n\nconst resizeMe = (config = defaultConfig) => {\n  const refreshFunc = config.refreshMode === 'throttle' ? throttle : debounce;\n\n  return WrappedComponent => {\n    return class extends PureComponent {\n      constructor(props) {\n        super(props);\n        this.onResizeStrategy = refreshFunc(this.onResize, config.refreshRate);\n        this.state = {\n          width: undefined,\n          height: undefined,\n          position: undefined\n        };\n      }\n\n      componentDidMount() {\n        const element = this.element.parentNode;\n        this.resizeSensor = new ResizeSensor(element, this.onResizeStrategy);\n        this.onResizeStrategy();\n      }\n\n      componentWillUnmount() {\n        const element = this.element.parentNode;\n        this.resizeSensor.detach(element, this.onResizeStrategy);\n      }\n\n      onResize = () => {\n        if (!this.element) return;\n\n        const element = this.element.parentNode;\n        const { onResize } = this.props;\n        const {\n          width,\n          height,\n          paddingLeft,\n          paddingRight,\n          paddingTop,\n          paddingBottom\n        } = getComputedStyle(element);\n\n        const size = {\n          width:\n            parseInt(width, 10) -\n            parseInt(paddingLeft, 10) -\n            parseInt(paddingRight, 10),\n          height:\n            parseInt(height, 10) -\n            parseInt(paddingTop, 10) -\n            parseInt(paddingBottom, 10)\n        };\n        this.setState(size);\n\n        onResize && onResize(size);\n      };\n\n      render() {\n        const { width, height } = this.state;\n        const { className, ...otherProps } = this.props;\n        const styles = {\n          position: 'relative',\n          width: '100%',\n          height: '100%'\n        };\n        return (\n          <div\n            ref={node => (this.element = node)}\n            style={styles}\n            className={className}\n          >\n            {width && height ? (\n              <WrappedComponent {...otherProps} size={{ ...this.state }} />\n            ) : null}\n          </div>\n        );\n      }\n    };\n  };\n};\n\nexport default resizeMe;\n","import React from 'react';\nimport { connect } from 'dva';\nimport { Layout, Col, Row } from 'antd';\nimport Icon from 'components/Icon';\nimport BaseComponent from 'components/BaseComponent';\nimport Panel from 'components/Panel';\nimport G2 from 'components/Charts/G2';\nimport DataSet from '@antv/data-set';\nimport './index.less';\nconst { Content } = Layout;\nconst { Chart, Axis, Geom, Tooltip, Legend, Coord, Label } = G2;\n\nconst rankingListData = [];\nfor (let i = 0; i < 7; i += 1) {\n  rankingListData.push({\n    title: `工专路 ${i} 号店`,\n    total: 323234\n  });\n}\n\n@connect(({ dashboard }) => ({\n  dashboard\n}))\nexport default class Dashboard extends BaseComponent {\n  render() {\n    const { dashboard } = this.props;\n    const { bar1, bar2 } = dashboard;\n    return (\n      <Layout className=\"full-layout page dashboard-page\">\n        <Content>\n          <Row gutter={20}>\n            <Col md={6}>\n              <Panel className=\"qq\" header={false} cover>\n                <Icon type=\"qq\" antd />\n                <h2>\n                  <b>523</b>\n                </h2>\n                <h5 className=\"text-muted\">QQ</h5>\n              </Panel>\n            </Col>\n            <Col md={6}>\n              <Panel className=\"wechat\" header={false} cover>\n                <Icon type=\"wechat\" antd />\n                <h2>\n                  <b>99+</b>\n                </h2>\n                <h5 className=\"text-muted\">微信</h5>\n              </Panel>\n            </Col>\n            <Col md={6}>\n              <Panel className=\"skype\" header={false} cover>\n                <Icon type=\"skype\" antd />\n                <h2>\n                  <b>2</b>\n                </h2>\n                <h5 className=\"text-muted\">skype</h5>\n              </Panel>\n            </Col>\n            <Col md={6}>\n              <Panel className=\"github\" header={false} cover>\n                <Icon type=\"github\" antd />\n                <h2>\n                  <b>999</b>\n                </h2>\n                <h5 className=\"text-muted\">github</h5>\n              </Panel>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Panel title=\"数据面板组件\" height={300}>\n                <div className=\"flex\">\n                  <div className=\"flex-auto-hidden flex flex-column\">\n                    <h4 className=\"flex-none\">销售额分布</h4>\n                    <div className=\"flex-auto-hidden\">\n                      <Bar2 data={bar2} />\n                    </div>\n                  </div>\n                  <div className=\"flex-none sales-order\">\n                    <h4>门店销售额排名</h4>\n                    <ul>\n                      {rankingListData.map((item, i) => (\n                        <li key={item.title}>\n                          <span>{i + 1}</span>\n                          <span>{item.title}</span>\n                          <span>{item.total}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </Panel>\n            </Col>\n          </Row>\n          <Row gutter={20}>\n            <Col md={8}>\n              <Panel title=\"折线图\" height={260}>\n                <Line1 />\n              </Panel>\n            </Col>\n            <Col md={8}>\n              <Panel title=\"饼图\" height={260}>\n                <Pie1 />\n              </Panel>\n            </Col>\n            <Col md={8}>\n              <Panel title=\"柱状图\" height={260}>\n                <Bar1 data={bar1} />\n              </Panel>\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\n// source https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/bar/basic-column\nconst Bar1 = props => {\n  return (\n    <Chart data={props.data} scale={{ sales: { tickInterval: 20 } }}>\n      <Axis name=\"year\" />\n      <Axis name=\"sales\" />\n      <Tooltip crosshairs={{ type: 'y' }} />\n      <Geom\n        type=\"interval\"\n        position=\"year*sales\"\n        color={[\n          'year',\n          ['#3da0ff', '#51ca73', '#fad337', '#424e87', '#985ce6']\n        ]}\n      />\n    </Chart>\n  );\n};\n\n// source https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/bar/grouped-column\nconst Bar2 = props => {\n  const ds = new DataSet();\n  const dv = ds.createView().source(props.data);\n  dv.transform({\n    type: 'fold',\n    fields: ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May.', 'Jun.', 'Jul.', 'Aug.'], // 展开字段集\n    key: '月份', // key字段\n    value: '月均降雨量' // value字段\n  });\n  return (\n    <Chart data={dv}>\n      <Axis name=\"月份\" />\n      <Axis name=\"月均降雨量\" />\n      <Legend />\n      <Tooltip crosshairs={{ type: 'y' }} />\n      <Geom\n        type=\"interval\"\n        position=\"月份*月均降雨量\"\n        color={'name'}\n        adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]}\n      />\n    </Chart>\n  );\n};\n\nconst Pie1 = props => {\n  const data = [\n    { item: '事例一', count: 40 },\n    { item: '事例二', count: 21 },\n    { item: '事例三', count: 17 },\n    { item: '事例四', count: 13 },\n    { item: '事例五', count: 9 }\n  ];\n\n  const dv = new DataSet.DataView();\n  dv.source(data).transform({\n    type: 'percent',\n    field: 'count',\n    dimension: 'item',\n    as: 'percent'\n  });\n  const cols = {\n    percent: {\n      formatter: val => {\n        val = val * 100 + '%';\n        return val;\n      }\n    }\n  };\n  return (\n    <Chart data={dv} scale={cols} padding={10}>\n      <Coord type={'theta'} radius={0.75} innerRadius={0.6} />\n      <Axis name=\"percent\" />\n      <Legend\n        position=\"right\"\n        offsetY={-window.innerHeight / 2 + 120}\n        offsetX={-100}\n      />\n      <Tooltip\n        showTitle={false}\n        itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\n      />\n      <Geom\n        type=\"intervalStack\"\n        position=\"percent\"\n        color=\"item\"\n        tooltip={[\n          'item*percent',\n          (item, percent) => {\n            percent = percent * 100 + '%';\n            return {\n              name: item,\n              value: percent\n            };\n          }\n        ]}\n        style={{ lineWidth: 1, stroke: '#fff' }}\n      >\n        <Label\n          content=\"percent\"\n          formatter={(val, item) => {\n            return item.point.item + ': ' + val;\n          }}\n        />\n      </Geom>\n    </Chart>\n  );\n};\n\n// https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/line/series\nconst Line1 = props => {\n  const data = [\n    { month: 'Jan', Tokyo: 7.0, London: 3.9 },\n    { month: 'Feb', Tokyo: 6.9, London: 4.2 },\n    { month: 'Mar', Tokyo: 9.5, London: 5.7 },\n    { month: 'Apr', Tokyo: 14.5, London: 8.5 },\n    { month: 'May', Tokyo: 18.4, London: 11.9 },\n    { month: 'Jun', Tokyo: 21.5, London: 15.2 },\n    { month: 'Jul', Tokyo: 25.2, London: 17.0 },\n    { month: 'Aug', Tokyo: 26.5, London: 16.6 },\n    { month: 'Sep', Tokyo: 23.3, London: 14.2 },\n    { month: 'Oct', Tokyo: 18.3, London: 10.3 },\n    { month: 'Nov', Tokyo: 13.9, London: 6.6 },\n    { month: 'Dec', Tokyo: 9.6, London: 4.8 }\n  ];\n  const ds = new DataSet();\n  const dv = ds.createView().source(data);\n  dv.transform({\n    type: 'fold',\n    fields: ['Tokyo', 'London'], // 展开字段集\n    key: 'city', // key字段\n    value: 'temperature' // value字段\n  });\n\n  const cols = {\n    month: {\n      range: [0, 1]\n    }\n  };\n  return (\n    <Chart data={dv} scale={cols}>\n      <Legend />\n      <Axis name=\"month\" />\n      <Axis name=\"temperature\" label={{ formatter: val => `${val}°C` }} />\n      <Tooltip crosshairs={{ type: 'y' }} />\n      <Geom type=\"line\" position=\"month*temperature\" size={2} color={'city'} />\n      <Geom\n        type=\"point\"\n        position=\"month*temperature\"\n        size={4}\n        shape={'circle'}\n        color={'city'}\n        style={{ stroke: '#fff', lineWidth: 1 }}\n      />\n    </Chart>\n  );\n};\n","import React, { Component } from 'react';\nimport Icon from '../Icon';\nimport cx from 'classnames';\nimport CSSAnimate from '../CSSAnimate';\nimport { Popconfirm, Modal } from 'antd';\nimport './style/index.less';\nconst confirm = Modal.confirm;\nconst noop = _ => {};\n/**\n * 面板组件\n */\nclass Panel extends Component {\n  static defaultProps = {\n    prefix: 'antui-panel'\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: props.collapse || false,\n      expand: props.expand || false,\n      refresh: 0,\n      animationName: ''\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const st = {};\n    if ('collapse' in nextProps) {\n      st.collapse = true;\n    } else if ('expand' in nextProps) {\n      st.expand = true;\n    }\n    if (Object.keys(st).length) {\n      this.setState(st);\n    }\n  }\n\n  onExpand = expand => e => {\n    const { onChange } = this.props;\n\n    this.setState({\n      expand,\n      collapse: false\n    });\n\n    if (onChange) {\n      onChange({\n        expand,\n        collapse: false\n      });\n    }\n  };\n\n  onCollapse = collapse => e => {\n    const { onChange } = this.props;\n\n    this.setState({\n      collapse,\n      expand: false\n    });\n\n    if (onChange) {\n      onChange({\n        collapse,\n        expand: false\n      });\n    }\n  };\n\n  onRefresh = () => {\n    this.setState({\n      refresh: this.state.refresh + 1,\n      animationName: 'fadeIn'\n    });\n    this.props.onRefresh && this.props.onRefresh();\n  };\n\n  onClose = () => {\n    const { expand } = this.state;\n    if (expand) {\n      confirm({\n        title: '提示',\n        content: '您确认要关闭这个面板？',\n        onOk: () => {\n          this.props.onClose && this.props.onClose();\n        }\n      });\n    } else {\n      this.props.onClose && this.props.onClose();\n    }\n  };\n\n  render() {\n    const { expand, collapse, refresh, animationName } = this.state;\n    const {\n      theme,\n      prefix,\n      className,\n      title,\n      width,\n      height,\n      style,\n      children,\n      header,\n      cover,\n      scroll,\n    } = this.props;\n\n    const classnames = cx(prefix, className, {\n      theme: !!theme,\n      'panel-fullscreen': !!expand,\n      'panel-collapsed': !!collapse,\n      cover: !!cover\n    });\n\n    const styles = {\n      ...style,\n      width\n    };\n    const bodyStyles = {};\n    if (!expand) {\n      bodyStyles.height = height;\n    }\n    if (scroll) {\n      bodyStyles.overflow = 'auto';\n    }\n\n    const Header =\n      typeof header === 'undefined' ? (\n        <div className={`${prefix}-header`}>\n          <span className={`${prefix}-header-title`}>{title}</span>\n          <span className={`${prefix}-header-controls`}>\n            <a className=\"panel-control-loader\" onClick={this.onRefresh}>\n              <Icon type=\"refresh\" />\n            </a>\n            <a\n              className=\"panel-control-fullscreen\"\n              onClick={this.onExpand(expand ? false : true)}\n            >\n              <Icon type={`${expand ? 'shrink' : 'enlarge'}`} />\n            </a>\n            <a\n              className=\"panel-control-collapsed\"\n              onClick={this.onCollapse(collapse ? false : true)}\n            >\n              <Icon type={`${collapse ? 'plus' : 'minus'}`} />\n            </a>\n            <Popconfirm\n              title=\"您确认要关闭这个面板？\"\n              onConfirm={this.onClose}\n              placement=\"topRight\"\n            >\n              <a\n                className=\"panel-control-remove\"\n                onClick={expand ? this.onClose : noop}\n              >\n                <Icon type=\"close\" />\n              </a>\n            </Popconfirm>\n          </span>\n        </div>\n      ) : (\n        header\n      );\n\n    return (\n      <div className={classnames} style={styles}>\n        {Header}\n        <div className={`${prefix}-body`} style={bodyStyles}>\n          <CSSAnimate\n            className=\"panel-content\"\n            type={animationName}\n            callback={_ => this.setState({ animationName: '' })}\n            key={refresh}\n          >\n            {children}\n          </CSSAnimate>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Panel;\n","import Panel from './Panel';\n\nexport default Panel;"],"sourceRoot":""}